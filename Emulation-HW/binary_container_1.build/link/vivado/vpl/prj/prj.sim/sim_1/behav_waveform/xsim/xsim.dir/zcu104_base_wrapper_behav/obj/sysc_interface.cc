#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/zcu104_base_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::map<unsigned int, std::pair<unsigned int, std::list < void*> > > *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE(unsigned int netid, int len, char* pval)
    {
        unsigned int data_type = (*_glb_hdl_sc_channel_map)[netid].first;
        std::list<void*> list_of_ch = (*_glb_hdl_sc_channel_map)[netid].second;
        switch (data_type) {
            case 0 /*int*/ : { 
                int val = *((int*)(pval));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0,int>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 1 /*bool*/ : { 
                bool val = *((bool*)(pval));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0,bool>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 2 /*sc_logic*/ : { 
                sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 3 /*sc_bv*/ : { 
                switch (len) { 
                    case 1 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 2 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 3 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 4 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 6 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 8 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 9 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<9, sc_dt::sc_bv<9> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 12 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<12, sc_dt::sc_bv<12> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 16 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<16, sc_dt::sc_bv<16> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 24 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<24, sc_dt::sc_bv<24> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 32 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 40 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<40, sc_dt::sc_bv<40> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 48 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<48, sc_dt::sc_bv<48> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 49 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<49, sc_dt::sc_bv<49> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 64 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 80 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<80, sc_dt::sc_bv<80> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 96 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<96, sc_dt::sc_bv<96> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 120 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<120, sc_dt::sc_bv<120> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 128 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<128, sc_dt::sc_bv<128> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 256 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<256, sc_dt::sc_bv<256> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 512 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                        default: 
                            std::cout << "Error, unknown bitvector length: " << len << " NOT supported " << std::endl;
                            assert(0);
                }; 
                break;
            } 
            case 5 /*bit*/ : { 
                sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*it))->update_from_hdl(val);
                break;
            } 
            default: 
                std::cout << "Error, unknown type: " << data_type << " NOT supported " << std::endl;
                assert(0);
        };
    }


extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::map <unsigned int, std::pair<unsigned int, std::list<void*> > > ();
        sc_inst_1 = new zcu104_base_dpa_hub_0(".zcu104_base_wrapper.zcu104_base_i.System_DPA.dpa_hub");
        sc_inst_1->xsim_set_dbg_index(476);
        xsim_sc_channel<0, bool > *p_1_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_clk.bind(*p_1_s_aximm_clk);
        (*_glb_hdl_sc_channel_map)[3691].first = 1;
        (*_glb_hdl_sc_channel_map)[3691].second.push_front(p_1_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_1_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_aresetn.bind(*p_1_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map)[3677].first = 1;
        (*_glb_hdl_sc_channel_map)[3677].second.push_front(p_1_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_clk.bind(*p_1_trace_clk);
        (*_glb_hdl_sc_channel_map)[3703].first = 1;
        (*_glb_hdl_sc_channel_map)[3703].second.push_front(p_1_trace_clk);
        xsim_sc_channel<0, bool > *p_1_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_aresetn.bind(*p_1_trace_aresetn);
        (*_glb_hdl_sc_channel_map)[3702].first = 1;
        (*_glb_hdl_sc_channel_map)[3702].second.push_front(p_1_trace_aresetn);
        xsim_sc_channel<0, bool > *p_1_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_clk.bind(*p_1_axilite_clk);
        (*_glb_hdl_sc_channel_map)[3640].first = 1;
        (*_glb_hdl_sc_channel_map)[3640].second.push_front(p_1_axilite_clk);
        xsim_sc_channel<0, bool > *p_1_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_aresetn.bind(*p_1_axilite_aresetn);
        (*_glb_hdl_sc_channel_map)[3639].first = 1;
        (*_glb_hdl_sc_channel_map)[3639].second.push_front(p_1_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready0.bind(*p_1_trace_tready0);
        p_1_trace_tready0->set_sv_netview_offsetfromdp(6641472);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata0.bind(*p_1_trace_tdata0);
        (*_glb_hdl_sc_channel_map)[3704].first = 3;
        (*_glb_hdl_sc_channel_map)[3704].second.push_front(p_1_trace_tdata0);
        xsim_sc_channel<0, bool > *p_1_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast0.bind(*p_1_trace_tlast0);
        (*_glb_hdl_sc_channel_map)[3728].first = 1;
        (*_glb_hdl_sc_channel_map)[3728].second.push_front(p_1_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid0.bind(*p_1_trace_tid0);
        (*_glb_hdl_sc_channel_map)[3720].first = 3;
        (*_glb_hdl_sc_channel_map)[3720].second.push_front(p_1_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest0.bind(*p_1_trace_tdest0);
        (*_glb_hdl_sc_channel_map)[3712].first = 3;
        (*_glb_hdl_sc_channel_map)[3712].second.push_front(p_1_trace_tdest0);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid0.bind(*p_1_trace_tvalid0);
        (*_glb_hdl_sc_channel_map)[3744].first = 1;
        (*_glb_hdl_sc_channel_map)[3744].second.push_front(p_1_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_1_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready1.bind(*p_1_trace_tready1);
        p_1_trace_tready1->set_sv_netview_offsetfromdp(6641808);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata1.bind(*p_1_trace_tdata1);
        p_1_trace_tdata1->set_sv_netview_offsetfromdp(6641864);
        xsim_sc_channel<0, bool > *p_1_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast1.bind(*p_1_trace_tlast1);
        (*_glb_hdl_sc_channel_map)[3729].first = 1;
        (*_glb_hdl_sc_channel_map)[3729].second.push_front(p_1_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid1.bind(*p_1_trace_tid1);
        (*_glb_hdl_sc_channel_map)[3721].first = 3;
        (*_glb_hdl_sc_channel_map)[3721].second.push_front(p_1_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest1.bind(*p_1_trace_tdest1);
        (*_glb_hdl_sc_channel_map)[3713].first = 3;
        (*_glb_hdl_sc_channel_map)[3713].second.push_front(p_1_trace_tdest1);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid1.bind(*p_1_trace_tvalid1);
        (*_glb_hdl_sc_channel_map)[3745].first = 1;
        (*_glb_hdl_sc_channel_map)[3745].second.push_front(p_1_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata2.bind(*p_1_trace_tdata2);
        (*_glb_hdl_sc_channel_map)[3706].first = 3;
        (*_glb_hdl_sc_channel_map)[3706].second.push_front(p_1_trace_tdata2);
        xsim_sc_channel<0, bool > *p_1_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready2.bind(*p_1_trace_tready2);
        p_1_trace_tready2->set_sv_netview_offsetfromdp(6642200);
        xsim_sc_channel<0, bool > *p_1_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast2.bind(*p_1_trace_tlast2);
        (*_glb_hdl_sc_channel_map)[3730].first = 1;
        (*_glb_hdl_sc_channel_map)[3730].second.push_front(p_1_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid2.bind(*p_1_trace_tid2);
        (*_glb_hdl_sc_channel_map)[3722].first = 3;
        (*_glb_hdl_sc_channel_map)[3722].second.push_front(p_1_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest2.bind(*p_1_trace_tdest2);
        (*_glb_hdl_sc_channel_map)[3714].first = 3;
        (*_glb_hdl_sc_channel_map)[3714].second.push_front(p_1_trace_tdest2);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid2.bind(*p_1_trace_tvalid2);
        (*_glb_hdl_sc_channel_map)[3746].first = 1;
        (*_glb_hdl_sc_channel_map)[3746].second.push_front(p_1_trace_tvalid2);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata3 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata3.bind(*p_1_trace_tdata3);
        (*_glb_hdl_sc_channel_map)[3707].first = 3;
        (*_glb_hdl_sc_channel_map)[3707].second.push_front(p_1_trace_tdata3);
        xsim_sc_channel<0, bool > *p_1_trace_tready3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready3.bind(*p_1_trace_tready3);
        p_1_trace_tready3->set_sv_netview_offsetfromdp(6642536);
        xsim_sc_channel<0, bool > *p_1_trace_tlast3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast3.bind(*p_1_trace_tlast3);
        (*_glb_hdl_sc_channel_map)[3731].first = 1;
        (*_glb_hdl_sc_channel_map)[3731].second.push_front(p_1_trace_tlast3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid3.bind(*p_1_trace_tid3);
        (*_glb_hdl_sc_channel_map)[3723].first = 3;
        (*_glb_hdl_sc_channel_map)[3723].second.push_front(p_1_trace_tid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest3.bind(*p_1_trace_tdest3);
        (*_glb_hdl_sc_channel_map)[3715].first = 3;
        (*_glb_hdl_sc_channel_map)[3715].second.push_front(p_1_trace_tdest3);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid3.bind(*p_1_trace_tvalid3);
        (*_glb_hdl_sc_channel_map)[3747].first = 1;
        (*_glb_hdl_sc_channel_map)[3747].second.push_front(p_1_trace_tvalid3);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata4 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata4.bind(*p_1_trace_tdata4);
        (*_glb_hdl_sc_channel_map)[3708].first = 3;
        (*_glb_hdl_sc_channel_map)[3708].second.push_front(p_1_trace_tdata4);
        xsim_sc_channel<0, bool > *p_1_trace_tready4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready4.bind(*p_1_trace_tready4);
        p_1_trace_tready4->set_sv_netview_offsetfromdp(6642872);
        xsim_sc_channel<0, bool > *p_1_trace_tlast4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast4.bind(*p_1_trace_tlast4);
        (*_glb_hdl_sc_channel_map)[3732].first = 1;
        (*_glb_hdl_sc_channel_map)[3732].second.push_front(p_1_trace_tlast4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid4.bind(*p_1_trace_tid4);
        (*_glb_hdl_sc_channel_map)[3724].first = 3;
        (*_glb_hdl_sc_channel_map)[3724].second.push_front(p_1_trace_tid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest4.bind(*p_1_trace_tdest4);
        (*_glb_hdl_sc_channel_map)[3716].first = 3;
        (*_glb_hdl_sc_channel_map)[3716].second.push_front(p_1_trace_tdest4);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid4.bind(*p_1_trace_tvalid4);
        (*_glb_hdl_sc_channel_map)[3748].first = 1;
        (*_glb_hdl_sc_channel_map)[3748].second.push_front(p_1_trace_tvalid4);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata5 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata5.bind(*p_1_trace_tdata5);
        (*_glb_hdl_sc_channel_map)[3709].first = 3;
        (*_glb_hdl_sc_channel_map)[3709].second.push_front(p_1_trace_tdata5);
        xsim_sc_channel<0, bool > *p_1_trace_tready5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready5.bind(*p_1_trace_tready5);
        p_1_trace_tready5->set_sv_netview_offsetfromdp(6643208);
        xsim_sc_channel<0, bool > *p_1_trace_tlast5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast5.bind(*p_1_trace_tlast5);
        (*_glb_hdl_sc_channel_map)[3733].first = 1;
        (*_glb_hdl_sc_channel_map)[3733].second.push_front(p_1_trace_tlast5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid5.bind(*p_1_trace_tid5);
        (*_glb_hdl_sc_channel_map)[3725].first = 3;
        (*_glb_hdl_sc_channel_map)[3725].second.push_front(p_1_trace_tid5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest5.bind(*p_1_trace_tdest5);
        (*_glb_hdl_sc_channel_map)[3717].first = 3;
        (*_glb_hdl_sc_channel_map)[3717].second.push_front(p_1_trace_tdest5);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid5.bind(*p_1_trace_tvalid5);
        (*_glb_hdl_sc_channel_map)[3749].first = 1;
        (*_glb_hdl_sc_channel_map)[3749].second.push_front(p_1_trace_tvalid5);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata6 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata6.bind(*p_1_trace_tdata6);
        (*_glb_hdl_sc_channel_map)[3710].first = 3;
        (*_glb_hdl_sc_channel_map)[3710].second.push_front(p_1_trace_tdata6);
        xsim_sc_channel<0, bool > *p_1_trace_tready6 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready6.bind(*p_1_trace_tready6);
        p_1_trace_tready6->set_sv_netview_offsetfromdp(6643544);
        xsim_sc_channel<0, bool > *p_1_trace_tlast6 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast6.bind(*p_1_trace_tlast6);
        (*_glb_hdl_sc_channel_map)[3734].first = 1;
        (*_glb_hdl_sc_channel_map)[3734].second.push_front(p_1_trace_tlast6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid6 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid6.bind(*p_1_trace_tid6);
        (*_glb_hdl_sc_channel_map)[3726].first = 3;
        (*_glb_hdl_sc_channel_map)[3726].second.push_front(p_1_trace_tid6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest6 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest6.bind(*p_1_trace_tdest6);
        (*_glb_hdl_sc_channel_map)[3718].first = 3;
        (*_glb_hdl_sc_channel_map)[3718].second.push_front(p_1_trace_tdest6);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid6 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid6.bind(*p_1_trace_tvalid6);
        (*_glb_hdl_sc_channel_map)[3750].first = 1;
        (*_glb_hdl_sc_channel_map)[3750].second.push_front(p_1_trace_tvalid6);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata7 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata7.bind(*p_1_trace_tdata7);
        (*_glb_hdl_sc_channel_map)[3711].first = 3;
        (*_glb_hdl_sc_channel_map)[3711].second.push_front(p_1_trace_tdata7);
        xsim_sc_channel<0, bool > *p_1_trace_tready7 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready7.bind(*p_1_trace_tready7);
        p_1_trace_tready7->set_sv_netview_offsetfromdp(6643880);
        xsim_sc_channel<0, bool > *p_1_trace_tlast7 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast7.bind(*p_1_trace_tlast7);
        (*_glb_hdl_sc_channel_map)[3735].first = 1;
        (*_glb_hdl_sc_channel_map)[3735].second.push_front(p_1_trace_tlast7);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid7 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid7.bind(*p_1_trace_tid7);
        (*_glb_hdl_sc_channel_map)[3727].first = 3;
        (*_glb_hdl_sc_channel_map)[3727].second.push_front(p_1_trace_tid7);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest7 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest7.bind(*p_1_trace_tdest7);
        (*_glb_hdl_sc_channel_map)[3719].first = 3;
        (*_glb_hdl_sc_channel_map)[3719].second.push_front(p_1_trace_tdest7);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid7 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid7.bind(*p_1_trace_tvalid7);
        (*_glb_hdl_sc_channel_map)[3751].first = 1;
        (*_glb_hdl_sc_channel_map)[3751].second.push_front(p_1_trace_tvalid7);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[3644].first = 3;
        (*_glb_hdl_sc_channel_map)[3644].second.push_front(p_1_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[3646].first = 1;
        (*_glb_hdl_sc_channel_map)[3646].second.push_front(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(6644272);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[3654].first = 3;
        (*_glb_hdl_sc_channel_map)[3654].second.push_front(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[3656].first = 3;
        (*_glb_hdl_sc_channel_map)[3656].second.push_front(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[3657].first = 1;
        (*_glb_hdl_sc_channel_map)[3657].second.push_front(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(6644496);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(6644552);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[3647].first = 1;
        (*_glb_hdl_sc_channel_map)[3647].second.push_front(p_1_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(6644664);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[3641].first = 3;
        (*_glb_hdl_sc_channel_map)[3641].second.push_front(p_1_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[3643].first = 1;
        (*_glb_hdl_sc_channel_map)[3643].second.push_front(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(6644832);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(6644888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(6644944);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(6645000);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[3651].first = 1;
        (*_glb_hdl_sc_channel_map)[3651].second.push_front(p_1_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_awaddr.bind(*p_1_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map)[3661].first = 3;
        (*_glb_hdl_sc_channel_map)[3661].second.push_front(p_1_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awvalid.bind(*p_1_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map)[3663].first = 1;
        (*_glb_hdl_sc_channel_map)[3663].second.push_front(p_1_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awready.bind(*p_1_s_axihub_awready);
        p_1_s_axihub_awready->set_sv_netview_offsetfromdp(6645224);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_wdata.bind(*p_1_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map)[3671].first = 3;
        (*_glb_hdl_sc_channel_map)[3671].second.push_front(p_1_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axihub_wstrb.bind(*p_1_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map)[3673].first = 3;
        (*_glb_hdl_sc_channel_map)[3673].second.push_front(p_1_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wvalid.bind(*p_1_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map)[3674].first = 1;
        (*_glb_hdl_sc_channel_map)[3674].second.push_front(p_1_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wready.bind(*p_1_s_axihub_wready);
        p_1_s_axihub_wready->set_sv_netview_offsetfromdp(6645448);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bvalid.bind(*p_1_s_axihub_bvalid);
        p_1_s_axihub_bvalid->set_sv_netview_offsetfromdp(6645504);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bready.bind(*p_1_s_axihub_bready);
        (*_glb_hdl_sc_channel_map)[3664].first = 1;
        (*_glb_hdl_sc_channel_map)[3664].second.push_front(p_1_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_bresp.bind(*p_1_s_axihub_bresp);
        p_1_s_axihub_bresp->set_sv_netview_offsetfromdp(6645616);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_araddr.bind(*p_1_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map)[3658].first = 3;
        (*_glb_hdl_sc_channel_map)[3658].second.push_front(p_1_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arvalid.bind(*p_1_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map)[3660].first = 1;
        (*_glb_hdl_sc_channel_map)[3660].second.push_front(p_1_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arready.bind(*p_1_s_axihub_arready);
        p_1_s_axihub_arready->set_sv_netview_offsetfromdp(6645784);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_rdata.bind(*p_1_s_axihub_rdata);
        p_1_s_axihub_rdata->set_sv_netview_offsetfromdp(6645840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_rresp.bind(*p_1_s_axihub_rresp);
        p_1_s_axihub_rresp->set_sv_netview_offsetfromdp(6645896);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rvalid.bind(*p_1_s_axihub_rvalid);
        p_1_s_axihub_rvalid->set_sv_netview_offsetfromdp(6645952);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rready.bind(*p_1_s_axihub_rready);
        (*_glb_hdl_sc_channel_map)[3668].first = 1;
        (*_glb_hdl_sc_channel_map)[3668].second.push_front(p_1_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_awaddr.bind(*p_1_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map)[3682].first = 3;
        (*_glb_hdl_sc_channel_map)[3682].second.push_front(p_1_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awvalid.bind(*p_1_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map)[3687].first = 1;
        (*_glb_hdl_sc_channel_map)[3687].second.push_front(p_1_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awready.bind(*p_1_s_aximm_awready);
        p_1_s_aximm_awready->set_sv_netview_offsetfromdp(6646176);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_awlen.bind(*p_1_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map)[3684].first = 3;
        (*_glb_hdl_sc_channel_map)[3684].second.push_front(p_1_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_awsize.bind(*p_1_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map)[3686].first = 3;
        (*_glb_hdl_sc_channel_map)[3686].second.push_front(p_1_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_awburst.bind(*p_1_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map)[3683].first = 3;
        (*_glb_hdl_sc_channel_map)[3683].second.push_front(p_1_s_aximm_awburst);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_1_s_aximm_awid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_1->s_aximm_awid.bind(*p_1_s_aximm_awid);
        (*_glb_hdl_sc_channel_map)[2350].first = 3;
        (*_glb_hdl_sc_channel_map)[2350].second.push_front(p_1_s_aximm_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_wdata.bind(*p_1_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map)[3697].first = 3;
        (*_glb_hdl_sc_channel_map)[3697].second.push_front(p_1_s_aximm_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_aximm_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_aximm_wstrb.bind(*p_1_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map)[3700].first = 3;
        (*_glb_hdl_sc_channel_map)[3700].second.push_front(p_1_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wvalid.bind(*p_1_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map)[3701].first = 1;
        (*_glb_hdl_sc_channel_map)[3701].second.push_front(p_1_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wready.bind(*p_1_s_aximm_wready);
        p_1_s_aximm_wready->set_sv_netview_offsetfromdp(6646624);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bvalid.bind(*p_1_s_aximm_bvalid);
        p_1_s_aximm_bvalid->set_sv_netview_offsetfromdp(6646680);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bready.bind(*p_1_s_aximm_bready);
        (*_glb_hdl_sc_channel_map)[3688].first = 1;
        (*_glb_hdl_sc_channel_map)[3688].second.push_front(p_1_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wlast.bind(*p_1_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map)[3698].first = 1;
        (*_glb_hdl_sc_channel_map)[3698].second.push_front(p_1_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rlast.bind(*p_1_s_aximm_rlast);
        p_1_s_aximm_rlast->set_sv_netview_offsetfromdp(6646848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_bresp.bind(*p_1_s_aximm_bresp);
        p_1_s_aximm_bresp->set_sv_netview_offsetfromdp(6646904);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_1_s_aximm_bid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_1->s_aximm_bid.bind(*p_1_s_aximm_bid);
        p_1_s_aximm_bid->set_sv_netview_offsetfromdp(6646960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_araddr.bind(*p_1_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map)[3675].first = 3;
        (*_glb_hdl_sc_channel_map)[3675].second.push_front(p_1_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arvalid.bind(*p_1_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map)[3681].first = 1;
        (*_glb_hdl_sc_channel_map)[3681].second.push_front(p_1_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arready.bind(*p_1_s_aximm_arready);
        p_1_s_aximm_arready->set_sv_netview_offsetfromdp(6647128);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_arlen.bind(*p_1_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map)[3678].first = 3;
        (*_glb_hdl_sc_channel_map)[3678].second.push_front(p_1_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_arsize.bind(*p_1_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map)[3680].first = 3;
        (*_glb_hdl_sc_channel_map)[3680].second.push_front(p_1_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_arburst.bind(*p_1_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map)[3676].first = 3;
        (*_glb_hdl_sc_channel_map)[3676].second.push_front(p_1_s_aximm_arburst);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_1_s_aximm_arid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_1->s_aximm_arid.bind(*p_1_s_aximm_arid);
        (*_glb_hdl_sc_channel_map)[2351].first = 3;
        (*_glb_hdl_sc_channel_map)[2351].second.push_front(p_1_s_aximm_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_rdata.bind(*p_1_s_aximm_rdata);
        p_1_s_aximm_rdata->set_sv_netview_offsetfromdp(6647408);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_1_s_aximm_rid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_1->s_aximm_rid.bind(*p_1_s_aximm_rid);
        p_1_s_aximm_rid->set_sv_netview_offsetfromdp(6647464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_rresp.bind(*p_1_s_aximm_rresp);
        p_1_s_aximm_rresp->set_sv_netview_offsetfromdp(6647520);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rvalid.bind(*p_1_s_aximm_rvalid);
        p_1_s_aximm_rvalid->set_sv_netview_offsetfromdp(6647576);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rready.bind(*p_1_s_aximm_rready);
        (*_glb_hdl_sc_channel_map)[3694].first = 1;
        (*_glb_hdl_sc_channel_map)[3694].second.push_front(p_1_s_aximm_rready);
        sc_inst_2 = new zcu104_base_dpa_mon0_0_0(".zcu104_base_wrapper.zcu104_base_i.System_DPA.dpa_mon0_0");
        sc_inst_2->xsim_set_dbg_index(477);
        xsim_sc_channel<0, bool > *p_2_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_clk.bind(*p_2_mon_clk);
        (*_glb_hdl_sc_channel_map)[3791].first = 1;
        (*_glb_hdl_sc_channel_map)[3791].second.push_front(p_2_mon_clk);
        xsim_sc_channel<0, bool > *p_2_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_resetn.bind(*p_2_mon_resetn);
        (*_glb_hdl_sc_channel_map)[3792].first = 1;
        (*_glb_hdl_sc_channel_map)[3792].second.push_front(p_2_mon_resetn);
        xsim_sc_channel<0, bool > *p_2_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_clk.bind(*p_2_trace_clk);
        (*_glb_hdl_sc_channel_map)[3810].first = 1;
        (*_glb_hdl_sc_channel_map)[3810].second.push_front(p_2_trace_clk);
        xsim_sc_channel<0, bool > *p_2_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_rst.bind(*p_2_trace_rst);
        (*_glb_hdl_sc_channel_map)[3811].first = 1;
        (*_glb_hdl_sc_channel_map)[3811].second.push_front(p_2_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[2342].first = 3;
        (*_glb_hdl_sc_channel_map)[2342].second.push_front(p_2_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[2340].first = 1;
        (*_glb_hdl_sc_channel_map)[2340].second.push_front(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(6648072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[2337].first = 3;
        (*_glb_hdl_sc_channel_map)[2337].second.push_front(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[2336].first = 3;
        (*_glb_hdl_sc_channel_map)[2336].second.push_front(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[2335].first = 1;
        (*_glb_hdl_sc_channel_map)[2335].second.push_front(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(6648296);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(6648352);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[2339].first = 1;
        (*_glb_hdl_sc_channel_map)[2339].second.push_front(p_2_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(6648464);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[2345].first = 3;
        (*_glb_hdl_sc_channel_map)[2345].second.push_front(p_2_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[2343].first = 1;
        (*_glb_hdl_sc_channel_map)[2343].second.push_front(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(6648632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(6648688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(6648744);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(6648800);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[2338].first = 1;
        (*_glb_hdl_sc_channel_map)[2338].second.push_front(p_2_s_axi_rready);
        xsim_sc_channel<0, bool > *p_2_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWVALID.bind(*p_2_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[3777].first = 1;
        (*_glb_hdl_sc_channel_map)[3777].second.push_front(p_2_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_2_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWREADY.bind(*p_2_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[3775].first = 1;
        (*_glb_hdl_sc_channel_map)[3775].second.push_front(p_2_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->mon_AWADDR.bind(*p_2_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[3772].first = 3;
        (*_glb_hdl_sc_channel_map)[3772].second.push_front(p_2_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->mon_AWID.bind(*p_2_mon_AWID);
        (*_glb_hdl_sc_channel_map)[2348].first = 3;
        (*_glb_hdl_sc_channel_map)[2348].second.push_front(p_2_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->mon_AWLEN.bind(*p_2_mon_AWLEN);
        (*_glb_hdl_sc_channel_map)[3774].first = 3;
        (*_glb_hdl_sc_channel_map)[3774].second.push_front(p_2_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->mon_AWSIZE.bind(*p_2_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map)[3776].first = 3;
        (*_glb_hdl_sc_channel_map)[3776].second.push_front(p_2_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_AWBURST.bind(*p_2_mon_AWBURST);
        (*_glb_hdl_sc_channel_map)[3773].first = 3;
        (*_glb_hdl_sc_channel_map)[3773].second.push_front(p_2_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_2_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WVALID.bind(*p_2_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[3790].first = 1;
        (*_glb_hdl_sc_channel_map)[3790].second.push_front(p_2_mon_WVALID);
        xsim_sc_channel<0, bool > *p_2_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WREADY.bind(*p_2_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[3788].first = 1;
        (*_glb_hdl_sc_channel_map)[3788].second.push_front(p_2_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_2_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_2->mon_WDATA.bind(*p_2_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[3786].first = 3;
        (*_glb_hdl_sc_channel_map)[3786].second.push_front(p_2_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->mon_WSTRB.bind(*p_2_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[3789].first = 3;
        (*_glb_hdl_sc_channel_map)[3789].second.push_front(p_2_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_2_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WLAST.bind(*p_2_mon_WLAST);
        (*_glb_hdl_sc_channel_map)[3787].first = 1;
        (*_glb_hdl_sc_channel_map)[3787].second.push_front(p_2_mon_WLAST);
        xsim_sc_channel<0, bool > *p_2_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARVALID.bind(*p_2_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[3771].first = 1;
        (*_glb_hdl_sc_channel_map)[3771].second.push_front(p_2_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_2_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARREADY.bind(*p_2_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[3769].first = 1;
        (*_glb_hdl_sc_channel_map)[3769].second.push_front(p_2_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->mon_ARADDR.bind(*p_2_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[3766].first = 3;
        (*_glb_hdl_sc_channel_map)[3766].second.push_front(p_2_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->mon_ARID.bind(*p_2_mon_ARID);
        (*_glb_hdl_sc_channel_map)[2349].first = 3;
        (*_glb_hdl_sc_channel_map)[2349].second.push_front(p_2_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->mon_ARLEN.bind(*p_2_mon_ARLEN);
        (*_glb_hdl_sc_channel_map)[3768].first = 3;
        (*_glb_hdl_sc_channel_map)[3768].second.push_front(p_2_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->mon_ARSIZE.bind(*p_2_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map)[3770].first = 3;
        (*_glb_hdl_sc_channel_map)[3770].second.push_front(p_2_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_ARBURST.bind(*p_2_mon_ARBURST);
        (*_glb_hdl_sc_channel_map)[3767].first = 3;
        (*_glb_hdl_sc_channel_map)[3767].second.push_front(p_2_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_2_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RVALID.bind(*p_2_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[3785].first = 1;
        (*_glb_hdl_sc_channel_map)[3785].second.push_front(p_2_mon_RVALID);
        xsim_sc_channel<0, bool > *p_2_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RREADY.bind(*p_2_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[3783].first = 1;
        (*_glb_hdl_sc_channel_map)[3783].second.push_front(p_2_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_2_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_2->mon_RDATA.bind(*p_2_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[3781].first = 3;
        (*_glb_hdl_sc_channel_map)[3781].second.push_front(p_2_mon_RDATA);
        xsim_sc_channel<0, bool > *p_2_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RLAST.bind(*p_2_mon_RLAST);
        (*_glb_hdl_sc_channel_map)[3782].first = 1;
        (*_glb_hdl_sc_channel_map)[3782].second.push_front(p_2_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->mon_RID.bind(*p_2_mon_RID);
        (*_glb_hdl_sc_channel_map)[2346].first = 3;
        (*_glb_hdl_sc_channel_map)[2346].second.push_front(p_2_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_RRESP.bind(*p_2_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[3784].first = 3;
        (*_glb_hdl_sc_channel_map)[3784].second.push_front(p_2_mon_RRESP);
        xsim_sc_channel<0, bool > *p_2_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BVALID.bind(*p_2_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[3780].first = 1;
        (*_glb_hdl_sc_channel_map)[3780].second.push_front(p_2_mon_BVALID);
        xsim_sc_channel<0, bool > *p_2_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BREADY.bind(*p_2_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[3778].first = 1;
        (*_glb_hdl_sc_channel_map)[3778].second.push_front(p_2_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_BRESP.bind(*p_2_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[3779].first = 3;
        (*_glb_hdl_sc_channel_map)[3779].second.push_front(p_2_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->mon_BID.bind(*p_2_mon_BID);
        (*_glb_hdl_sc_channel_map)[2347].first = 3;
        (*_glb_hdl_sc_channel_map)[2347].second.push_front(p_2_mon_BID);
        xsim_sc_channel<0, bool > *p_2_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_rd_tready.bind(*p_2_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map)[3758].first = 1;
        (*_glb_hdl_sc_channel_map)[3758].second.push_front(p_2_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->m_axis_rd_tdata.bind(*p_2_m_axis_rd_tdata);
        p_2_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6650592);
        xsim_sc_channel<0, bool > *p_2_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_rd_tlast.bind(*p_2_m_axis_rd_tlast);
        p_2_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6650648);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_rd_tid.bind(*p_2_m_axis_rd_tid);
        p_2_m_axis_rd_tid->set_sv_netview_offsetfromdp(6650704);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_rd_tdest.bind(*p_2_m_axis_rd_tdest);
        p_2_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6650760);
        xsim_sc_channel<0, bool > *p_2_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_wr_tready.bind(*p_2_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map)[3764].first = 1;
        (*_glb_hdl_sc_channel_map)[3764].second.push_front(p_2_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->m_axis_wr_tdata.bind(*p_2_m_axis_wr_tdata);
        p_2_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6650872);
        xsim_sc_channel<0, bool > *p_2_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_wr_tlast.bind(*p_2_m_axis_wr_tlast);
        p_2_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6650928);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_wr_tid.bind(*p_2_m_axis_wr_tid);
        p_2_m_axis_wr_tid->set_sv_netview_offsetfromdp(6650984);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_wr_tdest.bind(*p_2_m_axis_wr_tdest);
        p_2_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6651040);
        xsim_sc_channel<0, bool > *p_2_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_wr_tvalid.bind(*p_2_m_axis_wr_tvalid);
        p_2_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6651096);
        xsim_sc_channel<0, bool > *p_2_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_rd_tvalid.bind(*p_2_m_axis_rd_tvalid);
        p_2_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6651152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr_mon.bind(*p_2_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map)[2341].first = 3;
        (*_glb_hdl_sc_channel_map)[2341].second.push_front(p_2_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot_mon.bind(*p_2_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map)[3796].first = 3;
        (*_glb_hdl_sc_channel_map)[3796].second.push_front(p_2_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid_mon.bind(*p_2_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map)[3798].first = 1;
        (*_glb_hdl_sc_channel_map)[3798].second.push_front(p_2_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready_mon.bind(*p_2_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map)[3797].first = 1;
        (*_glb_hdl_sc_channel_map)[3797].second.push_front(p_2_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata_mon.bind(*p_2_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map)[3806].first = 3;
        (*_glb_hdl_sc_channel_map)[3806].second.push_front(p_2_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb_mon.bind(*p_2_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map)[3808].first = 3;
        (*_glb_hdl_sc_channel_map)[3808].second.push_front(p_2_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid_mon.bind(*p_2_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map)[3809].first = 1;
        (*_glb_hdl_sc_channel_map)[3809].second.push_front(p_2_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready_mon.bind(*p_2_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map)[3807].first = 1;
        (*_glb_hdl_sc_channel_map)[3807].second.push_front(p_2_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp_mon.bind(*p_2_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map)[3800].first = 3;
        (*_glb_hdl_sc_channel_map)[3800].second.push_front(p_2_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid_mon.bind(*p_2_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map)[3801].first = 1;
        (*_glb_hdl_sc_channel_map)[3801].second.push_front(p_2_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready_mon.bind(*p_2_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map)[3799].first = 1;
        (*_glb_hdl_sc_channel_map)[3799].second.push_front(p_2_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr_mon.bind(*p_2_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map)[2344].first = 3;
        (*_glb_hdl_sc_channel_map)[2344].second.push_front(p_2_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot_mon.bind(*p_2_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map)[3793].first = 3;
        (*_glb_hdl_sc_channel_map)[3793].second.push_front(p_2_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid_mon.bind(*p_2_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map)[3795].first = 1;
        (*_glb_hdl_sc_channel_map)[3795].second.push_front(p_2_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready_mon.bind(*p_2_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map)[3794].first = 1;
        (*_glb_hdl_sc_channel_map)[3794].second.push_front(p_2_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata_mon.bind(*p_2_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map)[3802].first = 3;
        (*_glb_hdl_sc_channel_map)[3802].second.push_front(p_2_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp_mon.bind(*p_2_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map)[3804].first = 3;
        (*_glb_hdl_sc_channel_map)[3804].second.push_front(p_2_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid_mon.bind(*p_2_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map)[3805].first = 1;
        (*_glb_hdl_sc_channel_map)[3805].second.push_front(p_2_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready_mon.bind(*p_2_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map)[3803].first = 1;
        (*_glb_hdl_sc_channel_map)[3803].second.push_front(p_2_s_axi_rready_mon);
        sc_inst_3 = new zcu104_base_dpa_mon0_1_0(".zcu104_base_wrapper.zcu104_base_i.System_DPA.dpa_mon0_1");
        sc_inst_3->xsim_set_dbg_index(478);
        xsim_sc_channel<0, bool > *p_3_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_clk.bind(*p_3_mon_clk);
        (*_glb_hdl_sc_channel_map)[3857].first = 1;
        (*_glb_hdl_sc_channel_map)[3857].second.push_front(p_3_mon_clk);
        xsim_sc_channel<0, bool > *p_3_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_resetn.bind(*p_3_mon_resetn);
        (*_glb_hdl_sc_channel_map)[3858].first = 1;
        (*_glb_hdl_sc_channel_map)[3858].second.push_front(p_3_mon_resetn);
        xsim_sc_channel<0, bool > *p_3_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_clk.bind(*p_3_trace_clk);
        (*_glb_hdl_sc_channel_map)[3876].first = 1;
        (*_glb_hdl_sc_channel_map)[3876].second.push_front(p_3_trace_clk);
        xsim_sc_channel<0, bool > *p_3_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_rst.bind(*p_3_trace_rst);
        (*_glb_hdl_sc_channel_map)[3877].first = 1;
        (*_glb_hdl_sc_channel_map)[3877].second.push_front(p_3_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[2327].first = 3;
        (*_glb_hdl_sc_channel_map)[2327].second.push_front(p_3_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[2325].first = 1;
        (*_glb_hdl_sc_channel_map)[2325].second.push_front(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(6652656);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[2322].first = 3;
        (*_glb_hdl_sc_channel_map)[2322].second.push_front(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[2321].first = 3;
        (*_glb_hdl_sc_channel_map)[2321].second.push_front(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[2320].first = 1;
        (*_glb_hdl_sc_channel_map)[2320].second.push_front(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(6652880);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(6652936);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[2324].first = 1;
        (*_glb_hdl_sc_channel_map)[2324].second.push_front(p_3_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(6653048);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[2330].first = 3;
        (*_glb_hdl_sc_channel_map)[2330].second.push_front(p_3_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[2328].first = 1;
        (*_glb_hdl_sc_channel_map)[2328].second.push_front(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(6653216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(6653272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(6653328);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(6653384);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[2323].first = 1;
        (*_glb_hdl_sc_channel_map)[2323].second.push_front(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWVALID.bind(*p_3_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[3843].first = 1;
        (*_glb_hdl_sc_channel_map)[3843].second.push_front(p_3_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_3_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWREADY.bind(*p_3_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[3841].first = 1;
        (*_glb_hdl_sc_channel_map)[3841].second.push_front(p_3_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_AWADDR.bind(*p_3_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[3838].first = 3;
        (*_glb_hdl_sc_channel_map)[3838].second.push_front(p_3_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_AWID.bind(*p_3_mon_AWID);
        (*_glb_hdl_sc_channel_map)[2333].first = 3;
        (*_glb_hdl_sc_channel_map)[2333].second.push_front(p_3_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_AWLEN.bind(*p_3_mon_AWLEN);
        (*_glb_hdl_sc_channel_map)[3840].first = 3;
        (*_glb_hdl_sc_channel_map)[3840].second.push_front(p_3_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_AWSIZE.bind(*p_3_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map)[3842].first = 3;
        (*_glb_hdl_sc_channel_map)[3842].second.push_front(p_3_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_AWBURST.bind(*p_3_mon_AWBURST);
        (*_glb_hdl_sc_channel_map)[3839].first = 3;
        (*_glb_hdl_sc_channel_map)[3839].second.push_front(p_3_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_3_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WVALID.bind(*p_3_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[3856].first = 1;
        (*_glb_hdl_sc_channel_map)[3856].second.push_front(p_3_mon_WVALID);
        xsim_sc_channel<0, bool > *p_3_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WREADY.bind(*p_3_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[3854].first = 1;
        (*_glb_hdl_sc_channel_map)[3854].second.push_front(p_3_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_3_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_3->mon_WDATA.bind(*p_3_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[3852].first = 3;
        (*_glb_hdl_sc_channel_map)[3852].second.push_front(p_3_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_WSTRB.bind(*p_3_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[3855].first = 3;
        (*_glb_hdl_sc_channel_map)[3855].second.push_front(p_3_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_3_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WLAST.bind(*p_3_mon_WLAST);
        (*_glb_hdl_sc_channel_map)[3853].first = 1;
        (*_glb_hdl_sc_channel_map)[3853].second.push_front(p_3_mon_WLAST);
        xsim_sc_channel<0, bool > *p_3_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARVALID.bind(*p_3_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[3837].first = 1;
        (*_glb_hdl_sc_channel_map)[3837].second.push_front(p_3_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_3_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARREADY.bind(*p_3_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[3835].first = 1;
        (*_glb_hdl_sc_channel_map)[3835].second.push_front(p_3_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_ARADDR.bind(*p_3_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[3832].first = 3;
        (*_glb_hdl_sc_channel_map)[3832].second.push_front(p_3_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_ARID.bind(*p_3_mon_ARID);
        (*_glb_hdl_sc_channel_map)[2334].first = 3;
        (*_glb_hdl_sc_channel_map)[2334].second.push_front(p_3_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_ARLEN.bind(*p_3_mon_ARLEN);
        (*_glb_hdl_sc_channel_map)[3834].first = 3;
        (*_glb_hdl_sc_channel_map)[3834].second.push_front(p_3_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_ARSIZE.bind(*p_3_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map)[3836].first = 3;
        (*_glb_hdl_sc_channel_map)[3836].second.push_front(p_3_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_ARBURST.bind(*p_3_mon_ARBURST);
        (*_glb_hdl_sc_channel_map)[3833].first = 3;
        (*_glb_hdl_sc_channel_map)[3833].second.push_front(p_3_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_3_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RVALID.bind(*p_3_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[3851].first = 1;
        (*_glb_hdl_sc_channel_map)[3851].second.push_front(p_3_mon_RVALID);
        xsim_sc_channel<0, bool > *p_3_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RREADY.bind(*p_3_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[3849].first = 1;
        (*_glb_hdl_sc_channel_map)[3849].second.push_front(p_3_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_3_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_3->mon_RDATA.bind(*p_3_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[3847].first = 3;
        (*_glb_hdl_sc_channel_map)[3847].second.push_front(p_3_mon_RDATA);
        xsim_sc_channel<0, bool > *p_3_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RLAST.bind(*p_3_mon_RLAST);
        (*_glb_hdl_sc_channel_map)[3848].first = 1;
        (*_glb_hdl_sc_channel_map)[3848].second.push_front(p_3_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_RID.bind(*p_3_mon_RID);
        (*_glb_hdl_sc_channel_map)[2331].first = 3;
        (*_glb_hdl_sc_channel_map)[2331].second.push_front(p_3_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_RRESP.bind(*p_3_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[3850].first = 3;
        (*_glb_hdl_sc_channel_map)[3850].second.push_front(p_3_mon_RRESP);
        xsim_sc_channel<0, bool > *p_3_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BVALID.bind(*p_3_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[3846].first = 1;
        (*_glb_hdl_sc_channel_map)[3846].second.push_front(p_3_mon_BVALID);
        xsim_sc_channel<0, bool > *p_3_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BREADY.bind(*p_3_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[3844].first = 1;
        (*_glb_hdl_sc_channel_map)[3844].second.push_front(p_3_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_BRESP.bind(*p_3_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[3845].first = 3;
        (*_glb_hdl_sc_channel_map)[3845].second.push_front(p_3_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_BID.bind(*p_3_mon_BID);
        (*_glb_hdl_sc_channel_map)[2332].first = 3;
        (*_glb_hdl_sc_channel_map)[2332].second.push_front(p_3_mon_BID);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tready.bind(*p_3_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map)[3824].first = 1;
        (*_glb_hdl_sc_channel_map)[3824].second.push_front(p_3_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_rd_tdata.bind(*p_3_m_axis_rd_tdata);
        p_3_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6655176);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tlast.bind(*p_3_m_axis_rd_tlast);
        p_3_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6655232);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tid.bind(*p_3_m_axis_rd_tid);
        p_3_m_axis_rd_tid->set_sv_netview_offsetfromdp(6655288);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tdest.bind(*p_3_m_axis_rd_tdest);
        p_3_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6655344);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tready.bind(*p_3_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map)[3830].first = 1;
        (*_glb_hdl_sc_channel_map)[3830].second.push_front(p_3_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_wr_tdata.bind(*p_3_m_axis_wr_tdata);
        p_3_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6655456);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tlast.bind(*p_3_m_axis_wr_tlast);
        p_3_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6655512);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tid.bind(*p_3_m_axis_wr_tid);
        p_3_m_axis_wr_tid->set_sv_netview_offsetfromdp(6655568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tdest.bind(*p_3_m_axis_wr_tdest);
        p_3_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6655624);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tvalid.bind(*p_3_m_axis_wr_tvalid);
        p_3_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6655680);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tvalid.bind(*p_3_m_axis_rd_tvalid);
        p_3_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6655736);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr_mon.bind(*p_3_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map)[2326].first = 3;
        (*_glb_hdl_sc_channel_map)[2326].second.push_front(p_3_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot_mon.bind(*p_3_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map)[3862].first = 3;
        (*_glb_hdl_sc_channel_map)[3862].second.push_front(p_3_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid_mon.bind(*p_3_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map)[3864].first = 1;
        (*_glb_hdl_sc_channel_map)[3864].second.push_front(p_3_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready_mon.bind(*p_3_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map)[3863].first = 1;
        (*_glb_hdl_sc_channel_map)[3863].second.push_front(p_3_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata_mon.bind(*p_3_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map)[3872].first = 3;
        (*_glb_hdl_sc_channel_map)[3872].second.push_front(p_3_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb_mon.bind(*p_3_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map)[3874].first = 3;
        (*_glb_hdl_sc_channel_map)[3874].second.push_front(p_3_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid_mon.bind(*p_3_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map)[3875].first = 1;
        (*_glb_hdl_sc_channel_map)[3875].second.push_front(p_3_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready_mon.bind(*p_3_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map)[3873].first = 1;
        (*_glb_hdl_sc_channel_map)[3873].second.push_front(p_3_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp_mon.bind(*p_3_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map)[3866].first = 3;
        (*_glb_hdl_sc_channel_map)[3866].second.push_front(p_3_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid_mon.bind(*p_3_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map)[3867].first = 1;
        (*_glb_hdl_sc_channel_map)[3867].second.push_front(p_3_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready_mon.bind(*p_3_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map)[3865].first = 1;
        (*_glb_hdl_sc_channel_map)[3865].second.push_front(p_3_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr_mon.bind(*p_3_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map)[2329].first = 3;
        (*_glb_hdl_sc_channel_map)[2329].second.push_front(p_3_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot_mon.bind(*p_3_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map)[3859].first = 3;
        (*_glb_hdl_sc_channel_map)[3859].second.push_front(p_3_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid_mon.bind(*p_3_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map)[3861].first = 1;
        (*_glb_hdl_sc_channel_map)[3861].second.push_front(p_3_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready_mon.bind(*p_3_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map)[3860].first = 1;
        (*_glb_hdl_sc_channel_map)[3860].second.push_front(p_3_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata_mon.bind(*p_3_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map)[3868].first = 3;
        (*_glb_hdl_sc_channel_map)[3868].second.push_front(p_3_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp_mon.bind(*p_3_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map)[3870].first = 3;
        (*_glb_hdl_sc_channel_map)[3870].second.push_front(p_3_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid_mon.bind(*p_3_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map)[3871].first = 1;
        (*_glb_hdl_sc_channel_map)[3871].second.push_front(p_3_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready_mon.bind(*p_3_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map)[3869].first = 1;
        (*_glb_hdl_sc_channel_map)[3869].second.push_front(p_3_s_axi_rready_mon);
        sc_inst_4 = new zcu104_base_dpa_mon1_0_0(".zcu104_base_wrapper.zcu104_base_i.System_DPA.dpa_mon1_0");
        sc_inst_4->xsim_set_dbg_index(479);
        xsim_sc_channel<0, bool > *p_4_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_clk.bind(*p_4_mon_clk);
        (*_glb_hdl_sc_channel_map)[3923].first = 1;
        (*_glb_hdl_sc_channel_map)[3923].second.push_front(p_4_mon_clk);
        xsim_sc_channel<0, bool > *p_4_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_resetn.bind(*p_4_mon_resetn);
        (*_glb_hdl_sc_channel_map)[3924].first = 1;
        (*_glb_hdl_sc_channel_map)[3924].second.push_front(p_4_mon_resetn);
        xsim_sc_channel<0, bool > *p_4_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->trace_clk.bind(*p_4_trace_clk);
        (*_glb_hdl_sc_channel_map)[3942].first = 1;
        (*_glb_hdl_sc_channel_map)[3942].second.push_front(p_4_trace_clk);
        xsim_sc_channel<0, bool > *p_4_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_4->trace_rst.bind(*p_4_trace_rst);
        (*_glb_hdl_sc_channel_map)[3943].first = 1;
        (*_glb_hdl_sc_channel_map)[3943].second.push_front(p_4_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[2312].first = 3;
        (*_glb_hdl_sc_channel_map)[2312].second.push_front(p_4_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[2310].first = 1;
        (*_glb_hdl_sc_channel_map)[2310].second.push_front(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(6657240);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[2307].first = 3;
        (*_glb_hdl_sc_channel_map)[2307].second.push_front(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[2306].first = 3;
        (*_glb_hdl_sc_channel_map)[2306].second.push_front(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[2305].first = 1;
        (*_glb_hdl_sc_channel_map)[2305].second.push_front(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(6657464);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(6657520);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[2309].first = 1;
        (*_glb_hdl_sc_channel_map)[2309].second.push_front(p_4_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(6657632);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[2315].first = 3;
        (*_glb_hdl_sc_channel_map)[2315].second.push_front(p_4_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[2313].first = 1;
        (*_glb_hdl_sc_channel_map)[2313].second.push_front(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(6657800);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(6657856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(6657912);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(6657968);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[2308].first = 1;
        (*_glb_hdl_sc_channel_map)[2308].second.push_front(p_4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_4_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_AWVALID.bind(*p_4_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[3909].first = 1;
        (*_glb_hdl_sc_channel_map)[3909].second.push_front(p_4_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_4_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_AWREADY.bind(*p_4_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[3907].first = 1;
        (*_glb_hdl_sc_channel_map)[3907].second.push_front(p_4_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->mon_AWADDR.bind(*p_4_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[3904].first = 3;
        (*_glb_hdl_sc_channel_map)[3904].second.push_front(p_4_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_AWID.bind(*p_4_mon_AWID);
        (*_glb_hdl_sc_channel_map)[2318].first = 3;
        (*_glb_hdl_sc_channel_map)[2318].second.push_front(p_4_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->mon_AWLEN.bind(*p_4_mon_AWLEN);
        (*_glb_hdl_sc_channel_map)[3906].first = 3;
        (*_glb_hdl_sc_channel_map)[3906].second.push_front(p_4_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->mon_AWSIZE.bind(*p_4_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map)[3908].first = 3;
        (*_glb_hdl_sc_channel_map)[3908].second.push_front(p_4_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_AWBURST.bind(*p_4_mon_AWBURST);
        (*_glb_hdl_sc_channel_map)[3905].first = 3;
        (*_glb_hdl_sc_channel_map)[3905].second.push_front(p_4_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_4_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WVALID.bind(*p_4_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[3922].first = 1;
        (*_glb_hdl_sc_channel_map)[3922].second.push_front(p_4_mon_WVALID);
        xsim_sc_channel<0, bool > *p_4_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WREADY.bind(*p_4_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[3920].first = 1;
        (*_glb_hdl_sc_channel_map)[3920].second.push_front(p_4_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->mon_WDATA.bind(*p_4_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[3918].first = 3;
        (*_glb_hdl_sc_channel_map)[3918].second.push_front(p_4_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->mon_WSTRB.bind(*p_4_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[3921].first = 3;
        (*_glb_hdl_sc_channel_map)[3921].second.push_front(p_4_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_4_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WLAST.bind(*p_4_mon_WLAST);
        (*_glb_hdl_sc_channel_map)[3919].first = 1;
        (*_glb_hdl_sc_channel_map)[3919].second.push_front(p_4_mon_WLAST);
        xsim_sc_channel<0, bool > *p_4_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_ARVALID.bind(*p_4_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[3903].first = 1;
        (*_glb_hdl_sc_channel_map)[3903].second.push_front(p_4_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_4_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_ARREADY.bind(*p_4_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[3901].first = 1;
        (*_glb_hdl_sc_channel_map)[3901].second.push_front(p_4_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->mon_ARADDR.bind(*p_4_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[3898].first = 3;
        (*_glb_hdl_sc_channel_map)[3898].second.push_front(p_4_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_ARID.bind(*p_4_mon_ARID);
        (*_glb_hdl_sc_channel_map)[2319].first = 3;
        (*_glb_hdl_sc_channel_map)[2319].second.push_front(p_4_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->mon_ARLEN.bind(*p_4_mon_ARLEN);
        (*_glb_hdl_sc_channel_map)[3900].first = 3;
        (*_glb_hdl_sc_channel_map)[3900].second.push_front(p_4_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->mon_ARSIZE.bind(*p_4_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map)[3902].first = 3;
        (*_glb_hdl_sc_channel_map)[3902].second.push_front(p_4_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_ARBURST.bind(*p_4_mon_ARBURST);
        (*_glb_hdl_sc_channel_map)[3899].first = 3;
        (*_glb_hdl_sc_channel_map)[3899].second.push_front(p_4_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_4_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RVALID.bind(*p_4_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[3917].first = 1;
        (*_glb_hdl_sc_channel_map)[3917].second.push_front(p_4_mon_RVALID);
        xsim_sc_channel<0, bool > *p_4_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RREADY.bind(*p_4_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[3915].first = 1;
        (*_glb_hdl_sc_channel_map)[3915].second.push_front(p_4_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->mon_RDATA.bind(*p_4_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[3913].first = 3;
        (*_glb_hdl_sc_channel_map)[3913].second.push_front(p_4_mon_RDATA);
        xsim_sc_channel<0, bool > *p_4_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RLAST.bind(*p_4_mon_RLAST);
        (*_glb_hdl_sc_channel_map)[3914].first = 1;
        (*_glb_hdl_sc_channel_map)[3914].second.push_front(p_4_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_RID.bind(*p_4_mon_RID);
        (*_glb_hdl_sc_channel_map)[2316].first = 3;
        (*_glb_hdl_sc_channel_map)[2316].second.push_front(p_4_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_RRESP.bind(*p_4_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[3916].first = 3;
        (*_glb_hdl_sc_channel_map)[3916].second.push_front(p_4_mon_RRESP);
        xsim_sc_channel<0, bool > *p_4_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_BVALID.bind(*p_4_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[3912].first = 1;
        (*_glb_hdl_sc_channel_map)[3912].second.push_front(p_4_mon_BVALID);
        xsim_sc_channel<0, bool > *p_4_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_BREADY.bind(*p_4_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[3910].first = 1;
        (*_glb_hdl_sc_channel_map)[3910].second.push_front(p_4_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_BRESP.bind(*p_4_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[3911].first = 3;
        (*_glb_hdl_sc_channel_map)[3911].second.push_front(p_4_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_BID.bind(*p_4_mon_BID);
        (*_glb_hdl_sc_channel_map)[2317].first = 3;
        (*_glb_hdl_sc_channel_map)[2317].second.push_front(p_4_mon_BID);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tready.bind(*p_4_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map)[3890].first = 1;
        (*_glb_hdl_sc_channel_map)[3890].second.push_front(p_4_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->m_axis_rd_tdata.bind(*p_4_m_axis_rd_tdata);
        p_4_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6659760);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tlast.bind(*p_4_m_axis_rd_tlast);
        p_4_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6659816);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_rd_tid.bind(*p_4_m_axis_rd_tid);
        p_4_m_axis_rd_tid->set_sv_netview_offsetfromdp(6659872);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_rd_tdest.bind(*p_4_m_axis_rd_tdest);
        p_4_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6659928);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tready.bind(*p_4_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map)[3896].first = 1;
        (*_glb_hdl_sc_channel_map)[3896].second.push_front(p_4_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->m_axis_wr_tdata.bind(*p_4_m_axis_wr_tdata);
        p_4_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6660040);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tlast.bind(*p_4_m_axis_wr_tlast);
        p_4_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6660096);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_wr_tid.bind(*p_4_m_axis_wr_tid);
        p_4_m_axis_wr_tid->set_sv_netview_offsetfromdp(6660152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_wr_tdest.bind(*p_4_m_axis_wr_tdest);
        p_4_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6660208);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tvalid.bind(*p_4_m_axis_wr_tvalid);
        p_4_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6660264);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tvalid.bind(*p_4_m_axis_rd_tvalid);
        p_4_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6660320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr_mon.bind(*p_4_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map)[2311].first = 3;
        (*_glb_hdl_sc_channel_map)[2311].second.push_front(p_4_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot_mon.bind(*p_4_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map)[3928].first = 3;
        (*_glb_hdl_sc_channel_map)[3928].second.push_front(p_4_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid_mon.bind(*p_4_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map)[3930].first = 1;
        (*_glb_hdl_sc_channel_map)[3930].second.push_front(p_4_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready_mon.bind(*p_4_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map)[3929].first = 1;
        (*_glb_hdl_sc_channel_map)[3929].second.push_front(p_4_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata_mon.bind(*p_4_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map)[3938].first = 3;
        (*_glb_hdl_sc_channel_map)[3938].second.push_front(p_4_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb_mon.bind(*p_4_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map)[3940].first = 3;
        (*_glb_hdl_sc_channel_map)[3940].second.push_front(p_4_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid_mon.bind(*p_4_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map)[3941].first = 1;
        (*_glb_hdl_sc_channel_map)[3941].second.push_front(p_4_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready_mon.bind(*p_4_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map)[3939].first = 1;
        (*_glb_hdl_sc_channel_map)[3939].second.push_front(p_4_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp_mon.bind(*p_4_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map)[3932].first = 3;
        (*_glb_hdl_sc_channel_map)[3932].second.push_front(p_4_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid_mon.bind(*p_4_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map)[3933].first = 1;
        (*_glb_hdl_sc_channel_map)[3933].second.push_front(p_4_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready_mon.bind(*p_4_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map)[3931].first = 1;
        (*_glb_hdl_sc_channel_map)[3931].second.push_front(p_4_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr_mon.bind(*p_4_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map)[2314].first = 3;
        (*_glb_hdl_sc_channel_map)[2314].second.push_front(p_4_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot_mon.bind(*p_4_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map)[3925].first = 3;
        (*_glb_hdl_sc_channel_map)[3925].second.push_front(p_4_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid_mon.bind(*p_4_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map)[3927].first = 1;
        (*_glb_hdl_sc_channel_map)[3927].second.push_front(p_4_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready_mon.bind(*p_4_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map)[3926].first = 1;
        (*_glb_hdl_sc_channel_map)[3926].second.push_front(p_4_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata_mon.bind(*p_4_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map)[3934].first = 3;
        (*_glb_hdl_sc_channel_map)[3934].second.push_front(p_4_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp_mon.bind(*p_4_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map)[3936].first = 3;
        (*_glb_hdl_sc_channel_map)[3936].second.push_front(p_4_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid_mon.bind(*p_4_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map)[3937].first = 1;
        (*_glb_hdl_sc_channel_map)[3937].second.push_front(p_4_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready_mon.bind(*p_4_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map)[3935].first = 1;
        (*_glb_hdl_sc_channel_map)[3935].second.push_front(p_4_s_axi_rready_mon);
        sc_inst_5 = new zcu104_base_dpa_mon1_1_0(".zcu104_base_wrapper.zcu104_base_i.System_DPA.dpa_mon1_1");
        sc_inst_5->xsim_set_dbg_index(480);
        xsim_sc_channel<0, bool > *p_5_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_clk.bind(*p_5_mon_clk);
        (*_glb_hdl_sc_channel_map)[3989].first = 1;
        (*_glb_hdl_sc_channel_map)[3989].second.push_front(p_5_mon_clk);
        xsim_sc_channel<0, bool > *p_5_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_resetn.bind(*p_5_mon_resetn);
        (*_glb_hdl_sc_channel_map)[3990].first = 1;
        (*_glb_hdl_sc_channel_map)[3990].second.push_front(p_5_mon_resetn);
        xsim_sc_channel<0, bool > *p_5_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_5->trace_clk.bind(*p_5_trace_clk);
        (*_glb_hdl_sc_channel_map)[4008].first = 1;
        (*_glb_hdl_sc_channel_map)[4008].second.push_front(p_5_trace_clk);
        xsim_sc_channel<0, bool > *p_5_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_5->trace_rst.bind(*p_5_trace_rst);
        (*_glb_hdl_sc_channel_map)[4009].first = 1;
        (*_glb_hdl_sc_channel_map)[4009].second.push_front(p_5_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr.bind(*p_5_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[2297].first = 3;
        (*_glb_hdl_sc_channel_map)[2297].second.push_front(p_5_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid.bind(*p_5_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[2295].first = 1;
        (*_glb_hdl_sc_channel_map)[2295].second.push_front(p_5_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready.bind(*p_5_s_axi_awready);
        p_5_s_axi_awready->set_sv_netview_offsetfromdp(6661824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata.bind(*p_5_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[2292].first = 3;
        (*_glb_hdl_sc_channel_map)[2292].second.push_front(p_5_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb.bind(*p_5_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[2291].first = 3;
        (*_glb_hdl_sc_channel_map)[2291].second.push_front(p_5_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid.bind(*p_5_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[2290].first = 1;
        (*_glb_hdl_sc_channel_map)[2290].second.push_front(p_5_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready.bind(*p_5_s_axi_wready);
        p_5_s_axi_wready->set_sv_netview_offsetfromdp(6662048);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid.bind(*p_5_s_axi_bvalid);
        p_5_s_axi_bvalid->set_sv_netview_offsetfromdp(6662104);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready.bind(*p_5_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[2294].first = 1;
        (*_glb_hdl_sc_channel_map)[2294].second.push_front(p_5_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp.bind(*p_5_s_axi_bresp);
        p_5_s_axi_bresp->set_sv_netview_offsetfromdp(6662216);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr.bind(*p_5_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[2300].first = 3;
        (*_glb_hdl_sc_channel_map)[2300].second.push_front(p_5_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid.bind(*p_5_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[2298].first = 1;
        (*_glb_hdl_sc_channel_map)[2298].second.push_front(p_5_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready.bind(*p_5_s_axi_arready);
        p_5_s_axi_arready->set_sv_netview_offsetfromdp(6662384);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata.bind(*p_5_s_axi_rdata);
        p_5_s_axi_rdata->set_sv_netview_offsetfromdp(6662440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp.bind(*p_5_s_axi_rresp);
        p_5_s_axi_rresp->set_sv_netview_offsetfromdp(6662496);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid.bind(*p_5_s_axi_rvalid);
        p_5_s_axi_rvalid->set_sv_netview_offsetfromdp(6662552);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready.bind(*p_5_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[2293].first = 1;
        (*_glb_hdl_sc_channel_map)[2293].second.push_front(p_5_s_axi_rready);
        xsim_sc_channel<0, bool > *p_5_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_AWVALID.bind(*p_5_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[3975].first = 1;
        (*_glb_hdl_sc_channel_map)[3975].second.push_front(p_5_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_5_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_AWREADY.bind(*p_5_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[3973].first = 1;
        (*_glb_hdl_sc_channel_map)[3973].second.push_front(p_5_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->mon_AWADDR.bind(*p_5_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[3970].first = 3;
        (*_glb_hdl_sc_channel_map)[3970].second.push_front(p_5_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_AWID.bind(*p_5_mon_AWID);
        (*_glb_hdl_sc_channel_map)[2303].first = 3;
        (*_glb_hdl_sc_channel_map)[2303].second.push_front(p_5_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->mon_AWLEN.bind(*p_5_mon_AWLEN);
        (*_glb_hdl_sc_channel_map)[3972].first = 3;
        (*_glb_hdl_sc_channel_map)[3972].second.push_front(p_5_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->mon_AWSIZE.bind(*p_5_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map)[3974].first = 3;
        (*_glb_hdl_sc_channel_map)[3974].second.push_front(p_5_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_AWBURST.bind(*p_5_mon_AWBURST);
        (*_glb_hdl_sc_channel_map)[3971].first = 3;
        (*_glb_hdl_sc_channel_map)[3971].second.push_front(p_5_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_5_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WVALID.bind(*p_5_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[3988].first = 1;
        (*_glb_hdl_sc_channel_map)[3988].second.push_front(p_5_mon_WVALID);
        xsim_sc_channel<0, bool > *p_5_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WREADY.bind(*p_5_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[3986].first = 1;
        (*_glb_hdl_sc_channel_map)[3986].second.push_front(p_5_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->mon_WDATA.bind(*p_5_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[3984].first = 3;
        (*_glb_hdl_sc_channel_map)[3984].second.push_front(p_5_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->mon_WSTRB.bind(*p_5_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[3987].first = 3;
        (*_glb_hdl_sc_channel_map)[3987].second.push_front(p_5_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_5_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WLAST.bind(*p_5_mon_WLAST);
        (*_glb_hdl_sc_channel_map)[3985].first = 1;
        (*_glb_hdl_sc_channel_map)[3985].second.push_front(p_5_mon_WLAST);
        xsim_sc_channel<0, bool > *p_5_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_ARVALID.bind(*p_5_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[3969].first = 1;
        (*_glb_hdl_sc_channel_map)[3969].second.push_front(p_5_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_5_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_ARREADY.bind(*p_5_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[3967].first = 1;
        (*_glb_hdl_sc_channel_map)[3967].second.push_front(p_5_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->mon_ARADDR.bind(*p_5_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[3964].first = 3;
        (*_glb_hdl_sc_channel_map)[3964].second.push_front(p_5_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_ARID.bind(*p_5_mon_ARID);
        (*_glb_hdl_sc_channel_map)[2304].first = 3;
        (*_glb_hdl_sc_channel_map)[2304].second.push_front(p_5_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->mon_ARLEN.bind(*p_5_mon_ARLEN);
        (*_glb_hdl_sc_channel_map)[3966].first = 3;
        (*_glb_hdl_sc_channel_map)[3966].second.push_front(p_5_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->mon_ARSIZE.bind(*p_5_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map)[3968].first = 3;
        (*_glb_hdl_sc_channel_map)[3968].second.push_front(p_5_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_ARBURST.bind(*p_5_mon_ARBURST);
        (*_glb_hdl_sc_channel_map)[3965].first = 3;
        (*_glb_hdl_sc_channel_map)[3965].second.push_front(p_5_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_5_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RVALID.bind(*p_5_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[3983].first = 1;
        (*_glb_hdl_sc_channel_map)[3983].second.push_front(p_5_mon_RVALID);
        xsim_sc_channel<0, bool > *p_5_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RREADY.bind(*p_5_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[3981].first = 1;
        (*_glb_hdl_sc_channel_map)[3981].second.push_front(p_5_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->mon_RDATA.bind(*p_5_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[3979].first = 3;
        (*_glb_hdl_sc_channel_map)[3979].second.push_front(p_5_mon_RDATA);
        xsim_sc_channel<0, bool > *p_5_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RLAST.bind(*p_5_mon_RLAST);
        (*_glb_hdl_sc_channel_map)[3980].first = 1;
        (*_glb_hdl_sc_channel_map)[3980].second.push_front(p_5_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_RID.bind(*p_5_mon_RID);
        (*_glb_hdl_sc_channel_map)[2301].first = 3;
        (*_glb_hdl_sc_channel_map)[2301].second.push_front(p_5_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_RRESP.bind(*p_5_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[3982].first = 3;
        (*_glb_hdl_sc_channel_map)[3982].second.push_front(p_5_mon_RRESP);
        xsim_sc_channel<0, bool > *p_5_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_BVALID.bind(*p_5_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[3978].first = 1;
        (*_glb_hdl_sc_channel_map)[3978].second.push_front(p_5_mon_BVALID);
        xsim_sc_channel<0, bool > *p_5_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_BREADY.bind(*p_5_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[3976].first = 1;
        (*_glb_hdl_sc_channel_map)[3976].second.push_front(p_5_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_BRESP.bind(*p_5_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[3977].first = 3;
        (*_glb_hdl_sc_channel_map)[3977].second.push_front(p_5_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_BID.bind(*p_5_mon_BID);
        (*_glb_hdl_sc_channel_map)[2302].first = 3;
        (*_glb_hdl_sc_channel_map)[2302].second.push_front(p_5_mon_BID);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tready.bind(*p_5_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map)[3956].first = 1;
        (*_glb_hdl_sc_channel_map)[3956].second.push_front(p_5_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->m_axis_rd_tdata.bind(*p_5_m_axis_rd_tdata);
        p_5_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6664344);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tlast.bind(*p_5_m_axis_rd_tlast);
        p_5_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6664400);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_rd_tid.bind(*p_5_m_axis_rd_tid);
        p_5_m_axis_rd_tid->set_sv_netview_offsetfromdp(6664456);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_rd_tdest.bind(*p_5_m_axis_rd_tdest);
        p_5_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6664512);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tready.bind(*p_5_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map)[3962].first = 1;
        (*_glb_hdl_sc_channel_map)[3962].second.push_front(p_5_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->m_axis_wr_tdata.bind(*p_5_m_axis_wr_tdata);
        p_5_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6664624);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tlast.bind(*p_5_m_axis_wr_tlast);
        p_5_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6664680);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_wr_tid.bind(*p_5_m_axis_wr_tid);
        p_5_m_axis_wr_tid->set_sv_netview_offsetfromdp(6664736);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_wr_tdest.bind(*p_5_m_axis_wr_tdest);
        p_5_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6664792);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tvalid.bind(*p_5_m_axis_wr_tvalid);
        p_5_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6664848);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tvalid.bind(*p_5_m_axis_rd_tvalid);
        p_5_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6664904);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr_mon.bind(*p_5_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map)[2296].first = 3;
        (*_glb_hdl_sc_channel_map)[2296].second.push_front(p_5_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_awprot_mon.bind(*p_5_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map)[3994].first = 3;
        (*_glb_hdl_sc_channel_map)[3994].second.push_front(p_5_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid_mon.bind(*p_5_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map)[3996].first = 1;
        (*_glb_hdl_sc_channel_map)[3996].second.push_front(p_5_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready_mon.bind(*p_5_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map)[3995].first = 1;
        (*_glb_hdl_sc_channel_map)[3995].second.push_front(p_5_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata_mon.bind(*p_5_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map)[4004].first = 3;
        (*_glb_hdl_sc_channel_map)[4004].second.push_front(p_5_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb_mon.bind(*p_5_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map)[4006].first = 3;
        (*_glb_hdl_sc_channel_map)[4006].second.push_front(p_5_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid_mon.bind(*p_5_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map)[4007].first = 1;
        (*_glb_hdl_sc_channel_map)[4007].second.push_front(p_5_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready_mon.bind(*p_5_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map)[4005].first = 1;
        (*_glb_hdl_sc_channel_map)[4005].second.push_front(p_5_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp_mon.bind(*p_5_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map)[3998].first = 3;
        (*_glb_hdl_sc_channel_map)[3998].second.push_front(p_5_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid_mon.bind(*p_5_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map)[3999].first = 1;
        (*_glb_hdl_sc_channel_map)[3999].second.push_front(p_5_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready_mon.bind(*p_5_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map)[3997].first = 1;
        (*_glb_hdl_sc_channel_map)[3997].second.push_front(p_5_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr_mon.bind(*p_5_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map)[2299].first = 3;
        (*_glb_hdl_sc_channel_map)[2299].second.push_front(p_5_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_arprot_mon.bind(*p_5_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map)[3991].first = 3;
        (*_glb_hdl_sc_channel_map)[3991].second.push_front(p_5_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid_mon.bind(*p_5_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map)[3993].first = 1;
        (*_glb_hdl_sc_channel_map)[3993].second.push_front(p_5_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready_mon.bind(*p_5_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map)[3992].first = 1;
        (*_glb_hdl_sc_channel_map)[3992].second.push_front(p_5_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata_mon.bind(*p_5_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map)[4000].first = 3;
        (*_glb_hdl_sc_channel_map)[4000].second.push_front(p_5_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp_mon.bind(*p_5_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map)[4002].first = 3;
        (*_glb_hdl_sc_channel_map)[4002].second.push_front(p_5_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid_mon.bind(*p_5_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map)[4003].first = 1;
        (*_glb_hdl_sc_channel_map)[4003].second.push_front(p_5_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready_mon.bind(*p_5_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map)[4001].first = 1;
        (*_glb_hdl_sc_channel_map)[4001].second.push_front(p_5_s_axi_rready_mon);
        sc_inst_6 = new zcu104_base_auto_us_0(".zcu104_base_wrapper.zcu104_base_i.interconnect_axifull.s00_couplers.auto_us");
        sc_inst_6->xsim_set_dbg_index(1804);
        xsim_sc_channel<0, bool > *p_6_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_aclk.bind(*p_6_s_axi_aclk);
        (*_glb_hdl_sc_channel_map)[21480].first = 1;
        (*_glb_hdl_sc_channel_map)[21480].second.push_front(p_6_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_6_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_aresetn.bind(*p_6_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[21484].first = 1;
        (*_glb_hdl_sc_channel_map)[21484].second.push_front(p_6_s_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_awaddr.bind(*p_6_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[21493].first = 3;
        (*_glb_hdl_sc_channel_map)[21493].second.push_front(p_6_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_awlen.bind(*p_6_s_axi_awlen);
        (*_glb_hdl_sc_channel_map)[21496].first = 3;
        (*_glb_hdl_sc_channel_map)[21496].second.push_front(p_6_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_awsize.bind(*p_6_s_axi_awsize);
        (*_glb_hdl_sc_channel_map)[21502].first = 3;
        (*_glb_hdl_sc_channel_map)[21502].second.push_front(p_6_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_awburst.bind(*p_6_s_axi_awburst);
        (*_glb_hdl_sc_channel_map)[21494].first = 3;
        (*_glb_hdl_sc_channel_map)[21494].second.push_front(p_6_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->s_axi_awlock.bind(*p_6_s_axi_awlock);
        (*_glb_hdl_sc_channel_map)[21497].first = 3;
        (*_glb_hdl_sc_channel_map)[21497].second.push_front(p_6_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_awcache.bind(*p_6_s_axi_awcache);
        (*_glb_hdl_sc_channel_map)[21495].first = 3;
        (*_glb_hdl_sc_channel_map)[21495].second.push_front(p_6_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_awprot.bind(*p_6_s_axi_awprot);
        (*_glb_hdl_sc_channel_map)[21498].first = 3;
        (*_glb_hdl_sc_channel_map)[21498].second.push_front(p_6_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_awregion.bind(*p_6_s_axi_awregion);
        (*_glb_hdl_sc_channel_map)[21501].first = 3;
        (*_glb_hdl_sc_channel_map)[21501].second.push_front(p_6_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_awqos.bind(*p_6_s_axi_awqos);
        (*_glb_hdl_sc_channel_map)[21499].first = 3;
        (*_glb_hdl_sc_channel_map)[21499].second.push_front(p_6_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_6_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awvalid.bind(*p_6_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[21503].first = 1;
        (*_glb_hdl_sc_channel_map)[21503].second.push_front(p_6_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awready.bind(*p_6_s_axi_awready);
        p_6_s_axi_awready->set_sv_netview_offsetfromdp(11225208);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_wdata.bind(*p_6_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[21512].first = 3;
        (*_glb_hdl_sc_channel_map)[21512].second.push_front(p_6_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_wstrb.bind(*p_6_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[21515].first = 3;
        (*_glb_hdl_sc_channel_map)[21515].second.push_front(p_6_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_6_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wlast.bind(*p_6_s_axi_wlast);
        (*_glb_hdl_sc_channel_map)[21513].first = 1;
        (*_glb_hdl_sc_channel_map)[21513].second.push_front(p_6_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_6_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wvalid.bind(*p_6_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[21516].first = 1;
        (*_glb_hdl_sc_channel_map)[21516].second.push_front(p_6_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wready.bind(*p_6_s_axi_wready);
        p_6_s_axi_wready->set_sv_netview_offsetfromdp(11225488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_bresp.bind(*p_6_s_axi_bresp);
        p_6_s_axi_bresp->set_sv_netview_offsetfromdp(11225544);
        xsim_sc_channel<0, bool > *p_6_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bvalid.bind(*p_6_s_axi_bvalid);
        p_6_s_axi_bvalid->set_sv_netview_offsetfromdp(11225600);
        xsim_sc_channel<0, bool > *p_6_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bready.bind(*p_6_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[21504].first = 1;
        (*_glb_hdl_sc_channel_map)[21504].second.push_front(p_6_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_araddr.bind(*p_6_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[21481].first = 3;
        (*_glb_hdl_sc_channel_map)[21481].second.push_front(p_6_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_arlen.bind(*p_6_s_axi_arlen);
        (*_glb_hdl_sc_channel_map)[21485].first = 3;
        (*_glb_hdl_sc_channel_map)[21485].second.push_front(p_6_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_arsize.bind(*p_6_s_axi_arsize);
        (*_glb_hdl_sc_channel_map)[21491].first = 3;
        (*_glb_hdl_sc_channel_map)[21491].second.push_front(p_6_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_arburst.bind(*p_6_s_axi_arburst);
        (*_glb_hdl_sc_channel_map)[21482].first = 3;
        (*_glb_hdl_sc_channel_map)[21482].second.push_front(p_6_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->s_axi_arlock.bind(*p_6_s_axi_arlock);
        (*_glb_hdl_sc_channel_map)[21486].first = 3;
        (*_glb_hdl_sc_channel_map)[21486].second.push_front(p_6_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_arcache.bind(*p_6_s_axi_arcache);
        (*_glb_hdl_sc_channel_map)[21483].first = 3;
        (*_glb_hdl_sc_channel_map)[21483].second.push_front(p_6_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_arprot.bind(*p_6_s_axi_arprot);
        (*_glb_hdl_sc_channel_map)[21487].first = 3;
        (*_glb_hdl_sc_channel_map)[21487].second.push_front(p_6_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_arregion.bind(*p_6_s_axi_arregion);
        (*_glb_hdl_sc_channel_map)[21490].first = 3;
        (*_glb_hdl_sc_channel_map)[21490].second.push_front(p_6_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_arqos.bind(*p_6_s_axi_arqos);
        (*_glb_hdl_sc_channel_map)[21488].first = 3;
        (*_glb_hdl_sc_channel_map)[21488].second.push_front(p_6_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_6_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arvalid.bind(*p_6_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[21492].first = 1;
        (*_glb_hdl_sc_channel_map)[21492].second.push_front(p_6_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arready.bind(*p_6_s_axi_arready);
        p_6_s_axi_arready->set_sv_netview_offsetfromdp(11226272);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_rdata.bind(*p_6_s_axi_rdata);
        p_6_s_axi_rdata->set_sv_netview_offsetfromdp(11226328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_rresp.bind(*p_6_s_axi_rresp);
        p_6_s_axi_rresp->set_sv_netview_offsetfromdp(11226384);
        xsim_sc_channel<0, bool > *p_6_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rlast.bind(*p_6_s_axi_rlast);
        p_6_s_axi_rlast->set_sv_netview_offsetfromdp(11226440);
        xsim_sc_channel<0, bool > *p_6_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rvalid.bind(*p_6_s_axi_rvalid);
        p_6_s_axi_rvalid->set_sv_netview_offsetfromdp(11226496);
        xsim_sc_channel<0, bool > *p_6_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rready.bind(*p_6_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[21509].first = 1;
        (*_glb_hdl_sc_channel_map)[21509].second.push_front(p_6_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_awaddr.bind(*p_6_m_axi_awaddr);
        p_6_m_axi_awaddr->set_sv_netview_offsetfromdp(11226608);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_awlen.bind(*p_6_m_axi_awlen);
        p_6_m_axi_awlen->set_sv_netview_offsetfromdp(11226664);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_awsize.bind(*p_6_m_axi_awsize);
        p_6_m_axi_awsize->set_sv_netview_offsetfromdp(11226720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_awburst.bind(*p_6_m_axi_awburst);
        p_6_m_axi_awburst->set_sv_netview_offsetfromdp(11226776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->m_axi_awlock.bind(*p_6_m_axi_awlock);
        p_6_m_axi_awlock->set_sv_netview_offsetfromdp(11226832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->m_axi_awcache.bind(*p_6_m_axi_awcache);
        p_6_m_axi_awcache->set_sv_netview_offsetfromdp(11226888);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_awprot.bind(*p_6_m_axi_awprot);
        p_6_m_axi_awprot->set_sv_netview_offsetfromdp(11226944);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->m_axi_awregion.bind(*p_6_m_axi_awregion);
        p_6_m_axi_awregion->set_sv_netview_offsetfromdp(11227000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->m_axi_awqos.bind(*p_6_m_axi_awqos);
        p_6_m_axi_awqos->set_sv_netview_offsetfromdp(11227056);
        xsim_sc_channel<0, bool > *p_6_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awvalid.bind(*p_6_m_axi_awvalid);
        p_6_m_axi_awvalid->set_sv_netview_offsetfromdp(11227112);
        xsim_sc_channel<0, bool > *p_6_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awready.bind(*p_6_m_axi_awready);
        (*_glb_hdl_sc_channel_map)[21464].first = 1;
        (*_glb_hdl_sc_channel_map)[21464].second.push_front(p_6_m_axi_awready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_6_m_axi_wdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_6->m_axi_wdata.bind(*p_6_m_axi_wdata);
        p_6_m_axi_wdata->set_sv_netview_offsetfromdp(11227224);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_6_m_axi_wstrb = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_6->m_axi_wstrb.bind(*p_6_m_axi_wstrb);
        p_6_m_axi_wstrb->set_sv_netview_offsetfromdp(11227280);
        xsim_sc_channel<0, bool > *p_6_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wlast.bind(*p_6_m_axi_wlast);
        p_6_m_axi_wlast->set_sv_netview_offsetfromdp(11227336);
        xsim_sc_channel<0, bool > *p_6_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wvalid.bind(*p_6_m_axi_wvalid);
        p_6_m_axi_wvalid->set_sv_netview_offsetfromdp(11227392);
        xsim_sc_channel<0, bool > *p_6_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wready.bind(*p_6_m_axi_wready);
        (*_glb_hdl_sc_channel_map)[21477].first = 1;
        (*_glb_hdl_sc_channel_map)[21477].second.push_front(p_6_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_bresp.bind(*p_6_m_axi_bresp);
        (*_glb_hdl_sc_channel_map)[21468].first = 3;
        (*_glb_hdl_sc_channel_map)[21468].second.push_front(p_6_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bvalid.bind(*p_6_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[21469].first = 1;
        (*_glb_hdl_sc_channel_map)[21469].second.push_front(p_6_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bready.bind(*p_6_m_axi_bready);
        p_6_m_axi_bready->set_sv_netview_offsetfromdp(11227616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_araddr.bind(*p_6_m_axi_araddr);
        p_6_m_axi_araddr->set_sv_netview_offsetfromdp(11227672);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_arlen.bind(*p_6_m_axi_arlen);
        p_6_m_axi_arlen->set_sv_netview_offsetfromdp(11227728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_arsize.bind(*p_6_m_axi_arsize);
        p_6_m_axi_arsize->set_sv_netview_offsetfromdp(11227784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_arburst.bind(*p_6_m_axi_arburst);
        p_6_m_axi_arburst->set_sv_netview_offsetfromdp(11227840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->m_axi_arlock.bind(*p_6_m_axi_arlock);
        p_6_m_axi_arlock->set_sv_netview_offsetfromdp(11227896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->m_axi_arcache.bind(*p_6_m_axi_arcache);
        p_6_m_axi_arcache->set_sv_netview_offsetfromdp(11227952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_arprot.bind(*p_6_m_axi_arprot);
        p_6_m_axi_arprot->set_sv_netview_offsetfromdp(11228008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->m_axi_arregion.bind(*p_6_m_axi_arregion);
        p_6_m_axi_arregion->set_sv_netview_offsetfromdp(11228064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->m_axi_arqos.bind(*p_6_m_axi_arqos);
        p_6_m_axi_arqos->set_sv_netview_offsetfromdp(11228120);
        xsim_sc_channel<0, bool > *p_6_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arvalid.bind(*p_6_m_axi_arvalid);
        p_6_m_axi_arvalid->set_sv_netview_offsetfromdp(11228176);
        xsim_sc_channel<0, bool > *p_6_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arready.bind(*p_6_m_axi_arready);
        (*_glb_hdl_sc_channel_map)[21454].first = 1;
        (*_glb_hdl_sc_channel_map)[21454].second.push_front(p_6_m_axi_arready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_6_m_axi_rdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_6->m_axi_rdata.bind(*p_6_m_axi_rdata);
        (*_glb_hdl_sc_channel_map)[21470].first = 3;
        (*_glb_hdl_sc_channel_map)[21470].second.push_front(p_6_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_rresp.bind(*p_6_m_axi_rresp);
        (*_glb_hdl_sc_channel_map)[21473].first = 3;
        (*_glb_hdl_sc_channel_map)[21473].second.push_front(p_6_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rlast.bind(*p_6_m_axi_rlast);
        (*_glb_hdl_sc_channel_map)[21471].first = 1;
        (*_glb_hdl_sc_channel_map)[21471].second.push_front(p_6_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_6_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rvalid.bind(*p_6_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[21474].first = 1;
        (*_glb_hdl_sc_channel_map)[21474].second.push_front(p_6_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rready.bind(*p_6_m_axi_rready);
        p_6_m_axi_rready->set_sv_netview_offsetfromdp(11228512);
        sc_inst_7 = new zcu104_base_auto_cc_0(".zcu104_base_wrapper.zcu104_base_i.interconnect_axihpm0fpd.m01_couplers.auto_cc");
        sc_inst_7->xsim_set_dbg_index(1957);
        xsim_sc_channel<0, bool > *p_7_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aclk.bind(*p_7_s_axi_aclk);
        (*_glb_hdl_sc_channel_map)[21981].first = 1;
        (*_glb_hdl_sc_channel_map)[21981].second.push_front(p_7_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aresetn.bind(*p_7_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[21984].first = 1;
        (*_glb_hdl_sc_channel_map)[21984].second.push_front(p_7_s_axi_aresetn);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_7_s_axi_awid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_7->s_axi_awid.bind(*p_7_s_axi_awid);
        (*_glb_hdl_sc_channel_map)[21997].first = 3;
        (*_glb_hdl_sc_channel_map)[21997].second.push_front(p_7_s_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_awaddr.bind(*p_7_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[21938].first = 3;
        (*_glb_hdl_sc_channel_map)[21938].second.push_front(p_7_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_awlen.bind(*p_7_s_axi_awlen);
        (*_glb_hdl_sc_channel_map)[21998].first = 3;
        (*_glb_hdl_sc_channel_map)[21998].second.push_front(p_7_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_awsize.bind(*p_7_s_axi_awsize);
        (*_glb_hdl_sc_channel_map)[22004].first = 3;
        (*_glb_hdl_sc_channel_map)[22004].second.push_front(p_7_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_awburst.bind(*p_7_s_axi_awburst);
        (*_glb_hdl_sc_channel_map)[21995].first = 3;
        (*_glb_hdl_sc_channel_map)[21995].second.push_front(p_7_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->s_axi_awlock.bind(*p_7_s_axi_awlock);
        (*_glb_hdl_sc_channel_map)[21999].first = 3;
        (*_glb_hdl_sc_channel_map)[21999].second.push_front(p_7_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_awcache.bind(*p_7_s_axi_awcache);
        (*_glb_hdl_sc_channel_map)[21996].first = 3;
        (*_glb_hdl_sc_channel_map)[21996].second.push_front(p_7_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_awprot.bind(*p_7_s_axi_awprot);
        (*_glb_hdl_sc_channel_map)[22000].first = 3;
        (*_glb_hdl_sc_channel_map)[22000].second.push_front(p_7_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_awregion.bind(*p_7_s_axi_awregion);
        (*_glb_hdl_sc_channel_map)[22003].first = 3;
        (*_glb_hdl_sc_channel_map)[22003].second.push_front(p_7_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_awqos.bind(*p_7_s_axi_awqos);
        (*_glb_hdl_sc_channel_map)[22001].first = 3;
        (*_glb_hdl_sc_channel_map)[22001].second.push_front(p_7_s_axi_awqos);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_7_s_axi_awuser = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_7->s_axi_awuser.bind(*p_7_s_axi_awuser);
        (*_glb_hdl_sc_channel_map)[22005].first = 3;
        (*_glb_hdl_sc_channel_map)[22005].second.push_front(p_7_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_7_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awvalid.bind(*p_7_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[22006].first = 1;
        (*_glb_hdl_sc_channel_map)[22006].second.push_front(p_7_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awready.bind(*p_7_s_axi_awready);
        p_7_s_axi_awready->set_sv_netview_offsetfromdp(11402800);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_7_s_axi_wdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_7->s_axi_wdata.bind(*p_7_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[22017].first = 3;
        (*_glb_hdl_sc_channel_map)[22017].second.push_front(p_7_s_axi_wdata);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_7_s_axi_wstrb = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_7->s_axi_wstrb.bind(*p_7_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[22020].first = 3;
        (*_glb_hdl_sc_channel_map)[22020].second.push_front(p_7_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_7_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wlast.bind(*p_7_s_axi_wlast);
        (*_glb_hdl_sc_channel_map)[22018].first = 1;
        (*_glb_hdl_sc_channel_map)[22018].second.push_front(p_7_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_7_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wvalid.bind(*p_7_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[22021].first = 1;
        (*_glb_hdl_sc_channel_map)[22021].second.push_front(p_7_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wready.bind(*p_7_s_axi_wready);
        p_7_s_axi_wready->set_sv_netview_offsetfromdp(11403080);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_7_s_axi_bid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_7->s_axi_bid.bind(*p_7_s_axi_bid);
        p_7_s_axi_bid->set_sv_netview_offsetfromdp(11403136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_bresp.bind(*p_7_s_axi_bresp);
        p_7_s_axi_bresp->set_sv_netview_offsetfromdp(11403192);
        xsim_sc_channel<0, bool > *p_7_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bvalid.bind(*p_7_s_axi_bvalid);
        p_7_s_axi_bvalid->set_sv_netview_offsetfromdp(11403248);
        xsim_sc_channel<0, bool > *p_7_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bready.bind(*p_7_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[22008].first = 1;
        (*_glb_hdl_sc_channel_map)[22008].second.push_front(p_7_s_axi_bready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_7_s_axi_arid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_7->s_axi_arid.bind(*p_7_s_axi_arid);
        (*_glb_hdl_sc_channel_map)[21985].first = 3;
        (*_glb_hdl_sc_channel_map)[21985].second.push_front(p_7_s_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_araddr.bind(*p_7_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[21939].first = 3;
        (*_glb_hdl_sc_channel_map)[21939].second.push_front(p_7_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_arlen.bind(*p_7_s_axi_arlen);
        (*_glb_hdl_sc_channel_map)[21986].first = 3;
        (*_glb_hdl_sc_channel_map)[21986].second.push_front(p_7_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_arsize.bind(*p_7_s_axi_arsize);
        (*_glb_hdl_sc_channel_map)[21992].first = 3;
        (*_glb_hdl_sc_channel_map)[21992].second.push_front(p_7_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_arburst.bind(*p_7_s_axi_arburst);
        (*_glb_hdl_sc_channel_map)[21982].first = 3;
        (*_glb_hdl_sc_channel_map)[21982].second.push_front(p_7_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->s_axi_arlock.bind(*p_7_s_axi_arlock);
        (*_glb_hdl_sc_channel_map)[21987].first = 3;
        (*_glb_hdl_sc_channel_map)[21987].second.push_front(p_7_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_arcache.bind(*p_7_s_axi_arcache);
        (*_glb_hdl_sc_channel_map)[21983].first = 3;
        (*_glb_hdl_sc_channel_map)[21983].second.push_front(p_7_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_arprot.bind(*p_7_s_axi_arprot);
        (*_glb_hdl_sc_channel_map)[21988].first = 3;
        (*_glb_hdl_sc_channel_map)[21988].second.push_front(p_7_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_arregion.bind(*p_7_s_axi_arregion);
        (*_glb_hdl_sc_channel_map)[21991].first = 3;
        (*_glb_hdl_sc_channel_map)[21991].second.push_front(p_7_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_arqos.bind(*p_7_s_axi_arqos);
        (*_glb_hdl_sc_channel_map)[21989].first = 3;
        (*_glb_hdl_sc_channel_map)[21989].second.push_front(p_7_s_axi_arqos);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_7_s_axi_aruser = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_7->s_axi_aruser.bind(*p_7_s_axi_aruser);
        (*_glb_hdl_sc_channel_map)[21993].first = 3;
        (*_glb_hdl_sc_channel_map)[21993].second.push_front(p_7_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_7_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arvalid.bind(*p_7_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[21994].first = 1;
        (*_glb_hdl_sc_channel_map)[21994].second.push_front(p_7_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arready.bind(*p_7_s_axi_arready);
        p_7_s_axi_arready->set_sv_netview_offsetfromdp(11404032);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_7_s_axi_rid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_7->s_axi_rid.bind(*p_7_s_axi_rid);
        p_7_s_axi_rid->set_sv_netview_offsetfromdp(11404088);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_7_s_axi_rdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_7->s_axi_rdata.bind(*p_7_s_axi_rdata);
        p_7_s_axi_rdata->set_sv_netview_offsetfromdp(11404144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_rresp.bind(*p_7_s_axi_rresp);
        p_7_s_axi_rresp->set_sv_netview_offsetfromdp(11404200);
        xsim_sc_channel<0, bool > *p_7_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rlast.bind(*p_7_s_axi_rlast);
        p_7_s_axi_rlast->set_sv_netview_offsetfromdp(11404256);
        xsim_sc_channel<0, bool > *p_7_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rvalid.bind(*p_7_s_axi_rvalid);
        p_7_s_axi_rvalid->set_sv_netview_offsetfromdp(11404312);
        xsim_sc_channel<0, bool > *p_7_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rready.bind(*p_7_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[22014].first = 1;
        (*_glb_hdl_sc_channel_map)[22014].second.push_front(p_7_s_axi_rready);
        xsim_sc_channel<0, bool > *p_7_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aclk.bind(*p_7_m_axi_aclk);
        (*_glb_hdl_sc_channel_map)[21940].first = 1;
        (*_glb_hdl_sc_channel_map)[21940].second.push_front(p_7_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aresetn.bind(*p_7_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[21944].first = 1;
        (*_glb_hdl_sc_channel_map)[21944].second.push_front(p_7_m_axi_aresetn);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_7_m_axi_awid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_7->m_axi_awid.bind(*p_7_m_axi_awid);
        p_7_m_axi_awid->set_sv_netview_offsetfromdp(11404536);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_awaddr.bind(*p_7_m_axi_awaddr);
        p_7_m_axi_awaddr->set_sv_netview_offsetfromdp(11404592);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_awlen.bind(*p_7_m_axi_awlen);
        p_7_m_axi_awlen->set_sv_netview_offsetfromdp(11404648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_awsize.bind(*p_7_m_axi_awsize);
        p_7_m_axi_awsize->set_sv_netview_offsetfromdp(11404704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_awburst.bind(*p_7_m_axi_awburst);
        p_7_m_axi_awburst->set_sv_netview_offsetfromdp(11404760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->m_axi_awlock.bind(*p_7_m_axi_awlock);
        p_7_m_axi_awlock->set_sv_netview_offsetfromdp(11404816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_axi_awcache.bind(*p_7_m_axi_awcache);
        p_7_m_axi_awcache->set_sv_netview_offsetfromdp(11404872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_awprot.bind(*p_7_m_axi_awprot);
        p_7_m_axi_awprot->set_sv_netview_offsetfromdp(11404928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_axi_awregion.bind(*p_7_m_axi_awregion);
        p_7_m_axi_awregion->set_sv_netview_offsetfromdp(11404984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_axi_awqos.bind(*p_7_m_axi_awqos);
        p_7_m_axi_awqos->set_sv_netview_offsetfromdp(11405040);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_7_m_axi_awuser = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_7->m_axi_awuser.bind(*p_7_m_axi_awuser);
        p_7_m_axi_awuser->set_sv_netview_offsetfromdp(11405096);
        xsim_sc_channel<0, bool > *p_7_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awvalid.bind(*p_7_m_axi_awvalid);
        p_7_m_axi_awvalid->set_sv_netview_offsetfromdp(11405152);
        xsim_sc_channel<0, bool > *p_7_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awready.bind(*p_7_m_axi_awready);
        (*_glb_hdl_sc_channel_map)[21962].first = 1;
        (*_glb_hdl_sc_channel_map)[21962].second.push_front(p_7_m_axi_awready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_7_m_axi_wdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_7->m_axi_wdata.bind(*p_7_m_axi_wdata);
        p_7_m_axi_wdata->set_sv_netview_offsetfromdp(11405264);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_7_m_axi_wstrb = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_7->m_axi_wstrb.bind(*p_7_m_axi_wstrb);
        p_7_m_axi_wstrb->set_sv_netview_offsetfromdp(11405320);
        xsim_sc_channel<0, bool > *p_7_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wlast.bind(*p_7_m_axi_wlast);
        p_7_m_axi_wlast->set_sv_netview_offsetfromdp(11405376);
        xsim_sc_channel<0, bool > *p_7_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wvalid.bind(*p_7_m_axi_wvalid);
        p_7_m_axi_wvalid->set_sv_netview_offsetfromdp(11405432);
        xsim_sc_channel<0, bool > *p_7_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wready.bind(*p_7_m_axi_wready);
        (*_glb_hdl_sc_channel_map)[21978].first = 1;
        (*_glb_hdl_sc_channel_map)[21978].second.push_front(p_7_m_axi_wready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_7_m_axi_bid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_7->m_axi_bid.bind(*p_7_m_axi_bid);
        (*_glb_hdl_sc_channel_map)[21966].first = 3;
        (*_glb_hdl_sc_channel_map)[21966].second.push_front(p_7_m_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_bresp.bind(*p_7_m_axi_bresp);
        (*_glb_hdl_sc_channel_map)[21968].first = 3;
        (*_glb_hdl_sc_channel_map)[21968].second.push_front(p_7_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bvalid.bind(*p_7_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[21969].first = 1;
        (*_glb_hdl_sc_channel_map)[21969].second.push_front(p_7_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bready.bind(*p_7_m_axi_bready);
        p_7_m_axi_bready->set_sv_netview_offsetfromdp(11405712);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_7_m_axi_arid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_7->m_axi_arid.bind(*p_7_m_axi_arid);
        p_7_m_axi_arid->set_sv_netview_offsetfromdp(11405768);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_araddr.bind(*p_7_m_axi_araddr);
        p_7_m_axi_araddr->set_sv_netview_offsetfromdp(11405824);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_arlen.bind(*p_7_m_axi_arlen);
        p_7_m_axi_arlen->set_sv_netview_offsetfromdp(11405880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_arsize.bind(*p_7_m_axi_arsize);
        p_7_m_axi_arsize->set_sv_netview_offsetfromdp(11405936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_arburst.bind(*p_7_m_axi_arburst);
        p_7_m_axi_arburst->set_sv_netview_offsetfromdp(11405992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->m_axi_arlock.bind(*p_7_m_axi_arlock);
        p_7_m_axi_arlock->set_sv_netview_offsetfromdp(11406048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_axi_arcache.bind(*p_7_m_axi_arcache);
        p_7_m_axi_arcache->set_sv_netview_offsetfromdp(11406104);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_arprot.bind(*p_7_m_axi_arprot);
        p_7_m_axi_arprot->set_sv_netview_offsetfromdp(11406160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_axi_arregion.bind(*p_7_m_axi_arregion);
        p_7_m_axi_arregion->set_sv_netview_offsetfromdp(11406216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_axi_arqos.bind(*p_7_m_axi_arqos);
        p_7_m_axi_arqos->set_sv_netview_offsetfromdp(11406272);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_7_m_axi_aruser = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_7->m_axi_aruser.bind(*p_7_m_axi_aruser);
        p_7_m_axi_aruser->set_sv_netview_offsetfromdp(11406328);
        xsim_sc_channel<0, bool > *p_7_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arvalid.bind(*p_7_m_axi_arvalid);
        p_7_m_axi_arvalid->set_sv_netview_offsetfromdp(11406384);
        xsim_sc_channel<0, bool > *p_7_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arready.bind(*p_7_m_axi_arready);
        (*_glb_hdl_sc_channel_map)[21950].first = 1;
        (*_glb_hdl_sc_channel_map)[21950].second.push_front(p_7_m_axi_arready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_7_m_axi_rid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_7->m_axi_rid.bind(*p_7_m_axi_rid);
        (*_glb_hdl_sc_channel_map)[21971].first = 3;
        (*_glb_hdl_sc_channel_map)[21971].second.push_front(p_7_m_axi_rid);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_7_m_axi_rdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_7->m_axi_rdata.bind(*p_7_m_axi_rdata);
        (*_glb_hdl_sc_channel_map)[21970].first = 3;
        (*_glb_hdl_sc_channel_map)[21970].second.push_front(p_7_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_rresp.bind(*p_7_m_axi_rresp);
        (*_glb_hdl_sc_channel_map)[21974].first = 3;
        (*_glb_hdl_sc_channel_map)[21974].second.push_front(p_7_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rlast.bind(*p_7_m_axi_rlast);
        (*_glb_hdl_sc_channel_map)[21972].first = 1;
        (*_glb_hdl_sc_channel_map)[21972].second.push_front(p_7_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_7_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rvalid.bind(*p_7_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[21975].first = 1;
        (*_glb_hdl_sc_channel_map)[21975].second.push_front(p_7_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rready.bind(*p_7_m_axi_rready);
        p_7_m_axi_rready->set_sv_netview_offsetfromdp(11406776);
        sc_inst_8 = new zcu104_base_auto_ds_0(".zcu104_base_wrapper.zcu104_base_i.interconnect_axihpm0fpd.m01_couplers.auto_ds");
        sc_inst_8->xsim_set_dbg_index(1958);
        xsim_sc_channel<0, bool > *p_8_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_aclk.bind(*p_8_s_axi_aclk);
        (*_glb_hdl_sc_channel_map)[22059].first = 1;
        (*_glb_hdl_sc_channel_map)[22059].second.push_front(p_8_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_8_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_aresetn.bind(*p_8_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[22063].first = 1;
        (*_glb_hdl_sc_channel_map)[22063].second.push_front(p_8_s_axi_aresetn);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_8_s_axi_awid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_8->s_axi_awid.bind(*p_8_s_axi_awid);
        (*_glb_hdl_sc_channel_map)[22076].first = 3;
        (*_glb_hdl_sc_channel_map)[22076].second.push_front(p_8_s_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_awaddr.bind(*p_8_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[22073].first = 3;
        (*_glb_hdl_sc_channel_map)[22073].second.push_front(p_8_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_awlen.bind(*p_8_s_axi_awlen);
        (*_glb_hdl_sc_channel_map)[22077].first = 3;
        (*_glb_hdl_sc_channel_map)[22077].second.push_front(p_8_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_awsize.bind(*p_8_s_axi_awsize);
        (*_glb_hdl_sc_channel_map)[22083].first = 3;
        (*_glb_hdl_sc_channel_map)[22083].second.push_front(p_8_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_awburst.bind(*p_8_s_axi_awburst);
        (*_glb_hdl_sc_channel_map)[22074].first = 3;
        (*_glb_hdl_sc_channel_map)[22074].second.push_front(p_8_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_axi_awlock.bind(*p_8_s_axi_awlock);
        (*_glb_hdl_sc_channel_map)[22078].first = 3;
        (*_glb_hdl_sc_channel_map)[22078].second.push_front(p_8_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_axi_awcache.bind(*p_8_s_axi_awcache);
        (*_glb_hdl_sc_channel_map)[22075].first = 3;
        (*_glb_hdl_sc_channel_map)[22075].second.push_front(p_8_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_awprot.bind(*p_8_s_axi_awprot);
        (*_glb_hdl_sc_channel_map)[22079].first = 3;
        (*_glb_hdl_sc_channel_map)[22079].second.push_front(p_8_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_axi_awregion.bind(*p_8_s_axi_awregion);
        (*_glb_hdl_sc_channel_map)[22082].first = 3;
        (*_glb_hdl_sc_channel_map)[22082].second.push_front(p_8_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_axi_awqos.bind(*p_8_s_axi_awqos);
        (*_glb_hdl_sc_channel_map)[22080].first = 3;
        (*_glb_hdl_sc_channel_map)[22080].second.push_front(p_8_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_8_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awvalid.bind(*p_8_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[22084].first = 1;
        (*_glb_hdl_sc_channel_map)[22084].second.push_front(p_8_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awready.bind(*p_8_s_axi_awready);
        p_8_s_axi_awready->set_sv_netview_offsetfromdp(11407608);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_8_s_axi_wdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_8->s_axi_wdata.bind(*p_8_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[22095].first = 3;
        (*_glb_hdl_sc_channel_map)[22095].second.push_front(p_8_s_axi_wdata);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_8_s_axi_wstrb = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_8->s_axi_wstrb.bind(*p_8_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[22098].first = 3;
        (*_glb_hdl_sc_channel_map)[22098].second.push_front(p_8_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wlast.bind(*p_8_s_axi_wlast);
        (*_glb_hdl_sc_channel_map)[22096].first = 1;
        (*_glb_hdl_sc_channel_map)[22096].second.push_front(p_8_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_8_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wvalid.bind(*p_8_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[22099].first = 1;
        (*_glb_hdl_sc_channel_map)[22099].second.push_front(p_8_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wready.bind(*p_8_s_axi_wready);
        p_8_s_axi_wready->set_sv_netview_offsetfromdp(11407888);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_8_s_axi_bid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_8->s_axi_bid.bind(*p_8_s_axi_bid);
        p_8_s_axi_bid->set_sv_netview_offsetfromdp(11407944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_bresp.bind(*p_8_s_axi_bresp);
        p_8_s_axi_bresp->set_sv_netview_offsetfromdp(11408000);
        xsim_sc_channel<0, bool > *p_8_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bvalid.bind(*p_8_s_axi_bvalid);
        p_8_s_axi_bvalid->set_sv_netview_offsetfromdp(11408056);
        xsim_sc_channel<0, bool > *p_8_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bready.bind(*p_8_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[22086].first = 1;
        (*_glb_hdl_sc_channel_map)[22086].second.push_front(p_8_s_axi_bready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_8_s_axi_arid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_8->s_axi_arid.bind(*p_8_s_axi_arid);
        (*_glb_hdl_sc_channel_map)[22064].first = 3;
        (*_glb_hdl_sc_channel_map)[22064].second.push_front(p_8_s_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_araddr.bind(*p_8_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[22060].first = 3;
        (*_glb_hdl_sc_channel_map)[22060].second.push_front(p_8_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_arlen.bind(*p_8_s_axi_arlen);
        (*_glb_hdl_sc_channel_map)[22065].first = 3;
        (*_glb_hdl_sc_channel_map)[22065].second.push_front(p_8_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_arsize.bind(*p_8_s_axi_arsize);
        (*_glb_hdl_sc_channel_map)[22071].first = 3;
        (*_glb_hdl_sc_channel_map)[22071].second.push_front(p_8_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_arburst.bind(*p_8_s_axi_arburst);
        (*_glb_hdl_sc_channel_map)[22061].first = 3;
        (*_glb_hdl_sc_channel_map)[22061].second.push_front(p_8_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_axi_arlock.bind(*p_8_s_axi_arlock);
        (*_glb_hdl_sc_channel_map)[22066].first = 3;
        (*_glb_hdl_sc_channel_map)[22066].second.push_front(p_8_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_axi_arcache.bind(*p_8_s_axi_arcache);
        (*_glb_hdl_sc_channel_map)[22062].first = 3;
        (*_glb_hdl_sc_channel_map)[22062].second.push_front(p_8_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_arprot.bind(*p_8_s_axi_arprot);
        (*_glb_hdl_sc_channel_map)[22067].first = 3;
        (*_glb_hdl_sc_channel_map)[22067].second.push_front(p_8_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_axi_arregion.bind(*p_8_s_axi_arregion);
        (*_glb_hdl_sc_channel_map)[22070].first = 3;
        (*_glb_hdl_sc_channel_map)[22070].second.push_front(p_8_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_axi_arqos.bind(*p_8_s_axi_arqos);
        (*_glb_hdl_sc_channel_map)[22068].first = 3;
        (*_glb_hdl_sc_channel_map)[22068].second.push_front(p_8_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_8_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arvalid.bind(*p_8_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[22072].first = 1;
        (*_glb_hdl_sc_channel_map)[22072].second.push_front(p_8_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arready.bind(*p_8_s_axi_arready);
        p_8_s_axi_arready->set_sv_netview_offsetfromdp(11408784);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_8_s_axi_rid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_8->s_axi_rid.bind(*p_8_s_axi_rid);
        p_8_s_axi_rid->set_sv_netview_offsetfromdp(11408840);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_8_s_axi_rdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_8->s_axi_rdata.bind(*p_8_s_axi_rdata);
        p_8_s_axi_rdata->set_sv_netview_offsetfromdp(11408896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_rresp.bind(*p_8_s_axi_rresp);
        p_8_s_axi_rresp->set_sv_netview_offsetfromdp(11408952);
        xsim_sc_channel<0, bool > *p_8_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rlast.bind(*p_8_s_axi_rlast);
        p_8_s_axi_rlast->set_sv_netview_offsetfromdp(11409008);
        xsim_sc_channel<0, bool > *p_8_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rvalid.bind(*p_8_s_axi_rvalid);
        p_8_s_axi_rvalid->set_sv_netview_offsetfromdp(11409064);
        xsim_sc_channel<0, bool > *p_8_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rready.bind(*p_8_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[22092].first = 1;
        (*_glb_hdl_sc_channel_map)[22092].second.push_front(p_8_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_awaddr.bind(*p_8_m_axi_awaddr);
        p_8_m_axi_awaddr->set_sv_netview_offsetfromdp(11409176);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_awlen.bind(*p_8_m_axi_awlen);
        p_8_m_axi_awlen->set_sv_netview_offsetfromdp(11409232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_awsize.bind(*p_8_m_axi_awsize);
        p_8_m_axi_awsize->set_sv_netview_offsetfromdp(11409288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_awburst.bind(*p_8_m_axi_awburst);
        p_8_m_axi_awburst->set_sv_netview_offsetfromdp(11409344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m_axi_awlock.bind(*p_8_m_axi_awlock);
        p_8_m_axi_awlock->set_sv_netview_offsetfromdp(11409400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m_axi_awcache.bind(*p_8_m_axi_awcache);
        p_8_m_axi_awcache->set_sv_netview_offsetfromdp(11409456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_awprot.bind(*p_8_m_axi_awprot);
        p_8_m_axi_awprot->set_sv_netview_offsetfromdp(11409512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m_axi_awregion.bind(*p_8_m_axi_awregion);
        p_8_m_axi_awregion->set_sv_netview_offsetfromdp(11409568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m_axi_awqos.bind(*p_8_m_axi_awqos);
        p_8_m_axi_awqos->set_sv_netview_offsetfromdp(11409624);
        xsim_sc_channel<0, bool > *p_8_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awvalid.bind(*p_8_m_axi_awvalid);
        p_8_m_axi_awvalid->set_sv_netview_offsetfromdp(11409680);
        xsim_sc_channel<0, bool > *p_8_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awready.bind(*p_8_m_axi_awready);
        (*_glb_hdl_sc_channel_map)[22042].first = 1;
        (*_glb_hdl_sc_channel_map)[22042].second.push_front(p_8_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_wdata.bind(*p_8_m_axi_wdata);
        p_8_m_axi_wdata->set_sv_netview_offsetfromdp(11409792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m_axi_wstrb.bind(*p_8_m_axi_wstrb);
        p_8_m_axi_wstrb->set_sv_netview_offsetfromdp(11409848);
        xsim_sc_channel<0, bool > *p_8_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wlast.bind(*p_8_m_axi_wlast);
        p_8_m_axi_wlast->set_sv_netview_offsetfromdp(11409904);
        xsim_sc_channel<0, bool > *p_8_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wvalid.bind(*p_8_m_axi_wvalid);
        p_8_m_axi_wvalid->set_sv_netview_offsetfromdp(11409960);
        xsim_sc_channel<0, bool > *p_8_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wready.bind(*p_8_m_axi_wready);
        (*_glb_hdl_sc_channel_map)[22056].first = 1;
        (*_glb_hdl_sc_channel_map)[22056].second.push_front(p_8_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_bresp.bind(*p_8_m_axi_bresp);
        (*_glb_hdl_sc_channel_map)[22047].first = 3;
        (*_glb_hdl_sc_channel_map)[22047].second.push_front(p_8_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bvalid.bind(*p_8_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[22048].first = 1;
        (*_glb_hdl_sc_channel_map)[22048].second.push_front(p_8_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bready.bind(*p_8_m_axi_bready);
        p_8_m_axi_bready->set_sv_netview_offsetfromdp(11410184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_araddr.bind(*p_8_m_axi_araddr);
        p_8_m_axi_araddr->set_sv_netview_offsetfromdp(11410240);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_arlen.bind(*p_8_m_axi_arlen);
        p_8_m_axi_arlen->set_sv_netview_offsetfromdp(11410296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_arsize.bind(*p_8_m_axi_arsize);
        p_8_m_axi_arsize->set_sv_netview_offsetfromdp(11410352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_arburst.bind(*p_8_m_axi_arburst);
        p_8_m_axi_arburst->set_sv_netview_offsetfromdp(11410408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m_axi_arlock.bind(*p_8_m_axi_arlock);
        p_8_m_axi_arlock->set_sv_netview_offsetfromdp(11410464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m_axi_arcache.bind(*p_8_m_axi_arcache);
        p_8_m_axi_arcache->set_sv_netview_offsetfromdp(11410520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_arprot.bind(*p_8_m_axi_arprot);
        p_8_m_axi_arprot->set_sv_netview_offsetfromdp(11410576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m_axi_arregion.bind(*p_8_m_axi_arregion);
        p_8_m_axi_arregion->set_sv_netview_offsetfromdp(11410632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m_axi_arqos.bind(*p_8_m_axi_arqos);
        p_8_m_axi_arqos->set_sv_netview_offsetfromdp(11410688);
        xsim_sc_channel<0, bool > *p_8_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arvalid.bind(*p_8_m_axi_arvalid);
        p_8_m_axi_arvalid->set_sv_netview_offsetfromdp(11410744);
        xsim_sc_channel<0, bool > *p_8_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arready.bind(*p_8_m_axi_arready);
        (*_glb_hdl_sc_channel_map)[22031].first = 1;
        (*_glb_hdl_sc_channel_map)[22031].second.push_front(p_8_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_rdata.bind(*p_8_m_axi_rdata);
        (*_glb_hdl_sc_channel_map)[22049].first = 3;
        (*_glb_hdl_sc_channel_map)[22049].second.push_front(p_8_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_rresp.bind(*p_8_m_axi_rresp);
        (*_glb_hdl_sc_channel_map)[22052].first = 3;
        (*_glb_hdl_sc_channel_map)[22052].second.push_front(p_8_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rlast.bind(*p_8_m_axi_rlast);
        (*_glb_hdl_sc_channel_map)[22050].first = 1;
        (*_glb_hdl_sc_channel_map)[22050].second.push_front(p_8_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_8_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rvalid.bind(*p_8_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[22053].first = 1;
        (*_glb_hdl_sc_channel_map)[22053].second.push_front(p_8_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rready.bind(*p_8_m_axi_rready);
        p_8_m_axi_rready->set_sv_netview_offsetfromdp(11411080);
        sc_inst_9 = new zcu104_base_m01_regslice_3(".zcu104_base_wrapper.zcu104_base_i.interconnect_axihpm0fpd.m01_couplers.m01_regslice");
        sc_inst_9->xsim_set_dbg_index(1959);
        xsim_sc_channel<0, bool > *p_9_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->aclk.bind(*p_9_aclk);
        (*_glb_hdl_sc_channel_map)[22100].first = 1;
        (*_glb_hdl_sc_channel_map)[22100].second.push_front(p_9_aclk);
        xsim_sc_channel<0, bool > *p_9_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->aresetn.bind(*p_9_aresetn);
        (*_glb_hdl_sc_channel_map)[22101].first = 1;
        (*_glb_hdl_sc_channel_map)[22101].second.push_front(p_9_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_awaddr.bind(*p_9_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[22138].first = 3;
        (*_glb_hdl_sc_channel_map)[22138].second.push_front(p_9_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_awlen.bind(*p_9_s_axi_awlen);
        (*_glb_hdl_sc_channel_map)[22141].first = 3;
        (*_glb_hdl_sc_channel_map)[22141].second.push_front(p_9_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_awsize.bind(*p_9_s_axi_awsize);
        (*_glb_hdl_sc_channel_map)[22147].first = 3;
        (*_glb_hdl_sc_channel_map)[22147].second.push_front(p_9_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_awburst.bind(*p_9_s_axi_awburst);
        (*_glb_hdl_sc_channel_map)[22139].first = 3;
        (*_glb_hdl_sc_channel_map)[22139].second.push_front(p_9_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_axi_awlock.bind(*p_9_s_axi_awlock);
        (*_glb_hdl_sc_channel_map)[22142].first = 3;
        (*_glb_hdl_sc_channel_map)[22142].second.push_front(p_9_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_axi_awcache.bind(*p_9_s_axi_awcache);
        (*_glb_hdl_sc_channel_map)[22140].first = 3;
        (*_glb_hdl_sc_channel_map)[22140].second.push_front(p_9_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_awprot.bind(*p_9_s_axi_awprot);
        (*_glb_hdl_sc_channel_map)[22143].first = 3;
        (*_glb_hdl_sc_channel_map)[22143].second.push_front(p_9_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_axi_awregion.bind(*p_9_s_axi_awregion);
        (*_glb_hdl_sc_channel_map)[22146].first = 3;
        (*_glb_hdl_sc_channel_map)[22146].second.push_front(p_9_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_axi_awqos.bind(*p_9_s_axi_awqos);
        (*_glb_hdl_sc_channel_map)[22144].first = 3;
        (*_glb_hdl_sc_channel_map)[22144].second.push_front(p_9_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_9_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awvalid.bind(*p_9_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[22148].first = 1;
        (*_glb_hdl_sc_channel_map)[22148].second.push_front(p_9_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awready.bind(*p_9_s_axi_awready);
        p_9_s_axi_awready->set_sv_netview_offsetfromdp(11411856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_wdata.bind(*p_9_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[22157].first = 3;
        (*_glb_hdl_sc_channel_map)[22157].second.push_front(p_9_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_axi_wstrb.bind(*p_9_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[22160].first = 3;
        (*_glb_hdl_sc_channel_map)[22160].second.push_front(p_9_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wlast.bind(*p_9_s_axi_wlast);
        (*_glb_hdl_sc_channel_map)[22158].first = 1;
        (*_glb_hdl_sc_channel_map)[22158].second.push_front(p_9_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_9_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wvalid.bind(*p_9_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[22161].first = 1;
        (*_glb_hdl_sc_channel_map)[22161].second.push_front(p_9_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wready.bind(*p_9_s_axi_wready);
        p_9_s_axi_wready->set_sv_netview_offsetfromdp(11412136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_bresp.bind(*p_9_s_axi_bresp);
        p_9_s_axi_bresp->set_sv_netview_offsetfromdp(11412192);
        xsim_sc_channel<0, bool > *p_9_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bvalid.bind(*p_9_s_axi_bvalid);
        p_9_s_axi_bvalid->set_sv_netview_offsetfromdp(11412248);
        xsim_sc_channel<0, bool > *p_9_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bready.bind(*p_9_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[22149].first = 1;
        (*_glb_hdl_sc_channel_map)[22149].second.push_front(p_9_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_araddr.bind(*p_9_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[22127].first = 3;
        (*_glb_hdl_sc_channel_map)[22127].second.push_front(p_9_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_arlen.bind(*p_9_s_axi_arlen);
        (*_glb_hdl_sc_channel_map)[22130].first = 3;
        (*_glb_hdl_sc_channel_map)[22130].second.push_front(p_9_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_arsize.bind(*p_9_s_axi_arsize);
        (*_glb_hdl_sc_channel_map)[22136].first = 3;
        (*_glb_hdl_sc_channel_map)[22136].second.push_front(p_9_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_arburst.bind(*p_9_s_axi_arburst);
        (*_glb_hdl_sc_channel_map)[22128].first = 3;
        (*_glb_hdl_sc_channel_map)[22128].second.push_front(p_9_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_axi_arlock.bind(*p_9_s_axi_arlock);
        (*_glb_hdl_sc_channel_map)[22131].first = 3;
        (*_glb_hdl_sc_channel_map)[22131].second.push_front(p_9_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_axi_arcache.bind(*p_9_s_axi_arcache);
        (*_glb_hdl_sc_channel_map)[22129].first = 3;
        (*_glb_hdl_sc_channel_map)[22129].second.push_front(p_9_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_arprot.bind(*p_9_s_axi_arprot);
        (*_glb_hdl_sc_channel_map)[22132].first = 3;
        (*_glb_hdl_sc_channel_map)[22132].second.push_front(p_9_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_axi_arregion.bind(*p_9_s_axi_arregion);
        (*_glb_hdl_sc_channel_map)[22135].first = 3;
        (*_glb_hdl_sc_channel_map)[22135].second.push_front(p_9_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_axi_arqos.bind(*p_9_s_axi_arqos);
        (*_glb_hdl_sc_channel_map)[22133].first = 3;
        (*_glb_hdl_sc_channel_map)[22133].second.push_front(p_9_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_9_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arvalid.bind(*p_9_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[22137].first = 1;
        (*_glb_hdl_sc_channel_map)[22137].second.push_front(p_9_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arready.bind(*p_9_s_axi_arready);
        p_9_s_axi_arready->set_sv_netview_offsetfromdp(11412920);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_rdata.bind(*p_9_s_axi_rdata);
        p_9_s_axi_rdata->set_sv_netview_offsetfromdp(11412976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_rresp.bind(*p_9_s_axi_rresp);
        p_9_s_axi_rresp->set_sv_netview_offsetfromdp(11413032);
        xsim_sc_channel<0, bool > *p_9_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rlast.bind(*p_9_s_axi_rlast);
        p_9_s_axi_rlast->set_sv_netview_offsetfromdp(11413088);
        xsim_sc_channel<0, bool > *p_9_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rvalid.bind(*p_9_s_axi_rvalid);
        p_9_s_axi_rvalid->set_sv_netview_offsetfromdp(11413144);
        xsim_sc_channel<0, bool > *p_9_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rready.bind(*p_9_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[22154].first = 1;
        (*_glb_hdl_sc_channel_map)[22154].second.push_front(p_9_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_awaddr.bind(*p_9_m_axi_awaddr);
        p_9_m_axi_awaddr->set_sv_netview_offsetfromdp(11413256);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m_axi_awlen.bind(*p_9_m_axi_awlen);
        p_9_m_axi_awlen->set_sv_netview_offsetfromdp(11413312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_awsize.bind(*p_9_m_axi_awsize);
        p_9_m_axi_awsize->set_sv_netview_offsetfromdp(11413368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_awburst.bind(*p_9_m_axi_awburst);
        p_9_m_axi_awburst->set_sv_netview_offsetfromdp(11413424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m_axi_awlock.bind(*p_9_m_axi_awlock);
        p_9_m_axi_awlock->set_sv_netview_offsetfromdp(11413480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m_axi_awcache.bind(*p_9_m_axi_awcache);
        p_9_m_axi_awcache->set_sv_netview_offsetfromdp(11413536);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_awprot.bind(*p_9_m_axi_awprot);
        p_9_m_axi_awprot->set_sv_netview_offsetfromdp(11413592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m_axi_awregion.bind(*p_9_m_axi_awregion);
        p_9_m_axi_awregion->set_sv_netview_offsetfromdp(11413648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m_axi_awqos.bind(*p_9_m_axi_awqos);
        p_9_m_axi_awqos->set_sv_netview_offsetfromdp(11413704);
        xsim_sc_channel<0, bool > *p_9_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awvalid.bind(*p_9_m_axi_awvalid);
        p_9_m_axi_awvalid->set_sv_netview_offsetfromdp(11413760);
        xsim_sc_channel<0, bool > *p_9_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awready.bind(*p_9_m_axi_awready);
        (*_glb_hdl_sc_channel_map)[22111].first = 1;
        (*_glb_hdl_sc_channel_map)[22111].second.push_front(p_9_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_wdata.bind(*p_9_m_axi_wdata);
        p_9_m_axi_wdata->set_sv_netview_offsetfromdp(11413872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m_axi_wstrb.bind(*p_9_m_axi_wstrb);
        p_9_m_axi_wstrb->set_sv_netview_offsetfromdp(11413928);
        xsim_sc_channel<0, bool > *p_9_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wlast.bind(*p_9_m_axi_wlast);
        p_9_m_axi_wlast->set_sv_netview_offsetfromdp(11413984);
        xsim_sc_channel<0, bool > *p_9_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wvalid.bind(*p_9_m_axi_wvalid);
        p_9_m_axi_wvalid->set_sv_netview_offsetfromdp(11414040);
        xsim_sc_channel<0, bool > *p_9_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wready.bind(*p_9_m_axi_wready);
        (*_glb_hdl_sc_channel_map)[22124].first = 1;
        (*_glb_hdl_sc_channel_map)[22124].second.push_front(p_9_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_bresp.bind(*p_9_m_axi_bresp);
        (*_glb_hdl_sc_channel_map)[22115].first = 3;
        (*_glb_hdl_sc_channel_map)[22115].second.push_front(p_9_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bvalid.bind(*p_9_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[22116].first = 1;
        (*_glb_hdl_sc_channel_map)[22116].second.push_front(p_9_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bready.bind(*p_9_m_axi_bready);
        p_9_m_axi_bready->set_sv_netview_offsetfromdp(11414264);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_araddr.bind(*p_9_m_axi_araddr);
        p_9_m_axi_araddr->set_sv_netview_offsetfromdp(11414320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m_axi_arlen.bind(*p_9_m_axi_arlen);
        p_9_m_axi_arlen->set_sv_netview_offsetfromdp(11414376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_arsize.bind(*p_9_m_axi_arsize);
        p_9_m_axi_arsize->set_sv_netview_offsetfromdp(11414432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_arburst.bind(*p_9_m_axi_arburst);
        p_9_m_axi_arburst->set_sv_netview_offsetfromdp(11414488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m_axi_arlock.bind(*p_9_m_axi_arlock);
        p_9_m_axi_arlock->set_sv_netview_offsetfromdp(11414544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m_axi_arcache.bind(*p_9_m_axi_arcache);
        p_9_m_axi_arcache->set_sv_netview_offsetfromdp(11414600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_arprot.bind(*p_9_m_axi_arprot);
        p_9_m_axi_arprot->set_sv_netview_offsetfromdp(11414656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m_axi_arregion.bind(*p_9_m_axi_arregion);
        p_9_m_axi_arregion->set_sv_netview_offsetfromdp(11414712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m_axi_arqos.bind(*p_9_m_axi_arqos);
        p_9_m_axi_arqos->set_sv_netview_offsetfromdp(11414768);
        xsim_sc_channel<0, bool > *p_9_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arvalid.bind(*p_9_m_axi_arvalid);
        p_9_m_axi_arvalid->set_sv_netview_offsetfromdp(11414824);
        xsim_sc_channel<0, bool > *p_9_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arready.bind(*p_9_m_axi_arready);
        (*_glb_hdl_sc_channel_map)[22105].first = 1;
        (*_glb_hdl_sc_channel_map)[22105].second.push_front(p_9_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_rdata.bind(*p_9_m_axi_rdata);
        (*_glb_hdl_sc_channel_map)[22117].first = 3;
        (*_glb_hdl_sc_channel_map)[22117].second.push_front(p_9_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_rresp.bind(*p_9_m_axi_rresp);
        (*_glb_hdl_sc_channel_map)[22120].first = 3;
        (*_glb_hdl_sc_channel_map)[22120].second.push_front(p_9_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rlast.bind(*p_9_m_axi_rlast);
        (*_glb_hdl_sc_channel_map)[22118].first = 1;
        (*_glb_hdl_sc_channel_map)[22118].second.push_front(p_9_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_9_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rvalid.bind(*p_9_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[22121].first = 1;
        (*_glb_hdl_sc_channel_map)[22121].second.push_front(p_9_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rready.bind(*p_9_m_axi_rready);
        p_9_m_axi_rready->set_sv_netview_offsetfromdp(11415160);
        sc_inst_10 = new zcu104_base_xbar_2(".zcu104_base_wrapper.zcu104_base_i.interconnect_axihpm0fpd.xbar");
        sc_inst_10->xsim_set_dbg_index(881);
        xsim_sc_channel<0, bool > *p_10_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->aclk.bind(*p_10_aclk);
        (*_glb_hdl_sc_channel_map)[22211].first = 1;
        (*_glb_hdl_sc_channel_map)[22211].second.push_front(p_10_aclk);
        xsim_sc_channel<0, bool > *p_10_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->aresetn.bind(*p_10_aresetn);
        (*_glb_hdl_sc_channel_map)[22212].first = 1;
        (*_glb_hdl_sc_channel_map)[22212].second.push_front(p_10_aresetn);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_10_s_axi_awid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_10->s_axi_awid.bind(*p_10_s_axi_awid);
        (*_glb_hdl_sc_channel_map)[22310].first = 3;
        (*_glb_hdl_sc_channel_map)[22310].second.push_front(p_10_s_axi_awid);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_10_s_axi_awaddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_10->s_axi_awaddr.bind(*p_10_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[22307].first = 3;
        (*_glb_hdl_sc_channel_map)[22307].second.push_front(p_10_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_awlen.bind(*p_10_s_axi_awlen);
        (*_glb_hdl_sc_channel_map)[22311].first = 3;
        (*_glb_hdl_sc_channel_map)[22311].second.push_front(p_10_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_awsize.bind(*p_10_s_axi_awsize);
        (*_glb_hdl_sc_channel_map)[22316].first = 3;
        (*_glb_hdl_sc_channel_map)[22316].second.push_front(p_10_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_awburst.bind(*p_10_s_axi_awburst);
        (*_glb_hdl_sc_channel_map)[22308].first = 3;
        (*_glb_hdl_sc_channel_map)[22308].second.push_front(p_10_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_awlock.bind(*p_10_s_axi_awlock);
        (*_glb_hdl_sc_channel_map)[22312].first = 3;
        (*_glb_hdl_sc_channel_map)[22312].second.push_front(p_10_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_axi_awcache.bind(*p_10_s_axi_awcache);
        (*_glb_hdl_sc_channel_map)[22309].first = 3;
        (*_glb_hdl_sc_channel_map)[22309].second.push_front(p_10_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_awprot.bind(*p_10_s_axi_awprot);
        (*_glb_hdl_sc_channel_map)[22313].first = 3;
        (*_glb_hdl_sc_channel_map)[22313].second.push_front(p_10_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_axi_awqos.bind(*p_10_s_axi_awqos);
        (*_glb_hdl_sc_channel_map)[22314].first = 3;
        (*_glb_hdl_sc_channel_map)[22314].second.push_front(p_10_s_axi_awqos);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_10_s_axi_awuser = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_10->s_axi_awuser.bind(*p_10_s_axi_awuser);
        (*_glb_hdl_sc_channel_map)[22317].first = 3;
        (*_glb_hdl_sc_channel_map)[22317].second.push_front(p_10_s_axi_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_awvalid.bind(*p_10_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[22318].first = 3;
        (*_glb_hdl_sc_channel_map)[22318].second.push_front(p_10_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_awready.bind(*p_10_s_axi_awready);
        p_10_s_axi_awready->set_sv_netview_offsetfromdp(11436664);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_10_s_axi_wdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_10->s_axi_wdata.bind(*p_10_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[22329].first = 3;
        (*_glb_hdl_sc_channel_map)[22329].second.push_front(p_10_s_axi_wdata);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_10_s_axi_wstrb = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_10->s_axi_wstrb.bind(*p_10_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[22332].first = 3;
        (*_glb_hdl_sc_channel_map)[22332].second.push_front(p_10_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_wlast.bind(*p_10_s_axi_wlast);
        (*_glb_hdl_sc_channel_map)[22330].first = 3;
        (*_glb_hdl_sc_channel_map)[22330].second.push_front(p_10_s_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_wvalid.bind(*p_10_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[22333].first = 3;
        (*_glb_hdl_sc_channel_map)[22333].second.push_front(p_10_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_wready.bind(*p_10_s_axi_wready);
        p_10_s_axi_wready->set_sv_netview_offsetfromdp(11436944);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_10_s_axi_bid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_10->s_axi_bid.bind(*p_10_s_axi_bid);
        p_10_s_axi_bid->set_sv_netview_offsetfromdp(11437000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_bresp.bind(*p_10_s_axi_bresp);
        p_10_s_axi_bresp->set_sv_netview_offsetfromdp(11437056);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_bvalid.bind(*p_10_s_axi_bvalid);
        p_10_s_axi_bvalid->set_sv_netview_offsetfromdp(11437112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_bready.bind(*p_10_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[22320].first = 3;
        (*_glb_hdl_sc_channel_map)[22320].second.push_front(p_10_s_axi_bready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_10_s_axi_arid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_10->s_axi_arid.bind(*p_10_s_axi_arid);
        (*_glb_hdl_sc_channel_map)[22298].first = 3;
        (*_glb_hdl_sc_channel_map)[22298].second.push_front(p_10_s_axi_arid);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_10_s_axi_araddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_10->s_axi_araddr.bind(*p_10_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[22295].first = 3;
        (*_glb_hdl_sc_channel_map)[22295].second.push_front(p_10_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_arlen.bind(*p_10_s_axi_arlen);
        (*_glb_hdl_sc_channel_map)[22299].first = 3;
        (*_glb_hdl_sc_channel_map)[22299].second.push_front(p_10_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_arsize.bind(*p_10_s_axi_arsize);
        (*_glb_hdl_sc_channel_map)[22304].first = 3;
        (*_glb_hdl_sc_channel_map)[22304].second.push_front(p_10_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_arburst.bind(*p_10_s_axi_arburst);
        (*_glb_hdl_sc_channel_map)[22296].first = 3;
        (*_glb_hdl_sc_channel_map)[22296].second.push_front(p_10_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_arlock.bind(*p_10_s_axi_arlock);
        (*_glb_hdl_sc_channel_map)[22300].first = 3;
        (*_glb_hdl_sc_channel_map)[22300].second.push_front(p_10_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_axi_arcache.bind(*p_10_s_axi_arcache);
        (*_glb_hdl_sc_channel_map)[22297].first = 3;
        (*_glb_hdl_sc_channel_map)[22297].second.push_front(p_10_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_arprot.bind(*p_10_s_axi_arprot);
        (*_glb_hdl_sc_channel_map)[22301].first = 3;
        (*_glb_hdl_sc_channel_map)[22301].second.push_front(p_10_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_axi_arqos.bind(*p_10_s_axi_arqos);
        (*_glb_hdl_sc_channel_map)[22302].first = 3;
        (*_glb_hdl_sc_channel_map)[22302].second.push_front(p_10_s_axi_arqos);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_10_s_axi_aruser = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_10->s_axi_aruser.bind(*p_10_s_axi_aruser);
        (*_glb_hdl_sc_channel_map)[22305].first = 3;
        (*_glb_hdl_sc_channel_map)[22305].second.push_front(p_10_s_axi_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_arvalid.bind(*p_10_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[22306].first = 3;
        (*_glb_hdl_sc_channel_map)[22306].second.push_front(p_10_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_arready.bind(*p_10_s_axi_arready);
        p_10_s_axi_arready->set_sv_netview_offsetfromdp(11437840);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_10_s_axi_rid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_10->s_axi_rid.bind(*p_10_s_axi_rid);
        p_10_s_axi_rid->set_sv_netview_offsetfromdp(11437896);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_10_s_axi_rdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_10->s_axi_rdata.bind(*p_10_s_axi_rdata);
        p_10_s_axi_rdata->set_sv_netview_offsetfromdp(11437952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_rresp.bind(*p_10_s_axi_rresp);
        p_10_s_axi_rresp->set_sv_netview_offsetfromdp(11438008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_rlast.bind(*p_10_s_axi_rlast);
        p_10_s_axi_rlast->set_sv_netview_offsetfromdp(11438064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_rvalid.bind(*p_10_s_axi_rvalid);
        p_10_s_axi_rvalid->set_sv_netview_offsetfromdp(11438120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_axi_rready.bind(*p_10_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[22326].first = 3;
        (*_glb_hdl_sc_channel_map)[22326].second.push_front(p_10_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_awid = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_awid.bind(*p_10_m_axi_awid);
        p_10_m_axi_awid->set_sv_netview_offsetfromdp(11438232);
        xsim_sc_channel<80, sc_dt::sc_bv<80> > *p_10_m_axi_awaddr = new xsim_sc_channel<80, sc_dt::sc_bv<80> >();
        sc_inst_10->m_axi_awaddr.bind(*p_10_m_axi_awaddr);
        p_10_m_axi_awaddr->set_sv_netview_offsetfromdp(11438288);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_10_m_axi_awlen = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_10->m_axi_awlen.bind(*p_10_m_axi_awlen);
        p_10_m_axi_awlen->set_sv_netview_offsetfromdp(11438344);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_10_m_axi_awsize = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_10->m_axi_awsize.bind(*p_10_m_axi_awsize);
        p_10_m_axi_awsize->set_sv_netview_offsetfromdp(11438400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_awburst = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_awburst.bind(*p_10_m_axi_awburst);
        p_10_m_axi_awburst->set_sv_netview_offsetfromdp(11438456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_awlock.bind(*p_10_m_axi_awlock);
        p_10_m_axi_awlock->set_sv_netview_offsetfromdp(11438512);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_awcache = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_awcache.bind(*p_10_m_axi_awcache);
        p_10_m_axi_awcache->set_sv_netview_offsetfromdp(11438568);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_10_m_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_10->m_axi_awprot.bind(*p_10_m_axi_awprot);
        p_10_m_axi_awprot->set_sv_netview_offsetfromdp(11438624);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_awregion = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_awregion.bind(*p_10_m_axi_awregion);
        p_10_m_axi_awregion->set_sv_netview_offsetfromdp(11438680);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_awqos = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_awqos.bind(*p_10_m_axi_awqos);
        p_10_m_axi_awqos->set_sv_netview_offsetfromdp(11438736);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_awuser.bind(*p_10_m_axi_awuser);
        p_10_m_axi_awuser->set_sv_netview_offsetfromdp(11438792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_awvalid.bind(*p_10_m_axi_awvalid);
        p_10_m_axi_awvalid->set_sv_netview_offsetfromdp(11438848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_awready.bind(*p_10_m_axi_awready);
        (*_glb_hdl_sc_channel_map)[22256].first = 3;
        (*_glb_hdl_sc_channel_map)[22256].second.push_front(p_10_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_10_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_10->m_axi_wdata.bind(*p_10_m_axi_wdata);
        p_10_m_axi_wdata->set_sv_netview_offsetfromdp(11438960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_wstrb.bind(*p_10_m_axi_wstrb);
        p_10_m_axi_wstrb->set_sv_netview_offsetfromdp(11439016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_wlast = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_wlast.bind(*p_10_m_axi_wlast);
        p_10_m_axi_wlast->set_sv_netview_offsetfromdp(11439072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_wvalid.bind(*p_10_m_axi_wvalid);
        p_10_m_axi_wvalid->set_sv_netview_offsetfromdp(11439128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_wready.bind(*p_10_m_axi_wready);
        (*_glb_hdl_sc_channel_map)[22290].first = 3;
        (*_glb_hdl_sc_channel_map)[22290].second.push_front(p_10_m_axi_wready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_bid = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_bid.bind(*p_10_m_axi_bid);
        (*_glb_hdl_sc_channel_map)[22266].first = 3;
        (*_glb_hdl_sc_channel_map)[22266].second.push_front(p_10_m_axi_bid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_bresp.bind(*p_10_m_axi_bresp);
        (*_glb_hdl_sc_channel_map)[22270].first = 3;
        (*_glb_hdl_sc_channel_map)[22270].second.push_front(p_10_m_axi_bresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_bvalid.bind(*p_10_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[22272].first = 3;
        (*_glb_hdl_sc_channel_map)[22272].second.push_front(p_10_m_axi_bvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_bready.bind(*p_10_m_axi_bready);
        p_10_m_axi_bready->set_sv_netview_offsetfromdp(11439408);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_arid = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_arid.bind(*p_10_m_axi_arid);
        p_10_m_axi_arid->set_sv_netview_offsetfromdp(11439464);
        xsim_sc_channel<80, sc_dt::sc_bv<80> > *p_10_m_axi_araddr = new xsim_sc_channel<80, sc_dt::sc_bv<80> >();
        sc_inst_10->m_axi_araddr.bind(*p_10_m_axi_araddr);
        p_10_m_axi_araddr->set_sv_netview_offsetfromdp(11439520);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_10_m_axi_arlen = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_10->m_axi_arlen.bind(*p_10_m_axi_arlen);
        p_10_m_axi_arlen->set_sv_netview_offsetfromdp(11439576);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_10_m_axi_arsize = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_10->m_axi_arsize.bind(*p_10_m_axi_arsize);
        p_10_m_axi_arsize->set_sv_netview_offsetfromdp(11439632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_arburst = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_arburst.bind(*p_10_m_axi_arburst);
        p_10_m_axi_arburst->set_sv_netview_offsetfromdp(11439688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_arlock.bind(*p_10_m_axi_arlock);
        p_10_m_axi_arlock->set_sv_netview_offsetfromdp(11439744);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_arcache = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_arcache.bind(*p_10_m_axi_arcache);
        p_10_m_axi_arcache->set_sv_netview_offsetfromdp(11439800);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_10_m_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_10->m_axi_arprot.bind(*p_10_m_axi_arprot);
        p_10_m_axi_arprot->set_sv_netview_offsetfromdp(11439856);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_arregion = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_arregion.bind(*p_10_m_axi_arregion);
        p_10_m_axi_arregion->set_sv_netview_offsetfromdp(11439912);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_arqos = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_arqos.bind(*p_10_m_axi_arqos);
        p_10_m_axi_arqos->set_sv_netview_offsetfromdp(11439968);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_aruser.bind(*p_10_m_axi_aruser);
        p_10_m_axi_aruser->set_sv_netview_offsetfromdp(11440024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_arvalid.bind(*p_10_m_axi_arvalid);
        p_10_m_axi_arvalid->set_sv_netview_offsetfromdp(11440080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_arready.bind(*p_10_m_axi_arready);
        (*_glb_hdl_sc_channel_map)[22230].first = 3;
        (*_glb_hdl_sc_channel_map)[22230].second.push_front(p_10_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_rid = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_rid.bind(*p_10_m_axi_rid);
        (*_glb_hdl_sc_channel_map)[22276].first = 3;
        (*_glb_hdl_sc_channel_map)[22276].second.push_front(p_10_m_axi_rid);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_10_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_10->m_axi_rdata.bind(*p_10_m_axi_rdata);
        (*_glb_hdl_sc_channel_map)[22274].first = 3;
        (*_glb_hdl_sc_channel_map)[22274].second.push_front(p_10_m_axi_rdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_rresp.bind(*p_10_m_axi_rresp);
        (*_glb_hdl_sc_channel_map)[22282].first = 3;
        (*_glb_hdl_sc_channel_map)[22282].second.push_front(p_10_m_axi_rresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_rlast = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_rlast.bind(*p_10_m_axi_rlast);
        (*_glb_hdl_sc_channel_map)[22278].first = 3;
        (*_glb_hdl_sc_channel_map)[22278].second.push_front(p_10_m_axi_rlast);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_rvalid.bind(*p_10_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[22284].first = 3;
        (*_glb_hdl_sc_channel_map)[22284].second.push_front(p_10_m_axi_rvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_rready.bind(*p_10_m_axi_rready);
        p_10_m_axi_rready->set_sv_netview_offsetfromdp(11440472);
        sc_inst_11 = new zcu104_base_auto_pc_0(".zcu104_base_wrapper.zcu104_base_i.interconnect_axilite.m00_couplers.auto_pc");
        sc_inst_11->xsim_set_dbg_index(2108);
        xsim_sc_channel<0, bool > *p_11_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->aclk.bind(*p_11_aclk);
        (*_glb_hdl_sc_channel_map)[22682].first = 1;
        (*_glb_hdl_sc_channel_map)[22682].second.push_front(p_11_aclk);
        xsim_sc_channel<0, bool > *p_11_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->aresetn.bind(*p_11_aresetn);
        (*_glb_hdl_sc_channel_map)[22683].first = 1;
        (*_glb_hdl_sc_channel_map)[22683].second.push_front(p_11_aresetn);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_11_s_axi_awid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_11->s_axi_awid.bind(*p_11_s_axi_awid);
        (*_glb_hdl_sc_channel_map)[22716].first = 3;
        (*_glb_hdl_sc_channel_map)[22716].second.push_front(p_11_s_axi_awid);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_11_s_axi_awaddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_11->s_axi_awaddr.bind(*p_11_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[22713].first = 3;
        (*_glb_hdl_sc_channel_map)[22713].second.push_front(p_11_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_axi_awlen.bind(*p_11_s_axi_awlen);
        (*_glb_hdl_sc_channel_map)[22717].first = 3;
        (*_glb_hdl_sc_channel_map)[22717].second.push_front(p_11_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_awsize.bind(*p_11_s_axi_awsize);
        (*_glb_hdl_sc_channel_map)[22723].first = 3;
        (*_glb_hdl_sc_channel_map)[22723].second.push_front(p_11_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_awburst.bind(*p_11_s_axi_awburst);
        (*_glb_hdl_sc_channel_map)[22714].first = 3;
        (*_glb_hdl_sc_channel_map)[22714].second.push_front(p_11_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s_axi_awlock.bind(*p_11_s_axi_awlock);
        (*_glb_hdl_sc_channel_map)[22718].first = 3;
        (*_glb_hdl_sc_channel_map)[22718].second.push_front(p_11_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_axi_awcache.bind(*p_11_s_axi_awcache);
        (*_glb_hdl_sc_channel_map)[22715].first = 3;
        (*_glb_hdl_sc_channel_map)[22715].second.push_front(p_11_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_awprot.bind(*p_11_s_axi_awprot);
        (*_glb_hdl_sc_channel_map)[22719].first = 3;
        (*_glb_hdl_sc_channel_map)[22719].second.push_front(p_11_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_axi_awregion.bind(*p_11_s_axi_awregion);
        (*_glb_hdl_sc_channel_map)[22722].first = 3;
        (*_glb_hdl_sc_channel_map)[22722].second.push_front(p_11_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_axi_awqos.bind(*p_11_s_axi_awqos);
        (*_glb_hdl_sc_channel_map)[22720].first = 3;
        (*_glb_hdl_sc_channel_map)[22720].second.push_front(p_11_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_11_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awvalid.bind(*p_11_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[22724].first = 1;
        (*_glb_hdl_sc_channel_map)[22724].second.push_front(p_11_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awready.bind(*p_11_s_axi_awready);
        p_11_s_axi_awready->set_sv_netview_offsetfromdp(11544168);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_wdata.bind(*p_11_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[22735].first = 3;
        (*_glb_hdl_sc_channel_map)[22735].second.push_front(p_11_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_axi_wstrb.bind(*p_11_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[22738].first = 3;
        (*_glb_hdl_sc_channel_map)[22738].second.push_front(p_11_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wlast.bind(*p_11_s_axi_wlast);
        (*_glb_hdl_sc_channel_map)[22736].first = 1;
        (*_glb_hdl_sc_channel_map)[22736].second.push_front(p_11_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_11_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wvalid.bind(*p_11_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[22739].first = 1;
        (*_glb_hdl_sc_channel_map)[22739].second.push_front(p_11_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wready.bind(*p_11_s_axi_wready);
        p_11_s_axi_wready->set_sv_netview_offsetfromdp(11544448);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_11_s_axi_bid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_11->s_axi_bid.bind(*p_11_s_axi_bid);
        p_11_s_axi_bid->set_sv_netview_offsetfromdp(11544504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_bresp.bind(*p_11_s_axi_bresp);
        p_11_s_axi_bresp->set_sv_netview_offsetfromdp(11544560);
        xsim_sc_channel<0, bool > *p_11_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bvalid.bind(*p_11_s_axi_bvalid);
        p_11_s_axi_bvalid->set_sv_netview_offsetfromdp(11544616);
        xsim_sc_channel<0, bool > *p_11_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bready.bind(*p_11_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[22726].first = 1;
        (*_glb_hdl_sc_channel_map)[22726].second.push_front(p_11_s_axi_bready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_11_s_axi_arid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_11->s_axi_arid.bind(*p_11_s_axi_arid);
        (*_glb_hdl_sc_channel_map)[22704].first = 3;
        (*_glb_hdl_sc_channel_map)[22704].second.push_front(p_11_s_axi_arid);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_11_s_axi_araddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_11->s_axi_araddr.bind(*p_11_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[22701].first = 3;
        (*_glb_hdl_sc_channel_map)[22701].second.push_front(p_11_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_axi_arlen.bind(*p_11_s_axi_arlen);
        (*_glb_hdl_sc_channel_map)[22705].first = 3;
        (*_glb_hdl_sc_channel_map)[22705].second.push_front(p_11_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_arsize.bind(*p_11_s_axi_arsize);
        (*_glb_hdl_sc_channel_map)[22711].first = 3;
        (*_glb_hdl_sc_channel_map)[22711].second.push_front(p_11_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_arburst.bind(*p_11_s_axi_arburst);
        (*_glb_hdl_sc_channel_map)[22702].first = 3;
        (*_glb_hdl_sc_channel_map)[22702].second.push_front(p_11_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s_axi_arlock.bind(*p_11_s_axi_arlock);
        (*_glb_hdl_sc_channel_map)[22706].first = 3;
        (*_glb_hdl_sc_channel_map)[22706].second.push_front(p_11_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_axi_arcache.bind(*p_11_s_axi_arcache);
        (*_glb_hdl_sc_channel_map)[22703].first = 3;
        (*_glb_hdl_sc_channel_map)[22703].second.push_front(p_11_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_arprot.bind(*p_11_s_axi_arprot);
        (*_glb_hdl_sc_channel_map)[22707].first = 3;
        (*_glb_hdl_sc_channel_map)[22707].second.push_front(p_11_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_axi_arregion.bind(*p_11_s_axi_arregion);
        (*_glb_hdl_sc_channel_map)[22710].first = 3;
        (*_glb_hdl_sc_channel_map)[22710].second.push_front(p_11_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_axi_arqos.bind(*p_11_s_axi_arqos);
        (*_glb_hdl_sc_channel_map)[22708].first = 3;
        (*_glb_hdl_sc_channel_map)[22708].second.push_front(p_11_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_11_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arvalid.bind(*p_11_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[22712].first = 1;
        (*_glb_hdl_sc_channel_map)[22712].second.push_front(p_11_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arready.bind(*p_11_s_axi_arready);
        p_11_s_axi_arready->set_sv_netview_offsetfromdp(11545344);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_11_s_axi_rid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_11->s_axi_rid.bind(*p_11_s_axi_rid);
        p_11_s_axi_rid->set_sv_netview_offsetfromdp(11545400);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_rdata.bind(*p_11_s_axi_rdata);
        p_11_s_axi_rdata->set_sv_netview_offsetfromdp(11545456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_rresp.bind(*p_11_s_axi_rresp);
        p_11_s_axi_rresp->set_sv_netview_offsetfromdp(11545512);
        xsim_sc_channel<0, bool > *p_11_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rlast.bind(*p_11_s_axi_rlast);
        p_11_s_axi_rlast->set_sv_netview_offsetfromdp(11545568);
        xsim_sc_channel<0, bool > *p_11_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rvalid.bind(*p_11_s_axi_rvalid);
        p_11_s_axi_rvalid->set_sv_netview_offsetfromdp(11545624);
        xsim_sc_channel<0, bool > *p_11_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rready.bind(*p_11_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[22732].first = 1;
        (*_glb_hdl_sc_channel_map)[22732].second.push_front(p_11_s_axi_rready);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_11_m_axi_awaddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_11->m_axi_awaddr.bind(*p_11_m_axi_awaddr);
        p_11_m_axi_awaddr->set_sv_netview_offsetfromdp(11545736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m_axi_awprot.bind(*p_11_m_axi_awprot);
        p_11_m_axi_awprot->set_sv_netview_offsetfromdp(11545792);
        xsim_sc_channel<0, bool > *p_11_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_awvalid.bind(*p_11_m_axi_awvalid);
        p_11_m_axi_awvalid->set_sv_netview_offsetfromdp(11545848);
        xsim_sc_channel<0, bool > *p_11_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_awready.bind(*p_11_m_axi_awready);
        (*_glb_hdl_sc_channel_map)[22688].first = 1;
        (*_glb_hdl_sc_channel_map)[22688].second.push_front(p_11_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m_axi_wdata.bind(*p_11_m_axi_wdata);
        p_11_m_axi_wdata->set_sv_netview_offsetfromdp(11545960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m_axi_wstrb.bind(*p_11_m_axi_wstrb);
        p_11_m_axi_wstrb->set_sv_netview_offsetfromdp(11546016);
        xsim_sc_channel<0, bool > *p_11_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_wvalid.bind(*p_11_m_axi_wvalid);
        p_11_m_axi_wvalid->set_sv_netview_offsetfromdp(11546072);
        xsim_sc_channel<0, bool > *p_11_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_wready.bind(*p_11_m_axi_wready);
        (*_glb_hdl_sc_channel_map)[22698].first = 1;
        (*_glb_hdl_sc_channel_map)[22698].second.push_front(p_11_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m_axi_bresp.bind(*p_11_m_axi_bresp);
        (*_glb_hdl_sc_channel_map)[22691].first = 3;
        (*_glb_hdl_sc_channel_map)[22691].second.push_front(p_11_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_11_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_bvalid.bind(*p_11_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[22692].first = 1;
        (*_glb_hdl_sc_channel_map)[22692].second.push_front(p_11_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_11_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_bready.bind(*p_11_m_axi_bready);
        p_11_m_axi_bready->set_sv_netview_offsetfromdp(11546296);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_11_m_axi_araddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_11->m_axi_araddr.bind(*p_11_m_axi_araddr);
        p_11_m_axi_araddr->set_sv_netview_offsetfromdp(11546352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m_axi_arprot.bind(*p_11_m_axi_arprot);
        p_11_m_axi_arprot->set_sv_netview_offsetfromdp(11546408);
        xsim_sc_channel<0, bool > *p_11_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_arvalid.bind(*p_11_m_axi_arvalid);
        p_11_m_axi_arvalid->set_sv_netview_offsetfromdp(11546464);
        xsim_sc_channel<0, bool > *p_11_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_arready.bind(*p_11_m_axi_arready);
        (*_glb_hdl_sc_channel_map)[22685].first = 1;
        (*_glb_hdl_sc_channel_map)[22685].second.push_front(p_11_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m_axi_rdata.bind(*p_11_m_axi_rdata);
        (*_glb_hdl_sc_channel_map)[22693].first = 3;
        (*_glb_hdl_sc_channel_map)[22693].second.push_front(p_11_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m_axi_rresp.bind(*p_11_m_axi_rresp);
        (*_glb_hdl_sc_channel_map)[22695].first = 3;
        (*_glb_hdl_sc_channel_map)[22695].second.push_front(p_11_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_11_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_rvalid.bind(*p_11_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[22696].first = 1;
        (*_glb_hdl_sc_channel_map)[22696].second.push_front(p_11_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_11_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_rready.bind(*p_11_m_axi_rready);
        p_11_m_axi_rready->set_sv_netview_offsetfromdp(11546744);
        sc_inst_12 = new zcu104_base_auto_cc_1(".zcu104_base_wrapper.zcu104_base_i.interconnect_axilite.m01_couplers.auto_cc");
        sc_inst_12->xsim_set_dbg_index(2167);
        xsim_sc_channel<0, bool > *p_12_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_aclk.bind(*p_12_s_axi_aclk);
        (*_glb_hdl_sc_channel_map)[22907].first = 1;
        (*_glb_hdl_sc_channel_map)[22907].second.push_front(p_12_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_aresetn.bind(*p_12_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[22911].first = 1;
        (*_glb_hdl_sc_channel_map)[22911].second.push_front(p_12_s_axi_aresetn);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_12_s_axi_awid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_12->s_axi_awid.bind(*p_12_s_axi_awid);
        (*_glb_hdl_sc_channel_map)[22925].first = 3;
        (*_glb_hdl_sc_channel_map)[22925].second.push_front(p_12_s_axi_awid);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_12_s_axi_awaddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_12->s_axi_awaddr.bind(*p_12_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[22922].first = 3;
        (*_glb_hdl_sc_channel_map)[22922].second.push_front(p_12_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s_axi_awlen.bind(*p_12_s_axi_awlen);
        (*_glb_hdl_sc_channel_map)[22926].first = 3;
        (*_glb_hdl_sc_channel_map)[22926].second.push_front(p_12_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_awsize.bind(*p_12_s_axi_awsize);
        (*_glb_hdl_sc_channel_map)[22932].first = 3;
        (*_glb_hdl_sc_channel_map)[22932].second.push_front(p_12_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_awburst.bind(*p_12_s_axi_awburst);
        (*_glb_hdl_sc_channel_map)[22923].first = 3;
        (*_glb_hdl_sc_channel_map)[22923].second.push_front(p_12_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_awlock.bind(*p_12_s_axi_awlock);
        (*_glb_hdl_sc_channel_map)[22927].first = 3;
        (*_glb_hdl_sc_channel_map)[22927].second.push_front(p_12_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_axi_awcache.bind(*p_12_s_axi_awcache);
        (*_glb_hdl_sc_channel_map)[22924].first = 3;
        (*_glb_hdl_sc_channel_map)[22924].second.push_front(p_12_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_awprot.bind(*p_12_s_axi_awprot);
        (*_glb_hdl_sc_channel_map)[22928].first = 3;
        (*_glb_hdl_sc_channel_map)[22928].second.push_front(p_12_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_axi_awregion.bind(*p_12_s_axi_awregion);
        (*_glb_hdl_sc_channel_map)[22931].first = 3;
        (*_glb_hdl_sc_channel_map)[22931].second.push_front(p_12_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_axi_awqos.bind(*p_12_s_axi_awqos);
        (*_glb_hdl_sc_channel_map)[22929].first = 3;
        (*_glb_hdl_sc_channel_map)[22929].second.push_front(p_12_s_axi_awqos);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_12_s_axi_awuser = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_12->s_axi_awuser.bind(*p_12_s_axi_awuser);
        (*_glb_hdl_sc_channel_map)[22933].first = 3;
        (*_glb_hdl_sc_channel_map)[22933].second.push_front(p_12_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_12_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_awvalid.bind(*p_12_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[22934].first = 1;
        (*_glb_hdl_sc_channel_map)[22934].second.push_front(p_12_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_awready.bind(*p_12_s_axi_awready);
        p_12_s_axi_awready->set_sv_netview_offsetfromdp(11622312);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_wdata.bind(*p_12_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[22945].first = 3;
        (*_glb_hdl_sc_channel_map)[22945].second.push_front(p_12_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_axi_wstrb.bind(*p_12_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[22948].first = 3;
        (*_glb_hdl_sc_channel_map)[22948].second.push_front(p_12_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_wlast.bind(*p_12_s_axi_wlast);
        (*_glb_hdl_sc_channel_map)[22946].first = 1;
        (*_glb_hdl_sc_channel_map)[22946].second.push_front(p_12_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_12_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_wvalid.bind(*p_12_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[22949].first = 1;
        (*_glb_hdl_sc_channel_map)[22949].second.push_front(p_12_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_wready.bind(*p_12_s_axi_wready);
        p_12_s_axi_wready->set_sv_netview_offsetfromdp(11622592);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_12_s_axi_bid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_12->s_axi_bid.bind(*p_12_s_axi_bid);
        p_12_s_axi_bid->set_sv_netview_offsetfromdp(11622648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_bresp.bind(*p_12_s_axi_bresp);
        p_12_s_axi_bresp->set_sv_netview_offsetfromdp(11622704);
        xsim_sc_channel<0, bool > *p_12_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_bvalid.bind(*p_12_s_axi_bvalid);
        p_12_s_axi_bvalid->set_sv_netview_offsetfromdp(11622760);
        xsim_sc_channel<0, bool > *p_12_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_bready.bind(*p_12_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[22936].first = 1;
        (*_glb_hdl_sc_channel_map)[22936].second.push_front(p_12_s_axi_bready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_12_s_axi_arid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_12->s_axi_arid.bind(*p_12_s_axi_arid);
        (*_glb_hdl_sc_channel_map)[22912].first = 3;
        (*_glb_hdl_sc_channel_map)[22912].second.push_front(p_12_s_axi_arid);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_12_s_axi_araddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_12->s_axi_araddr.bind(*p_12_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[22908].first = 3;
        (*_glb_hdl_sc_channel_map)[22908].second.push_front(p_12_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s_axi_arlen.bind(*p_12_s_axi_arlen);
        (*_glb_hdl_sc_channel_map)[22913].first = 3;
        (*_glb_hdl_sc_channel_map)[22913].second.push_front(p_12_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_arsize.bind(*p_12_s_axi_arsize);
        (*_glb_hdl_sc_channel_map)[22919].first = 3;
        (*_glb_hdl_sc_channel_map)[22919].second.push_front(p_12_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_arburst.bind(*p_12_s_axi_arburst);
        (*_glb_hdl_sc_channel_map)[22909].first = 3;
        (*_glb_hdl_sc_channel_map)[22909].second.push_front(p_12_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_axi_arlock.bind(*p_12_s_axi_arlock);
        (*_glb_hdl_sc_channel_map)[22914].first = 3;
        (*_glb_hdl_sc_channel_map)[22914].second.push_front(p_12_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_axi_arcache.bind(*p_12_s_axi_arcache);
        (*_glb_hdl_sc_channel_map)[22910].first = 3;
        (*_glb_hdl_sc_channel_map)[22910].second.push_front(p_12_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_arprot.bind(*p_12_s_axi_arprot);
        (*_glb_hdl_sc_channel_map)[22915].first = 3;
        (*_glb_hdl_sc_channel_map)[22915].second.push_front(p_12_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_axi_arregion.bind(*p_12_s_axi_arregion);
        (*_glb_hdl_sc_channel_map)[22918].first = 3;
        (*_glb_hdl_sc_channel_map)[22918].second.push_front(p_12_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_axi_arqos.bind(*p_12_s_axi_arqos);
        (*_glb_hdl_sc_channel_map)[22916].first = 3;
        (*_glb_hdl_sc_channel_map)[22916].second.push_front(p_12_s_axi_arqos);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_12_s_axi_aruser = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_12->s_axi_aruser.bind(*p_12_s_axi_aruser);
        (*_glb_hdl_sc_channel_map)[22920].first = 3;
        (*_glb_hdl_sc_channel_map)[22920].second.push_front(p_12_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_12_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_arvalid.bind(*p_12_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[22921].first = 1;
        (*_glb_hdl_sc_channel_map)[22921].second.push_front(p_12_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_arready.bind(*p_12_s_axi_arready);
        p_12_s_axi_arready->set_sv_netview_offsetfromdp(11623544);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_12_s_axi_rid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_12->s_axi_rid.bind(*p_12_s_axi_rid);
        p_12_s_axi_rid->set_sv_netview_offsetfromdp(11623600);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_rdata.bind(*p_12_s_axi_rdata);
        p_12_s_axi_rdata->set_sv_netview_offsetfromdp(11623656);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_rresp.bind(*p_12_s_axi_rresp);
        p_12_s_axi_rresp->set_sv_netview_offsetfromdp(11623712);
        xsim_sc_channel<0, bool > *p_12_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_rlast.bind(*p_12_s_axi_rlast);
        p_12_s_axi_rlast->set_sv_netview_offsetfromdp(11623768);
        xsim_sc_channel<0, bool > *p_12_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_rvalid.bind(*p_12_s_axi_rvalid);
        p_12_s_axi_rvalid->set_sv_netview_offsetfromdp(11623824);
        xsim_sc_channel<0, bool > *p_12_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_rready.bind(*p_12_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[22942].first = 1;
        (*_glb_hdl_sc_channel_map)[22942].second.push_front(p_12_s_axi_rready);
        xsim_sc_channel<0, bool > *p_12_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_aclk.bind(*p_12_m_axi_aclk);
        (*_glb_hdl_sc_channel_map)[22866].first = 1;
        (*_glb_hdl_sc_channel_map)[22866].second.push_front(p_12_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_aresetn.bind(*p_12_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[22870].first = 1;
        (*_glb_hdl_sc_channel_map)[22870].second.push_front(p_12_m_axi_aresetn);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_12_m_axi_awid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_12->m_axi_awid.bind(*p_12_m_axi_awid);
        p_12_m_axi_awid->set_sv_netview_offsetfromdp(11624048);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_12_m_axi_awaddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_12->m_axi_awaddr.bind(*p_12_m_axi_awaddr);
        p_12_m_axi_awaddr->set_sv_netview_offsetfromdp(11624104);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m_axi_awlen.bind(*p_12_m_axi_awlen);
        p_12_m_axi_awlen->set_sv_netview_offsetfromdp(11624160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m_axi_awsize.bind(*p_12_m_axi_awsize);
        p_12_m_axi_awsize->set_sv_netview_offsetfromdp(11624216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m_axi_awburst.bind(*p_12_m_axi_awburst);
        p_12_m_axi_awburst->set_sv_netview_offsetfromdp(11624272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m_axi_awlock.bind(*p_12_m_axi_awlock);
        p_12_m_axi_awlock->set_sv_netview_offsetfromdp(11624328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m_axi_awcache.bind(*p_12_m_axi_awcache);
        p_12_m_axi_awcache->set_sv_netview_offsetfromdp(11624384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m_axi_awprot.bind(*p_12_m_axi_awprot);
        p_12_m_axi_awprot->set_sv_netview_offsetfromdp(11624440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m_axi_awregion.bind(*p_12_m_axi_awregion);
        p_12_m_axi_awregion->set_sv_netview_offsetfromdp(11624496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m_axi_awqos.bind(*p_12_m_axi_awqos);
        p_12_m_axi_awqos->set_sv_netview_offsetfromdp(11624552);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_12_m_axi_awuser = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_12->m_axi_awuser.bind(*p_12_m_axi_awuser);
        p_12_m_axi_awuser->set_sv_netview_offsetfromdp(11624608);
        xsim_sc_channel<0, bool > *p_12_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_awvalid.bind(*p_12_m_axi_awvalid);
        p_12_m_axi_awvalid->set_sv_netview_offsetfromdp(11624664);
        xsim_sc_channel<0, bool > *p_12_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_awready.bind(*p_12_m_axi_awready);
        (*_glb_hdl_sc_channel_map)[22888].first = 1;
        (*_glb_hdl_sc_channel_map)[22888].second.push_front(p_12_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m_axi_wdata.bind(*p_12_m_axi_wdata);
        p_12_m_axi_wdata->set_sv_netview_offsetfromdp(11624776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m_axi_wstrb.bind(*p_12_m_axi_wstrb);
        p_12_m_axi_wstrb->set_sv_netview_offsetfromdp(11624832);
        xsim_sc_channel<0, bool > *p_12_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_wlast.bind(*p_12_m_axi_wlast);
        p_12_m_axi_wlast->set_sv_netview_offsetfromdp(11624888);
        xsim_sc_channel<0, bool > *p_12_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_wvalid.bind(*p_12_m_axi_wvalid);
        p_12_m_axi_wvalid->set_sv_netview_offsetfromdp(11624944);
        xsim_sc_channel<0, bool > *p_12_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_wready.bind(*p_12_m_axi_wready);
        (*_glb_hdl_sc_channel_map)[22904].first = 1;
        (*_glb_hdl_sc_channel_map)[22904].second.push_front(p_12_m_axi_wready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_12_m_axi_bid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_12->m_axi_bid.bind(*p_12_m_axi_bid);
        (*_glb_hdl_sc_channel_map)[22892].first = 3;
        (*_glb_hdl_sc_channel_map)[22892].second.push_front(p_12_m_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m_axi_bresp.bind(*p_12_m_axi_bresp);
        (*_glb_hdl_sc_channel_map)[22894].first = 3;
        (*_glb_hdl_sc_channel_map)[22894].second.push_front(p_12_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_12_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_bvalid.bind(*p_12_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[22895].first = 1;
        (*_glb_hdl_sc_channel_map)[22895].second.push_front(p_12_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_12_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_bready.bind(*p_12_m_axi_bready);
        p_12_m_axi_bready->set_sv_netview_offsetfromdp(11625224);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_12_m_axi_arid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_12->m_axi_arid.bind(*p_12_m_axi_arid);
        p_12_m_axi_arid->set_sv_netview_offsetfromdp(11625280);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_12_m_axi_araddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_12->m_axi_araddr.bind(*p_12_m_axi_araddr);
        p_12_m_axi_araddr->set_sv_netview_offsetfromdp(11625336);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m_axi_arlen.bind(*p_12_m_axi_arlen);
        p_12_m_axi_arlen->set_sv_netview_offsetfromdp(11625392);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m_axi_arsize.bind(*p_12_m_axi_arsize);
        p_12_m_axi_arsize->set_sv_netview_offsetfromdp(11625448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m_axi_arburst.bind(*p_12_m_axi_arburst);
        p_12_m_axi_arburst->set_sv_netview_offsetfromdp(11625504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m_axi_arlock.bind(*p_12_m_axi_arlock);
        p_12_m_axi_arlock->set_sv_netview_offsetfromdp(11625560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m_axi_arcache.bind(*p_12_m_axi_arcache);
        p_12_m_axi_arcache->set_sv_netview_offsetfromdp(11625616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m_axi_arprot.bind(*p_12_m_axi_arprot);
        p_12_m_axi_arprot->set_sv_netview_offsetfromdp(11625672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m_axi_arregion.bind(*p_12_m_axi_arregion);
        p_12_m_axi_arregion->set_sv_netview_offsetfromdp(11625728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m_axi_arqos.bind(*p_12_m_axi_arqos);
        p_12_m_axi_arqos->set_sv_netview_offsetfromdp(11625784);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_12_m_axi_aruser = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_12->m_axi_aruser.bind(*p_12_m_axi_aruser);
        p_12_m_axi_aruser->set_sv_netview_offsetfromdp(11625840);
        xsim_sc_channel<0, bool > *p_12_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_arvalid.bind(*p_12_m_axi_arvalid);
        p_12_m_axi_arvalid->set_sv_netview_offsetfromdp(11625896);
        xsim_sc_channel<0, bool > *p_12_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_arready.bind(*p_12_m_axi_arready);
        (*_glb_hdl_sc_channel_map)[22876].first = 1;
        (*_glb_hdl_sc_channel_map)[22876].second.push_front(p_12_m_axi_arready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_12_m_axi_rid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_12->m_axi_rid.bind(*p_12_m_axi_rid);
        (*_glb_hdl_sc_channel_map)[22897].first = 3;
        (*_glb_hdl_sc_channel_map)[22897].second.push_front(p_12_m_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m_axi_rdata.bind(*p_12_m_axi_rdata);
        (*_glb_hdl_sc_channel_map)[22896].first = 3;
        (*_glb_hdl_sc_channel_map)[22896].second.push_front(p_12_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m_axi_rresp.bind(*p_12_m_axi_rresp);
        (*_glb_hdl_sc_channel_map)[22900].first = 3;
        (*_glb_hdl_sc_channel_map)[22900].second.push_front(p_12_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_12_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_rlast.bind(*p_12_m_axi_rlast);
        (*_glb_hdl_sc_channel_map)[22898].first = 1;
        (*_glb_hdl_sc_channel_map)[22898].second.push_front(p_12_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_12_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_rvalid.bind(*p_12_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[22901].first = 1;
        (*_glb_hdl_sc_channel_map)[22901].second.push_front(p_12_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_12_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_rready.bind(*p_12_m_axi_rready);
        p_12_m_axi_rready->set_sv_netview_offsetfromdp(11626288);
        sc_inst_13 = new zcu104_base_auto_pc_1(".zcu104_base_wrapper.zcu104_base_i.interconnect_axilite.m01_couplers.auto_pc");
        sc_inst_13->xsim_set_dbg_index(2168);
        xsim_sc_channel<0, bool > *p_13_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->aclk.bind(*p_13_aclk);
        (*_glb_hdl_sc_channel_map)[22952].first = 1;
        (*_glb_hdl_sc_channel_map)[22952].second.push_front(p_13_aclk);
        xsim_sc_channel<0, bool > *p_13_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->aresetn.bind(*p_13_aresetn);
        (*_glb_hdl_sc_channel_map)[22953].first = 1;
        (*_glb_hdl_sc_channel_map)[22953].second.push_front(p_13_aresetn);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_13_s_axi_awid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_13->s_axi_awid.bind(*p_13_s_axi_awid);
        (*_glb_hdl_sc_channel_map)[22988].first = 3;
        (*_glb_hdl_sc_channel_map)[22988].second.push_front(p_13_s_axi_awid);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_13_s_axi_awaddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_13->s_axi_awaddr.bind(*p_13_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[22985].first = 3;
        (*_glb_hdl_sc_channel_map)[22985].second.push_front(p_13_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axi_awlen.bind(*p_13_s_axi_awlen);
        (*_glb_hdl_sc_channel_map)[22989].first = 3;
        (*_glb_hdl_sc_channel_map)[22989].second.push_front(p_13_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_axi_awsize.bind(*p_13_s_axi_awsize);
        (*_glb_hdl_sc_channel_map)[22995].first = 3;
        (*_glb_hdl_sc_channel_map)[22995].second.push_front(p_13_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_awburst.bind(*p_13_s_axi_awburst);
        (*_glb_hdl_sc_channel_map)[22986].first = 3;
        (*_glb_hdl_sc_channel_map)[22986].second.push_front(p_13_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s_axi_awlock.bind(*p_13_s_axi_awlock);
        (*_glb_hdl_sc_channel_map)[22990].first = 3;
        (*_glb_hdl_sc_channel_map)[22990].second.push_front(p_13_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axi_awcache.bind(*p_13_s_axi_awcache);
        (*_glb_hdl_sc_channel_map)[22987].first = 3;
        (*_glb_hdl_sc_channel_map)[22987].second.push_front(p_13_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_axi_awprot.bind(*p_13_s_axi_awprot);
        (*_glb_hdl_sc_channel_map)[22991].first = 3;
        (*_glb_hdl_sc_channel_map)[22991].second.push_front(p_13_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axi_awregion.bind(*p_13_s_axi_awregion);
        (*_glb_hdl_sc_channel_map)[22994].first = 3;
        (*_glb_hdl_sc_channel_map)[22994].second.push_front(p_13_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axi_awqos.bind(*p_13_s_axi_awqos);
        (*_glb_hdl_sc_channel_map)[22992].first = 3;
        (*_glb_hdl_sc_channel_map)[22992].second.push_front(p_13_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_13_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awvalid.bind(*p_13_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[22996].first = 1;
        (*_glb_hdl_sc_channel_map)[22996].second.push_front(p_13_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awready.bind(*p_13_s_axi_awready);
        p_13_s_axi_awready->set_sv_netview_offsetfromdp(11627120);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_wdata.bind(*p_13_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[23007].first = 3;
        (*_glb_hdl_sc_channel_map)[23007].second.push_front(p_13_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axi_wstrb.bind(*p_13_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[23010].first = 3;
        (*_glb_hdl_sc_channel_map)[23010].second.push_front(p_13_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wlast.bind(*p_13_s_axi_wlast);
        (*_glb_hdl_sc_channel_map)[23008].first = 1;
        (*_glb_hdl_sc_channel_map)[23008].second.push_front(p_13_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_13_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wvalid.bind(*p_13_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[23011].first = 1;
        (*_glb_hdl_sc_channel_map)[23011].second.push_front(p_13_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wready.bind(*p_13_s_axi_wready);
        p_13_s_axi_wready->set_sv_netview_offsetfromdp(11627400);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_13_s_axi_bid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_13->s_axi_bid.bind(*p_13_s_axi_bid);
        p_13_s_axi_bid->set_sv_netview_offsetfromdp(11627456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_bresp.bind(*p_13_s_axi_bresp);
        p_13_s_axi_bresp->set_sv_netview_offsetfromdp(11627512);
        xsim_sc_channel<0, bool > *p_13_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bvalid.bind(*p_13_s_axi_bvalid);
        p_13_s_axi_bvalid->set_sv_netview_offsetfromdp(11627568);
        xsim_sc_channel<0, bool > *p_13_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bready.bind(*p_13_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[22998].first = 1;
        (*_glb_hdl_sc_channel_map)[22998].second.push_front(p_13_s_axi_bready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_13_s_axi_arid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_13->s_axi_arid.bind(*p_13_s_axi_arid);
        (*_glb_hdl_sc_channel_map)[22976].first = 3;
        (*_glb_hdl_sc_channel_map)[22976].second.push_front(p_13_s_axi_arid);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_13_s_axi_araddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_13->s_axi_araddr.bind(*p_13_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[22973].first = 3;
        (*_glb_hdl_sc_channel_map)[22973].second.push_front(p_13_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axi_arlen.bind(*p_13_s_axi_arlen);
        (*_glb_hdl_sc_channel_map)[22977].first = 3;
        (*_glb_hdl_sc_channel_map)[22977].second.push_front(p_13_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_axi_arsize.bind(*p_13_s_axi_arsize);
        (*_glb_hdl_sc_channel_map)[22983].first = 3;
        (*_glb_hdl_sc_channel_map)[22983].second.push_front(p_13_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_arburst.bind(*p_13_s_axi_arburst);
        (*_glb_hdl_sc_channel_map)[22974].first = 3;
        (*_glb_hdl_sc_channel_map)[22974].second.push_front(p_13_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s_axi_arlock.bind(*p_13_s_axi_arlock);
        (*_glb_hdl_sc_channel_map)[22978].first = 3;
        (*_glb_hdl_sc_channel_map)[22978].second.push_front(p_13_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axi_arcache.bind(*p_13_s_axi_arcache);
        (*_glb_hdl_sc_channel_map)[22975].first = 3;
        (*_glb_hdl_sc_channel_map)[22975].second.push_front(p_13_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_axi_arprot.bind(*p_13_s_axi_arprot);
        (*_glb_hdl_sc_channel_map)[22979].first = 3;
        (*_glb_hdl_sc_channel_map)[22979].second.push_front(p_13_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axi_arregion.bind(*p_13_s_axi_arregion);
        (*_glb_hdl_sc_channel_map)[22982].first = 3;
        (*_glb_hdl_sc_channel_map)[22982].second.push_front(p_13_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axi_arqos.bind(*p_13_s_axi_arqos);
        (*_glb_hdl_sc_channel_map)[22980].first = 3;
        (*_glb_hdl_sc_channel_map)[22980].second.push_front(p_13_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_13_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arvalid.bind(*p_13_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[22984].first = 1;
        (*_glb_hdl_sc_channel_map)[22984].second.push_front(p_13_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arready.bind(*p_13_s_axi_arready);
        p_13_s_axi_arready->set_sv_netview_offsetfromdp(11628296);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_13_s_axi_rid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_13->s_axi_rid.bind(*p_13_s_axi_rid);
        p_13_s_axi_rid->set_sv_netview_offsetfromdp(11628352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_rdata.bind(*p_13_s_axi_rdata);
        p_13_s_axi_rdata->set_sv_netview_offsetfromdp(11628408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_rresp.bind(*p_13_s_axi_rresp);
        p_13_s_axi_rresp->set_sv_netview_offsetfromdp(11628464);
        xsim_sc_channel<0, bool > *p_13_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rlast.bind(*p_13_s_axi_rlast);
        p_13_s_axi_rlast->set_sv_netview_offsetfromdp(11628520);
        xsim_sc_channel<0, bool > *p_13_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rvalid.bind(*p_13_s_axi_rvalid);
        p_13_s_axi_rvalid->set_sv_netview_offsetfromdp(11628576);
        xsim_sc_channel<0, bool > *p_13_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rready.bind(*p_13_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[23004].first = 1;
        (*_glb_hdl_sc_channel_map)[23004].second.push_front(p_13_s_axi_rready);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_13_m_axi_awaddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_13->m_axi_awaddr.bind(*p_13_m_axi_awaddr);
        p_13_m_axi_awaddr->set_sv_netview_offsetfromdp(11628688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m_axi_awprot.bind(*p_13_m_axi_awprot);
        p_13_m_axi_awprot->set_sv_netview_offsetfromdp(11628744);
        xsim_sc_channel<0, bool > *p_13_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_awvalid.bind(*p_13_m_axi_awvalid);
        p_13_m_axi_awvalid->set_sv_netview_offsetfromdp(11628800);
        xsim_sc_channel<0, bool > *p_13_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_awready.bind(*p_13_m_axi_awready);
        (*_glb_hdl_sc_channel_map)[22960].first = 1;
        (*_glb_hdl_sc_channel_map)[22960].second.push_front(p_13_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m_axi_wdata.bind(*p_13_m_axi_wdata);
        p_13_m_axi_wdata->set_sv_netview_offsetfromdp(11628912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m_axi_wstrb.bind(*p_13_m_axi_wstrb);
        p_13_m_axi_wstrb->set_sv_netview_offsetfromdp(11628968);
        xsim_sc_channel<0, bool > *p_13_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_wvalid.bind(*p_13_m_axi_wvalid);
        p_13_m_axi_wvalid->set_sv_netview_offsetfromdp(11629024);
        xsim_sc_channel<0, bool > *p_13_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_wready.bind(*p_13_m_axi_wready);
        (*_glb_hdl_sc_channel_map)[22970].first = 1;
        (*_glb_hdl_sc_channel_map)[22970].second.push_front(p_13_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m_axi_bresp.bind(*p_13_m_axi_bresp);
        (*_glb_hdl_sc_channel_map)[22963].first = 3;
        (*_glb_hdl_sc_channel_map)[22963].second.push_front(p_13_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_13_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_bvalid.bind(*p_13_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[22964].first = 1;
        (*_glb_hdl_sc_channel_map)[22964].second.push_front(p_13_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_bready.bind(*p_13_m_axi_bready);
        p_13_m_axi_bready->set_sv_netview_offsetfromdp(11629248);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_13_m_axi_araddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_13->m_axi_araddr.bind(*p_13_m_axi_araddr);
        p_13_m_axi_araddr->set_sv_netview_offsetfromdp(11629304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m_axi_arprot.bind(*p_13_m_axi_arprot);
        p_13_m_axi_arprot->set_sv_netview_offsetfromdp(11629360);
        xsim_sc_channel<0, bool > *p_13_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_arvalid.bind(*p_13_m_axi_arvalid);
        p_13_m_axi_arvalid->set_sv_netview_offsetfromdp(11629416);
        xsim_sc_channel<0, bool > *p_13_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_arready.bind(*p_13_m_axi_arready);
        (*_glb_hdl_sc_channel_map)[22956].first = 1;
        (*_glb_hdl_sc_channel_map)[22956].second.push_front(p_13_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m_axi_rdata.bind(*p_13_m_axi_rdata);
        (*_glb_hdl_sc_channel_map)[22965].first = 3;
        (*_glb_hdl_sc_channel_map)[22965].second.push_front(p_13_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m_axi_rresp.bind(*p_13_m_axi_rresp);
        (*_glb_hdl_sc_channel_map)[22967].first = 3;
        (*_glb_hdl_sc_channel_map)[22967].second.push_front(p_13_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_rvalid.bind(*p_13_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[22968].first = 1;
        (*_glb_hdl_sc_channel_map)[22968].second.push_front(p_13_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_rready.bind(*p_13_m_axi_rready);
        p_13_m_axi_rready->set_sv_netview_offsetfromdp(11629696);
        sc_inst_14 = new zcu104_base_m01_regslice_4(".zcu104_base_wrapper.zcu104_base_i.interconnect_axilite.m01_couplers.m01_regslice");
        sc_inst_14->xsim_set_dbg_index(2169);
        xsim_sc_channel<0, bool > *p_14_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->aclk.bind(*p_14_aclk);
        (*_glb_hdl_sc_channel_map)[23012].first = 1;
        (*_glb_hdl_sc_channel_map)[23012].second.push_front(p_14_aclk);
        xsim_sc_channel<0, bool > *p_14_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->aresetn.bind(*p_14_aresetn);
        (*_glb_hdl_sc_channel_map)[23013].first = 1;
        (*_glb_hdl_sc_channel_map)[23013].second.push_front(p_14_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->s_axi_awaddr.bind(*p_14_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[22864].first = 3;
        (*_glb_hdl_sc_channel_map)[22864].second.push_front(p_14_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_awprot.bind(*p_14_s_axi_awprot);
        (*_glb_hdl_sc_channel_map)[23036].first = 3;
        (*_glb_hdl_sc_channel_map)[23036].second.push_front(p_14_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_14_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_awvalid.bind(*p_14_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[23038].first = 1;
        (*_glb_hdl_sc_channel_map)[23038].second.push_front(p_14_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_awready.bind(*p_14_s_axi_awready);
        p_14_s_axi_awready->set_sv_netview_offsetfromdp(11630080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_wdata.bind(*p_14_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[23046].first = 3;
        (*_glb_hdl_sc_channel_map)[23046].second.push_front(p_14_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_wstrb.bind(*p_14_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[23048].first = 3;
        (*_glb_hdl_sc_channel_map)[23048].second.push_front(p_14_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_wvalid.bind(*p_14_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[23049].first = 1;
        (*_glb_hdl_sc_channel_map)[23049].second.push_front(p_14_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_wready.bind(*p_14_s_axi_wready);
        p_14_s_axi_wready->set_sv_netview_offsetfromdp(11630304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_bresp.bind(*p_14_s_axi_bresp);
        p_14_s_axi_bresp->set_sv_netview_offsetfromdp(11630360);
        xsim_sc_channel<0, bool > *p_14_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_bvalid.bind(*p_14_s_axi_bvalid);
        p_14_s_axi_bvalid->set_sv_netview_offsetfromdp(11630416);
        xsim_sc_channel<0, bool > *p_14_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_bready.bind(*p_14_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[23039].first = 1;
        (*_glb_hdl_sc_channel_map)[23039].second.push_front(p_14_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->s_axi_araddr.bind(*p_14_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[22865].first = 3;
        (*_glb_hdl_sc_channel_map)[22865].second.push_front(p_14_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_arprot.bind(*p_14_s_axi_arprot);
        (*_glb_hdl_sc_channel_map)[23033].first = 3;
        (*_glb_hdl_sc_channel_map)[23033].second.push_front(p_14_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_14_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_arvalid.bind(*p_14_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[23035].first = 1;
        (*_glb_hdl_sc_channel_map)[23035].second.push_front(p_14_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_arready.bind(*p_14_s_axi_arready);
        p_14_s_axi_arready->set_sv_netview_offsetfromdp(11630696);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_rdata.bind(*p_14_s_axi_rdata);
        p_14_s_axi_rdata->set_sv_netview_offsetfromdp(11630752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_rresp.bind(*p_14_s_axi_rresp);
        p_14_s_axi_rresp->set_sv_netview_offsetfromdp(11630808);
        xsim_sc_channel<0, bool > *p_14_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_rvalid.bind(*p_14_s_axi_rvalid);
        p_14_s_axi_rvalid->set_sv_netview_offsetfromdp(11630864);
        xsim_sc_channel<0, bool > *p_14_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_rready.bind(*p_14_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[23043].first = 1;
        (*_glb_hdl_sc_channel_map)[23043].second.push_front(p_14_s_axi_rready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_awaddr.bind(*p_14_m_axi_awaddr);
        p_14_m_axi_awaddr->set_sv_netview_offsetfromdp(11630976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m_axi_awprot.bind(*p_14_m_axi_awprot);
        p_14_m_axi_awprot->set_sv_netview_offsetfromdp(11631032);
        xsim_sc_channel<0, bool > *p_14_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_awvalid.bind(*p_14_m_axi_awvalid);
        p_14_m_axi_awvalid->set_sv_netview_offsetfromdp(11631088);
        xsim_sc_channel<0, bool > *p_14_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_awready.bind(*p_14_m_axi_awready);
        (*_glb_hdl_sc_channel_map)[23020].first = 1;
        (*_glb_hdl_sc_channel_map)[23020].second.push_front(p_14_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m_axi_wdata.bind(*p_14_m_axi_wdata);
        p_14_m_axi_wdata->set_sv_netview_offsetfromdp(11631200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m_axi_wstrb.bind(*p_14_m_axi_wstrb);
        p_14_m_axi_wstrb->set_sv_netview_offsetfromdp(11631256);
        xsim_sc_channel<0, bool > *p_14_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_wvalid.bind(*p_14_m_axi_wvalid);
        p_14_m_axi_wvalid->set_sv_netview_offsetfromdp(11631312);
        xsim_sc_channel<0, bool > *p_14_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_wready.bind(*p_14_m_axi_wready);
        (*_glb_hdl_sc_channel_map)[23030].first = 1;
        (*_glb_hdl_sc_channel_map)[23030].second.push_front(p_14_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m_axi_bresp.bind(*p_14_m_axi_bresp);
        (*_glb_hdl_sc_channel_map)[23023].first = 3;
        (*_glb_hdl_sc_channel_map)[23023].second.push_front(p_14_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_14_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_bvalid.bind(*p_14_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[23024].first = 1;
        (*_glb_hdl_sc_channel_map)[23024].second.push_front(p_14_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_bready.bind(*p_14_m_axi_bready);
        p_14_m_axi_bready->set_sv_netview_offsetfromdp(11631536);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->m_axi_araddr.bind(*p_14_m_axi_araddr);
        p_14_m_axi_araddr->set_sv_netview_offsetfromdp(11631592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m_axi_arprot.bind(*p_14_m_axi_arprot);
        p_14_m_axi_arprot->set_sv_netview_offsetfromdp(11631648);
        xsim_sc_channel<0, bool > *p_14_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_arvalid.bind(*p_14_m_axi_arvalid);
        p_14_m_axi_arvalid->set_sv_netview_offsetfromdp(11631704);
        xsim_sc_channel<0, bool > *p_14_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_arready.bind(*p_14_m_axi_arready);
        (*_glb_hdl_sc_channel_map)[23016].first = 1;
        (*_glb_hdl_sc_channel_map)[23016].second.push_front(p_14_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m_axi_rdata.bind(*p_14_m_axi_rdata);
        (*_glb_hdl_sc_channel_map)[23025].first = 3;
        (*_glb_hdl_sc_channel_map)[23025].second.push_front(p_14_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m_axi_rresp.bind(*p_14_m_axi_rresp);
        (*_glb_hdl_sc_channel_map)[23027].first = 3;
        (*_glb_hdl_sc_channel_map)[23027].second.push_front(p_14_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_rvalid.bind(*p_14_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[23028].first = 1;
        (*_glb_hdl_sc_channel_map)[23028].second.push_front(p_14_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_rready.bind(*p_14_m_axi_rready);
        p_14_m_axi_rready->set_sv_netview_offsetfromdp(11631984);
        sc_inst_15 = new zcu104_base_auto_cc_2(".zcu104_base_wrapper.zcu104_base_i.interconnect_axilite.m02_couplers.auto_cc");
        sc_inst_15->xsim_set_dbg_index(2234);
        xsim_sc_channel<0, bool > *p_15_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_aclk.bind(*p_15_s_axi_aclk);
        (*_glb_hdl_sc_channel_map)[23220].first = 1;
        (*_glb_hdl_sc_channel_map)[23220].second.push_front(p_15_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_aresetn.bind(*p_15_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[23224].first = 1;
        (*_glb_hdl_sc_channel_map)[23224].second.push_front(p_15_s_axi_aresetn);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_15_s_axi_awid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_15->s_axi_awid.bind(*p_15_s_axi_awid);
        (*_glb_hdl_sc_channel_map)[23238].first = 3;
        (*_glb_hdl_sc_channel_map)[23238].second.push_front(p_15_s_axi_awid);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_15_s_axi_awaddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_15->s_axi_awaddr.bind(*p_15_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[23235].first = 3;
        (*_glb_hdl_sc_channel_map)[23235].second.push_front(p_15_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_awlen.bind(*p_15_s_axi_awlen);
        (*_glb_hdl_sc_channel_map)[23239].first = 3;
        (*_glb_hdl_sc_channel_map)[23239].second.push_front(p_15_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_axi_awsize.bind(*p_15_s_axi_awsize);
        (*_glb_hdl_sc_channel_map)[23245].first = 3;
        (*_glb_hdl_sc_channel_map)[23245].second.push_front(p_15_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_awburst.bind(*p_15_s_axi_awburst);
        (*_glb_hdl_sc_channel_map)[23236].first = 3;
        (*_glb_hdl_sc_channel_map)[23236].second.push_front(p_15_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s_axi_awlock.bind(*p_15_s_axi_awlock);
        (*_glb_hdl_sc_channel_map)[23240].first = 3;
        (*_glb_hdl_sc_channel_map)[23240].second.push_front(p_15_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axi_awcache.bind(*p_15_s_axi_awcache);
        (*_glb_hdl_sc_channel_map)[23237].first = 3;
        (*_glb_hdl_sc_channel_map)[23237].second.push_front(p_15_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_axi_awprot.bind(*p_15_s_axi_awprot);
        (*_glb_hdl_sc_channel_map)[23241].first = 3;
        (*_glb_hdl_sc_channel_map)[23241].second.push_front(p_15_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axi_awregion.bind(*p_15_s_axi_awregion);
        (*_glb_hdl_sc_channel_map)[23244].first = 3;
        (*_glb_hdl_sc_channel_map)[23244].second.push_front(p_15_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axi_awqos.bind(*p_15_s_axi_awqos);
        (*_glb_hdl_sc_channel_map)[23242].first = 3;
        (*_glb_hdl_sc_channel_map)[23242].second.push_front(p_15_s_axi_awqos);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_15_s_axi_awuser = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_15->s_axi_awuser.bind(*p_15_s_axi_awuser);
        (*_glb_hdl_sc_channel_map)[23246].first = 3;
        (*_glb_hdl_sc_channel_map)[23246].second.push_front(p_15_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_15_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awvalid.bind(*p_15_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[23247].first = 1;
        (*_glb_hdl_sc_channel_map)[23247].second.push_front(p_15_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awready.bind(*p_15_s_axi_awready);
        p_15_s_axi_awready->set_sv_netview_offsetfromdp(11709032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_wdata.bind(*p_15_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[23258].first = 3;
        (*_glb_hdl_sc_channel_map)[23258].second.push_front(p_15_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axi_wstrb.bind(*p_15_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[23261].first = 3;
        (*_glb_hdl_sc_channel_map)[23261].second.push_front(p_15_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wlast.bind(*p_15_s_axi_wlast);
        (*_glb_hdl_sc_channel_map)[23259].first = 1;
        (*_glb_hdl_sc_channel_map)[23259].second.push_front(p_15_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wvalid.bind(*p_15_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[23262].first = 1;
        (*_glb_hdl_sc_channel_map)[23262].second.push_front(p_15_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wready.bind(*p_15_s_axi_wready);
        p_15_s_axi_wready->set_sv_netview_offsetfromdp(11709312);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_15_s_axi_bid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_15->s_axi_bid.bind(*p_15_s_axi_bid);
        p_15_s_axi_bid->set_sv_netview_offsetfromdp(11709368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_bresp.bind(*p_15_s_axi_bresp);
        p_15_s_axi_bresp->set_sv_netview_offsetfromdp(11709424);
        xsim_sc_channel<0, bool > *p_15_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bvalid.bind(*p_15_s_axi_bvalid);
        p_15_s_axi_bvalid->set_sv_netview_offsetfromdp(11709480);
        xsim_sc_channel<0, bool > *p_15_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bready.bind(*p_15_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[23249].first = 1;
        (*_glb_hdl_sc_channel_map)[23249].second.push_front(p_15_s_axi_bready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_15_s_axi_arid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_15->s_axi_arid.bind(*p_15_s_axi_arid);
        (*_glb_hdl_sc_channel_map)[23225].first = 3;
        (*_glb_hdl_sc_channel_map)[23225].second.push_front(p_15_s_axi_arid);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_15_s_axi_araddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_15->s_axi_araddr.bind(*p_15_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[23221].first = 3;
        (*_glb_hdl_sc_channel_map)[23221].second.push_front(p_15_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_arlen.bind(*p_15_s_axi_arlen);
        (*_glb_hdl_sc_channel_map)[23226].first = 3;
        (*_glb_hdl_sc_channel_map)[23226].second.push_front(p_15_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_axi_arsize.bind(*p_15_s_axi_arsize);
        (*_glb_hdl_sc_channel_map)[23232].first = 3;
        (*_glb_hdl_sc_channel_map)[23232].second.push_front(p_15_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_arburst.bind(*p_15_s_axi_arburst);
        (*_glb_hdl_sc_channel_map)[23222].first = 3;
        (*_glb_hdl_sc_channel_map)[23222].second.push_front(p_15_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s_axi_arlock.bind(*p_15_s_axi_arlock);
        (*_glb_hdl_sc_channel_map)[23227].first = 3;
        (*_glb_hdl_sc_channel_map)[23227].second.push_front(p_15_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axi_arcache.bind(*p_15_s_axi_arcache);
        (*_glb_hdl_sc_channel_map)[23223].first = 3;
        (*_glb_hdl_sc_channel_map)[23223].second.push_front(p_15_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_axi_arprot.bind(*p_15_s_axi_arprot);
        (*_glb_hdl_sc_channel_map)[23228].first = 3;
        (*_glb_hdl_sc_channel_map)[23228].second.push_front(p_15_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axi_arregion.bind(*p_15_s_axi_arregion);
        (*_glb_hdl_sc_channel_map)[23231].first = 3;
        (*_glb_hdl_sc_channel_map)[23231].second.push_front(p_15_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axi_arqos.bind(*p_15_s_axi_arqos);
        (*_glb_hdl_sc_channel_map)[23229].first = 3;
        (*_glb_hdl_sc_channel_map)[23229].second.push_front(p_15_s_axi_arqos);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_15_s_axi_aruser = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_15->s_axi_aruser.bind(*p_15_s_axi_aruser);
        (*_glb_hdl_sc_channel_map)[23233].first = 3;
        (*_glb_hdl_sc_channel_map)[23233].second.push_front(p_15_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_15_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arvalid.bind(*p_15_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[23234].first = 1;
        (*_glb_hdl_sc_channel_map)[23234].second.push_front(p_15_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arready.bind(*p_15_s_axi_arready);
        p_15_s_axi_arready->set_sv_netview_offsetfromdp(11710264);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_15_s_axi_rid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_15->s_axi_rid.bind(*p_15_s_axi_rid);
        p_15_s_axi_rid->set_sv_netview_offsetfromdp(11710320);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_rdata.bind(*p_15_s_axi_rdata);
        p_15_s_axi_rdata->set_sv_netview_offsetfromdp(11710376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_rresp.bind(*p_15_s_axi_rresp);
        p_15_s_axi_rresp->set_sv_netview_offsetfromdp(11710432);
        xsim_sc_channel<0, bool > *p_15_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rlast.bind(*p_15_s_axi_rlast);
        p_15_s_axi_rlast->set_sv_netview_offsetfromdp(11710488);
        xsim_sc_channel<0, bool > *p_15_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rvalid.bind(*p_15_s_axi_rvalid);
        p_15_s_axi_rvalid->set_sv_netview_offsetfromdp(11710544);
        xsim_sc_channel<0, bool > *p_15_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rready.bind(*p_15_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[23255].first = 1;
        (*_glb_hdl_sc_channel_map)[23255].second.push_front(p_15_s_axi_rready);
        xsim_sc_channel<0, bool > *p_15_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_aclk.bind(*p_15_m_axi_aclk);
        (*_glb_hdl_sc_channel_map)[23177].first = 1;
        (*_glb_hdl_sc_channel_map)[23177].second.push_front(p_15_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_aresetn.bind(*p_15_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[23181].first = 1;
        (*_glb_hdl_sc_channel_map)[23181].second.push_front(p_15_m_axi_aresetn);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_15_m_axi_awid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_15->m_axi_awid.bind(*p_15_m_axi_awid);
        p_15_m_axi_awid->set_sv_netview_offsetfromdp(11710768);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_15_m_axi_awaddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_15->m_axi_awaddr.bind(*p_15_m_axi_awaddr);
        p_15_m_axi_awaddr->set_sv_netview_offsetfromdp(11710824);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m_axi_awlen.bind(*p_15_m_axi_awlen);
        p_15_m_axi_awlen->set_sv_netview_offsetfromdp(11710880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m_axi_awsize.bind(*p_15_m_axi_awsize);
        p_15_m_axi_awsize->set_sv_netview_offsetfromdp(11710936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m_axi_awburst.bind(*p_15_m_axi_awburst);
        p_15_m_axi_awburst->set_sv_netview_offsetfromdp(11710992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m_axi_awlock.bind(*p_15_m_axi_awlock);
        p_15_m_axi_awlock->set_sv_netview_offsetfromdp(11711048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m_axi_awcache.bind(*p_15_m_axi_awcache);
        p_15_m_axi_awcache->set_sv_netview_offsetfromdp(11711104);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m_axi_awprot.bind(*p_15_m_axi_awprot);
        p_15_m_axi_awprot->set_sv_netview_offsetfromdp(11711160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m_axi_awregion.bind(*p_15_m_axi_awregion);
        p_15_m_axi_awregion->set_sv_netview_offsetfromdp(11711216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m_axi_awqos.bind(*p_15_m_axi_awqos);
        p_15_m_axi_awqos->set_sv_netview_offsetfromdp(11711272);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_15_m_axi_awuser = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_15->m_axi_awuser.bind(*p_15_m_axi_awuser);
        p_15_m_axi_awuser->set_sv_netview_offsetfromdp(11711328);
        xsim_sc_channel<0, bool > *p_15_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_awvalid.bind(*p_15_m_axi_awvalid);
        p_15_m_axi_awvalid->set_sv_netview_offsetfromdp(11711384);
        xsim_sc_channel<0, bool > *p_15_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_awready.bind(*p_15_m_axi_awready);
        (*_glb_hdl_sc_channel_map)[23200].first = 1;
        (*_glb_hdl_sc_channel_map)[23200].second.push_front(p_15_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m_axi_wdata.bind(*p_15_m_axi_wdata);
        p_15_m_axi_wdata->set_sv_netview_offsetfromdp(11711496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m_axi_wstrb.bind(*p_15_m_axi_wstrb);
        p_15_m_axi_wstrb->set_sv_netview_offsetfromdp(11711552);
        xsim_sc_channel<0, bool > *p_15_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_wlast.bind(*p_15_m_axi_wlast);
        p_15_m_axi_wlast->set_sv_netview_offsetfromdp(11711608);
        xsim_sc_channel<0, bool > *p_15_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_wvalid.bind(*p_15_m_axi_wvalid);
        p_15_m_axi_wvalid->set_sv_netview_offsetfromdp(11711664);
        xsim_sc_channel<0, bool > *p_15_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_wready.bind(*p_15_m_axi_wready);
        (*_glb_hdl_sc_channel_map)[23217].first = 1;
        (*_glb_hdl_sc_channel_map)[23217].second.push_front(p_15_m_axi_wready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_15_m_axi_bid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_15->m_axi_bid.bind(*p_15_m_axi_bid);
        (*_glb_hdl_sc_channel_map)[23205].first = 3;
        (*_glb_hdl_sc_channel_map)[23205].second.push_front(p_15_m_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m_axi_bresp.bind(*p_15_m_axi_bresp);
        (*_glb_hdl_sc_channel_map)[23207].first = 3;
        (*_glb_hdl_sc_channel_map)[23207].second.push_front(p_15_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_15_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_bvalid.bind(*p_15_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[23208].first = 1;
        (*_glb_hdl_sc_channel_map)[23208].second.push_front(p_15_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_bready.bind(*p_15_m_axi_bready);
        p_15_m_axi_bready->set_sv_netview_offsetfromdp(11711944);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_15_m_axi_arid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_15->m_axi_arid.bind(*p_15_m_axi_arid);
        p_15_m_axi_arid->set_sv_netview_offsetfromdp(11712000);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_15_m_axi_araddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_15->m_axi_araddr.bind(*p_15_m_axi_araddr);
        p_15_m_axi_araddr->set_sv_netview_offsetfromdp(11712056);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m_axi_arlen.bind(*p_15_m_axi_arlen);
        p_15_m_axi_arlen->set_sv_netview_offsetfromdp(11712112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m_axi_arsize.bind(*p_15_m_axi_arsize);
        p_15_m_axi_arsize->set_sv_netview_offsetfromdp(11712168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m_axi_arburst.bind(*p_15_m_axi_arburst);
        p_15_m_axi_arburst->set_sv_netview_offsetfromdp(11712224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m_axi_arlock.bind(*p_15_m_axi_arlock);
        p_15_m_axi_arlock->set_sv_netview_offsetfromdp(11712280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m_axi_arcache.bind(*p_15_m_axi_arcache);
        p_15_m_axi_arcache->set_sv_netview_offsetfromdp(11712336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m_axi_arprot.bind(*p_15_m_axi_arprot);
        p_15_m_axi_arprot->set_sv_netview_offsetfromdp(11712392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m_axi_arregion.bind(*p_15_m_axi_arregion);
        p_15_m_axi_arregion->set_sv_netview_offsetfromdp(11712448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m_axi_arqos.bind(*p_15_m_axi_arqos);
        p_15_m_axi_arqos->set_sv_netview_offsetfromdp(11712504);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_15_m_axi_aruser = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_15->m_axi_aruser.bind(*p_15_m_axi_aruser);
        p_15_m_axi_aruser->set_sv_netview_offsetfromdp(11712560);
        xsim_sc_channel<0, bool > *p_15_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_arvalid.bind(*p_15_m_axi_arvalid);
        p_15_m_axi_arvalid->set_sv_netview_offsetfromdp(11712616);
        xsim_sc_channel<0, bool > *p_15_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_arready.bind(*p_15_m_axi_arready);
        (*_glb_hdl_sc_channel_map)[23187].first = 1;
        (*_glb_hdl_sc_channel_map)[23187].second.push_front(p_15_m_axi_arready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_15_m_axi_rid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_15->m_axi_rid.bind(*p_15_m_axi_rid);
        (*_glb_hdl_sc_channel_map)[23210].first = 3;
        (*_glb_hdl_sc_channel_map)[23210].second.push_front(p_15_m_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m_axi_rdata.bind(*p_15_m_axi_rdata);
        (*_glb_hdl_sc_channel_map)[23209].first = 3;
        (*_glb_hdl_sc_channel_map)[23209].second.push_front(p_15_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m_axi_rresp.bind(*p_15_m_axi_rresp);
        (*_glb_hdl_sc_channel_map)[23213].first = 3;
        (*_glb_hdl_sc_channel_map)[23213].second.push_front(p_15_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_rlast.bind(*p_15_m_axi_rlast);
        (*_glb_hdl_sc_channel_map)[23211].first = 1;
        (*_glb_hdl_sc_channel_map)[23211].second.push_front(p_15_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_15_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_rvalid.bind(*p_15_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[23214].first = 1;
        (*_glb_hdl_sc_channel_map)[23214].second.push_front(p_15_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_rready.bind(*p_15_m_axi_rready);
        p_15_m_axi_rready->set_sv_netview_offsetfromdp(11713008);
        sc_inst_16 = new zcu104_base_m02_regslice_0(".zcu104_base_wrapper.zcu104_base_i.interconnect_axilite.m02_couplers.m02_regslice");
        sc_inst_16->xsim_set_dbg_index(2235);
        xsim_sc_channel<0, bool > *p_16_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->aclk.bind(*p_16_aclk);
        (*_glb_hdl_sc_channel_map)[23263].first = 1;
        (*_glb_hdl_sc_channel_map)[23263].second.push_front(p_16_aclk);
        xsim_sc_channel<0, bool > *p_16_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->aresetn.bind(*p_16_aresetn);
        (*_glb_hdl_sc_channel_map)[23264].first = 1;
        (*_glb_hdl_sc_channel_map)[23264].second.push_front(p_16_aresetn);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_16_s_axi_awid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_16->s_axi_awid.bind(*p_16_s_axi_awid);
        (*_glb_hdl_sc_channel_map)[23322].first = 3;
        (*_glb_hdl_sc_channel_map)[23322].second.push_front(p_16_s_axi_awid);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_16_s_axi_awaddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_16->s_axi_awaddr.bind(*p_16_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[23319].first = 3;
        (*_glb_hdl_sc_channel_map)[23319].second.push_front(p_16_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_awlen.bind(*p_16_s_axi_awlen);
        (*_glb_hdl_sc_channel_map)[23323].first = 3;
        (*_glb_hdl_sc_channel_map)[23323].second.push_front(p_16_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_awsize.bind(*p_16_s_axi_awsize);
        (*_glb_hdl_sc_channel_map)[23329].first = 3;
        (*_glb_hdl_sc_channel_map)[23329].second.push_front(p_16_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_awburst.bind(*p_16_s_axi_awburst);
        (*_glb_hdl_sc_channel_map)[23320].first = 3;
        (*_glb_hdl_sc_channel_map)[23320].second.push_front(p_16_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s_axi_awlock.bind(*p_16_s_axi_awlock);
        (*_glb_hdl_sc_channel_map)[23324].first = 3;
        (*_glb_hdl_sc_channel_map)[23324].second.push_front(p_16_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s_axi_awcache.bind(*p_16_s_axi_awcache);
        (*_glb_hdl_sc_channel_map)[23321].first = 3;
        (*_glb_hdl_sc_channel_map)[23321].second.push_front(p_16_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_awprot.bind(*p_16_s_axi_awprot);
        (*_glb_hdl_sc_channel_map)[23325].first = 3;
        (*_glb_hdl_sc_channel_map)[23325].second.push_front(p_16_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s_axi_awregion.bind(*p_16_s_axi_awregion);
        (*_glb_hdl_sc_channel_map)[23328].first = 3;
        (*_glb_hdl_sc_channel_map)[23328].second.push_front(p_16_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s_axi_awqos.bind(*p_16_s_axi_awqos);
        (*_glb_hdl_sc_channel_map)[23326].first = 3;
        (*_glb_hdl_sc_channel_map)[23326].second.push_front(p_16_s_axi_awqos);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_16_s_axi_awuser = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_16->s_axi_awuser.bind(*p_16_s_axi_awuser);
        (*_glb_hdl_sc_channel_map)[23330].first = 3;
        (*_glb_hdl_sc_channel_map)[23330].second.push_front(p_16_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_16_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awvalid.bind(*p_16_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[23331].first = 1;
        (*_glb_hdl_sc_channel_map)[23331].second.push_front(p_16_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awready.bind(*p_16_s_axi_awready);
        p_16_s_axi_awready->set_sv_netview_offsetfromdp(11713896);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_wdata.bind(*p_16_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[23342].first = 3;
        (*_glb_hdl_sc_channel_map)[23342].second.push_front(p_16_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s_axi_wstrb.bind(*p_16_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[23345].first = 3;
        (*_glb_hdl_sc_channel_map)[23345].second.push_front(p_16_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_16_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wlast.bind(*p_16_s_axi_wlast);
        (*_glb_hdl_sc_channel_map)[23343].first = 1;
        (*_glb_hdl_sc_channel_map)[23343].second.push_front(p_16_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_16_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wvalid.bind(*p_16_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[23346].first = 1;
        (*_glb_hdl_sc_channel_map)[23346].second.push_front(p_16_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wready.bind(*p_16_s_axi_wready);
        p_16_s_axi_wready->set_sv_netview_offsetfromdp(11714176);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_16_s_axi_bid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_16->s_axi_bid.bind(*p_16_s_axi_bid);
        p_16_s_axi_bid->set_sv_netview_offsetfromdp(11714232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_bresp.bind(*p_16_s_axi_bresp);
        p_16_s_axi_bresp->set_sv_netview_offsetfromdp(11714288);
        xsim_sc_channel<0, bool > *p_16_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bvalid.bind(*p_16_s_axi_bvalid);
        p_16_s_axi_bvalid->set_sv_netview_offsetfromdp(11714344);
        xsim_sc_channel<0, bool > *p_16_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bready.bind(*p_16_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[23333].first = 1;
        (*_glb_hdl_sc_channel_map)[23333].second.push_front(p_16_s_axi_bready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_16_s_axi_arid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_16->s_axi_arid.bind(*p_16_s_axi_arid);
        (*_glb_hdl_sc_channel_map)[23309].first = 3;
        (*_glb_hdl_sc_channel_map)[23309].second.push_front(p_16_s_axi_arid);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_16_s_axi_araddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_16->s_axi_araddr.bind(*p_16_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[23306].first = 3;
        (*_glb_hdl_sc_channel_map)[23306].second.push_front(p_16_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_arlen.bind(*p_16_s_axi_arlen);
        (*_glb_hdl_sc_channel_map)[23310].first = 3;
        (*_glb_hdl_sc_channel_map)[23310].second.push_front(p_16_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_arsize.bind(*p_16_s_axi_arsize);
        (*_glb_hdl_sc_channel_map)[23316].first = 3;
        (*_glb_hdl_sc_channel_map)[23316].second.push_front(p_16_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_arburst.bind(*p_16_s_axi_arburst);
        (*_glb_hdl_sc_channel_map)[23307].first = 3;
        (*_glb_hdl_sc_channel_map)[23307].second.push_front(p_16_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s_axi_arlock.bind(*p_16_s_axi_arlock);
        (*_glb_hdl_sc_channel_map)[23311].first = 3;
        (*_glb_hdl_sc_channel_map)[23311].second.push_front(p_16_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s_axi_arcache.bind(*p_16_s_axi_arcache);
        (*_glb_hdl_sc_channel_map)[23308].first = 3;
        (*_glb_hdl_sc_channel_map)[23308].second.push_front(p_16_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_arprot.bind(*p_16_s_axi_arprot);
        (*_glb_hdl_sc_channel_map)[23312].first = 3;
        (*_glb_hdl_sc_channel_map)[23312].second.push_front(p_16_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s_axi_arregion.bind(*p_16_s_axi_arregion);
        (*_glb_hdl_sc_channel_map)[23315].first = 3;
        (*_glb_hdl_sc_channel_map)[23315].second.push_front(p_16_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s_axi_arqos.bind(*p_16_s_axi_arqos);
        (*_glb_hdl_sc_channel_map)[23313].first = 3;
        (*_glb_hdl_sc_channel_map)[23313].second.push_front(p_16_s_axi_arqos);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_16_s_axi_aruser = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_16->s_axi_aruser.bind(*p_16_s_axi_aruser);
        (*_glb_hdl_sc_channel_map)[23317].first = 3;
        (*_glb_hdl_sc_channel_map)[23317].second.push_front(p_16_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_16_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arvalid.bind(*p_16_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[23318].first = 1;
        (*_glb_hdl_sc_channel_map)[23318].second.push_front(p_16_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arready.bind(*p_16_s_axi_arready);
        p_16_s_axi_arready->set_sv_netview_offsetfromdp(11715128);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_16_s_axi_rid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_16->s_axi_rid.bind(*p_16_s_axi_rid);
        p_16_s_axi_rid->set_sv_netview_offsetfromdp(11715184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_rdata.bind(*p_16_s_axi_rdata);
        p_16_s_axi_rdata->set_sv_netview_offsetfromdp(11715240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_rresp.bind(*p_16_s_axi_rresp);
        p_16_s_axi_rresp->set_sv_netview_offsetfromdp(11715296);
        xsim_sc_channel<0, bool > *p_16_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rlast.bind(*p_16_s_axi_rlast);
        p_16_s_axi_rlast->set_sv_netview_offsetfromdp(11715352);
        xsim_sc_channel<0, bool > *p_16_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rvalid.bind(*p_16_s_axi_rvalid);
        p_16_s_axi_rvalid->set_sv_netview_offsetfromdp(11715408);
        xsim_sc_channel<0, bool > *p_16_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rready.bind(*p_16_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[23339].first = 1;
        (*_glb_hdl_sc_channel_map)[23339].second.push_front(p_16_s_axi_rready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_16_m_axi_awid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_16->m_axi_awid.bind(*p_16_m_axi_awid);
        p_16_m_axi_awid->set_sv_netview_offsetfromdp(11715520);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_16_m_axi_awaddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_16->m_axi_awaddr.bind(*p_16_m_axi_awaddr);
        p_16_m_axi_awaddr->set_sv_netview_offsetfromdp(11715576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axi_awlen.bind(*p_16_m_axi_awlen);
        p_16_m_axi_awlen->set_sv_netview_offsetfromdp(11715632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m_axi_awsize.bind(*p_16_m_axi_awsize);
        p_16_m_axi_awsize->set_sv_netview_offsetfromdp(11715688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m_axi_awburst.bind(*p_16_m_axi_awburst);
        p_16_m_axi_awburst->set_sv_netview_offsetfromdp(11715744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m_axi_awlock.bind(*p_16_m_axi_awlock);
        p_16_m_axi_awlock->set_sv_netview_offsetfromdp(11715800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m_axi_awcache.bind(*p_16_m_axi_awcache);
        p_16_m_axi_awcache->set_sv_netview_offsetfromdp(11715856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m_axi_awprot.bind(*p_16_m_axi_awprot);
        p_16_m_axi_awprot->set_sv_netview_offsetfromdp(11715912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m_axi_awregion.bind(*p_16_m_axi_awregion);
        p_16_m_axi_awregion->set_sv_netview_offsetfromdp(11715968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m_axi_awqos.bind(*p_16_m_axi_awqos);
        p_16_m_axi_awqos->set_sv_netview_offsetfromdp(11716024);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_16_m_axi_awuser = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_16->m_axi_awuser.bind(*p_16_m_axi_awuser);
        p_16_m_axi_awuser->set_sv_netview_offsetfromdp(11716080);
        xsim_sc_channel<0, bool > *p_16_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_awvalid.bind(*p_16_m_axi_awvalid);
        p_16_m_axi_awvalid->set_sv_netview_offsetfromdp(11716136);
        xsim_sc_channel<0, bool > *p_16_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_awready.bind(*p_16_m_axi_awready);
        (*_glb_hdl_sc_channel_map)[23286].first = 1;
        (*_glb_hdl_sc_channel_map)[23286].second.push_front(p_16_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->m_axi_wdata.bind(*p_16_m_axi_wdata);
        p_16_m_axi_wdata->set_sv_netview_offsetfromdp(11716248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m_axi_wstrb.bind(*p_16_m_axi_wstrb);
        p_16_m_axi_wstrb->set_sv_netview_offsetfromdp(11716304);
        xsim_sc_channel<0, bool > *p_16_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_wlast.bind(*p_16_m_axi_wlast);
        p_16_m_axi_wlast->set_sv_netview_offsetfromdp(11716360);
        xsim_sc_channel<0, bool > *p_16_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_wvalid.bind(*p_16_m_axi_wvalid);
        p_16_m_axi_wvalid->set_sv_netview_offsetfromdp(11716416);
        xsim_sc_channel<0, bool > *p_16_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_wready.bind(*p_16_m_axi_wready);
        (*_glb_hdl_sc_channel_map)[23303].first = 1;
        (*_glb_hdl_sc_channel_map)[23303].second.push_front(p_16_m_axi_wready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_16_m_axi_bid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_16->m_axi_bid.bind(*p_16_m_axi_bid);
        (*_glb_hdl_sc_channel_map)[23291].first = 3;
        (*_glb_hdl_sc_channel_map)[23291].second.push_front(p_16_m_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m_axi_bresp.bind(*p_16_m_axi_bresp);
        (*_glb_hdl_sc_channel_map)[23293].first = 3;
        (*_glb_hdl_sc_channel_map)[23293].second.push_front(p_16_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_16_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_bvalid.bind(*p_16_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[23294].first = 1;
        (*_glb_hdl_sc_channel_map)[23294].second.push_front(p_16_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_16_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_bready.bind(*p_16_m_axi_bready);
        p_16_m_axi_bready->set_sv_netview_offsetfromdp(11716696);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_16_m_axi_arid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_16->m_axi_arid.bind(*p_16_m_axi_arid);
        p_16_m_axi_arid->set_sv_netview_offsetfromdp(11716752);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_16_m_axi_araddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_16->m_axi_araddr.bind(*p_16_m_axi_araddr);
        p_16_m_axi_araddr->set_sv_netview_offsetfromdp(11716808);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axi_arlen.bind(*p_16_m_axi_arlen);
        p_16_m_axi_arlen->set_sv_netview_offsetfromdp(11716864);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m_axi_arsize.bind(*p_16_m_axi_arsize);
        p_16_m_axi_arsize->set_sv_netview_offsetfromdp(11716920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m_axi_arburst.bind(*p_16_m_axi_arburst);
        p_16_m_axi_arburst->set_sv_netview_offsetfromdp(11716976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m_axi_arlock.bind(*p_16_m_axi_arlock);
        p_16_m_axi_arlock->set_sv_netview_offsetfromdp(11717032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m_axi_arcache.bind(*p_16_m_axi_arcache);
        p_16_m_axi_arcache->set_sv_netview_offsetfromdp(11717088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m_axi_arprot.bind(*p_16_m_axi_arprot);
        p_16_m_axi_arprot->set_sv_netview_offsetfromdp(11717144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m_axi_arregion.bind(*p_16_m_axi_arregion);
        p_16_m_axi_arregion->set_sv_netview_offsetfromdp(11717200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m_axi_arqos.bind(*p_16_m_axi_arqos);
        p_16_m_axi_arqos->set_sv_netview_offsetfromdp(11717256);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_16_m_axi_aruser = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_16->m_axi_aruser.bind(*p_16_m_axi_aruser);
        p_16_m_axi_aruser->set_sv_netview_offsetfromdp(11717312);
        xsim_sc_channel<0, bool > *p_16_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_arvalid.bind(*p_16_m_axi_arvalid);
        p_16_m_axi_arvalid->set_sv_netview_offsetfromdp(11717368);
        xsim_sc_channel<0, bool > *p_16_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_arready.bind(*p_16_m_axi_arready);
        (*_glb_hdl_sc_channel_map)[23273].first = 1;
        (*_glb_hdl_sc_channel_map)[23273].second.push_front(p_16_m_axi_arready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_16_m_axi_rid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_16->m_axi_rid.bind(*p_16_m_axi_rid);
        (*_glb_hdl_sc_channel_map)[23296].first = 3;
        (*_glb_hdl_sc_channel_map)[23296].second.push_front(p_16_m_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->m_axi_rdata.bind(*p_16_m_axi_rdata);
        (*_glb_hdl_sc_channel_map)[23295].first = 3;
        (*_glb_hdl_sc_channel_map)[23295].second.push_front(p_16_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m_axi_rresp.bind(*p_16_m_axi_rresp);
        (*_glb_hdl_sc_channel_map)[23299].first = 3;
        (*_glb_hdl_sc_channel_map)[23299].second.push_front(p_16_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_16_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_rlast.bind(*p_16_m_axi_rlast);
        (*_glb_hdl_sc_channel_map)[23297].first = 1;
        (*_glb_hdl_sc_channel_map)[23297].second.push_front(p_16_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_16_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_rvalid.bind(*p_16_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[23300].first = 1;
        (*_glb_hdl_sc_channel_map)[23300].second.push_front(p_16_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_16_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_rready.bind(*p_16_m_axi_rready);
        p_16_m_axi_rready->set_sv_netview_offsetfromdp(11717760);
        sc_inst_17 = new zcu104_base_xbar_0(".zcu104_base_wrapper.zcu104_base_i.interconnect_axilite.xbar");
        sc_inst_17->xsim_set_dbg_index(999);
        xsim_sc_channel<0, bool > *p_17_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->aclk.bind(*p_17_aclk);
        (*_glb_hdl_sc_channel_map)[23386].first = 1;
        (*_glb_hdl_sc_channel_map)[23386].second.push_front(p_17_aclk);
        xsim_sc_channel<0, bool > *p_17_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->aresetn.bind(*p_17_aresetn);
        (*_glb_hdl_sc_channel_map)[23387].first = 1;
        (*_glb_hdl_sc_channel_map)[23387].second.push_front(p_17_aresetn);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_17_s_axi_awid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_17->s_axi_awid.bind(*p_17_s_axi_awid);
        (*_glb_hdl_sc_channel_map)[23481].first = 3;
        (*_glb_hdl_sc_channel_map)[23481].second.push_front(p_17_s_axi_awid);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_17_s_axi_awaddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_17->s_axi_awaddr.bind(*p_17_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[23478].first = 3;
        (*_glb_hdl_sc_channel_map)[23478].second.push_front(p_17_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_awlen.bind(*p_17_s_axi_awlen);
        (*_glb_hdl_sc_channel_map)[23482].first = 3;
        (*_glb_hdl_sc_channel_map)[23482].second.push_front(p_17_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_awsize.bind(*p_17_s_axi_awsize);
        (*_glb_hdl_sc_channel_map)[23487].first = 3;
        (*_glb_hdl_sc_channel_map)[23487].second.push_front(p_17_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_awburst.bind(*p_17_s_axi_awburst);
        (*_glb_hdl_sc_channel_map)[23479].first = 3;
        (*_glb_hdl_sc_channel_map)[23479].second.push_front(p_17_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s_axi_awlock.bind(*p_17_s_axi_awlock);
        (*_glb_hdl_sc_channel_map)[23483].first = 3;
        (*_glb_hdl_sc_channel_map)[23483].second.push_front(p_17_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_awcache.bind(*p_17_s_axi_awcache);
        (*_glb_hdl_sc_channel_map)[23480].first = 3;
        (*_glb_hdl_sc_channel_map)[23480].second.push_front(p_17_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_awprot.bind(*p_17_s_axi_awprot);
        (*_glb_hdl_sc_channel_map)[23484].first = 3;
        (*_glb_hdl_sc_channel_map)[23484].second.push_front(p_17_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_awqos.bind(*p_17_s_axi_awqos);
        (*_glb_hdl_sc_channel_map)[23485].first = 3;
        (*_glb_hdl_sc_channel_map)[23485].second.push_front(p_17_s_axi_awqos);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_17_s_axi_awuser = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_17->s_axi_awuser.bind(*p_17_s_axi_awuser);
        (*_glb_hdl_sc_channel_map)[23488].first = 3;
        (*_glb_hdl_sc_channel_map)[23488].second.push_front(p_17_s_axi_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s_axi_awvalid.bind(*p_17_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[23489].first = 3;
        (*_glb_hdl_sc_channel_map)[23489].second.push_front(p_17_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s_axi_awready.bind(*p_17_s_axi_awready);
        p_17_s_axi_awready->set_sv_netview_offsetfromdp(11739168);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_wdata.bind(*p_17_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[23500].first = 3;
        (*_glb_hdl_sc_channel_map)[23500].second.push_front(p_17_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_wstrb.bind(*p_17_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[23503].first = 3;
        (*_glb_hdl_sc_channel_map)[23503].second.push_front(p_17_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s_axi_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s_axi_wlast.bind(*p_17_s_axi_wlast);
        (*_glb_hdl_sc_channel_map)[23501].first = 3;
        (*_glb_hdl_sc_channel_map)[23501].second.push_front(p_17_s_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s_axi_wvalid.bind(*p_17_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[23504].first = 3;
        (*_glb_hdl_sc_channel_map)[23504].second.push_front(p_17_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s_axi_wready.bind(*p_17_s_axi_wready);
        p_17_s_axi_wready->set_sv_netview_offsetfromdp(11739448);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_17_s_axi_bid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_17->s_axi_bid.bind(*p_17_s_axi_bid);
        p_17_s_axi_bid->set_sv_netview_offsetfromdp(11739504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_bresp.bind(*p_17_s_axi_bresp);
        p_17_s_axi_bresp->set_sv_netview_offsetfromdp(11739560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s_axi_bvalid.bind(*p_17_s_axi_bvalid);
        p_17_s_axi_bvalid->set_sv_netview_offsetfromdp(11739616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s_axi_bready.bind(*p_17_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[23491].first = 3;
        (*_glb_hdl_sc_channel_map)[23491].second.push_front(p_17_s_axi_bready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_17_s_axi_arid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_17->s_axi_arid.bind(*p_17_s_axi_arid);
        (*_glb_hdl_sc_channel_map)[23469].first = 3;
        (*_glb_hdl_sc_channel_map)[23469].second.push_front(p_17_s_axi_arid);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_17_s_axi_araddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_17->s_axi_araddr.bind(*p_17_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[23466].first = 3;
        (*_glb_hdl_sc_channel_map)[23466].second.push_front(p_17_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_arlen.bind(*p_17_s_axi_arlen);
        (*_glb_hdl_sc_channel_map)[23470].first = 3;
        (*_glb_hdl_sc_channel_map)[23470].second.push_front(p_17_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_arsize.bind(*p_17_s_axi_arsize);
        (*_glb_hdl_sc_channel_map)[23475].first = 3;
        (*_glb_hdl_sc_channel_map)[23475].second.push_front(p_17_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_arburst.bind(*p_17_s_axi_arburst);
        (*_glb_hdl_sc_channel_map)[23467].first = 3;
        (*_glb_hdl_sc_channel_map)[23467].second.push_front(p_17_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s_axi_arlock.bind(*p_17_s_axi_arlock);
        (*_glb_hdl_sc_channel_map)[23471].first = 3;
        (*_glb_hdl_sc_channel_map)[23471].second.push_front(p_17_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_arcache.bind(*p_17_s_axi_arcache);
        (*_glb_hdl_sc_channel_map)[23468].first = 3;
        (*_glb_hdl_sc_channel_map)[23468].second.push_front(p_17_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_arprot.bind(*p_17_s_axi_arprot);
        (*_glb_hdl_sc_channel_map)[23472].first = 3;
        (*_glb_hdl_sc_channel_map)[23472].second.push_front(p_17_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_arqos.bind(*p_17_s_axi_arqos);
        (*_glb_hdl_sc_channel_map)[23473].first = 3;
        (*_glb_hdl_sc_channel_map)[23473].second.push_front(p_17_s_axi_arqos);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_17_s_axi_aruser = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_17->s_axi_aruser.bind(*p_17_s_axi_aruser);
        (*_glb_hdl_sc_channel_map)[23476].first = 3;
        (*_glb_hdl_sc_channel_map)[23476].second.push_front(p_17_s_axi_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s_axi_arvalid.bind(*p_17_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[23477].first = 3;
        (*_glb_hdl_sc_channel_map)[23477].second.push_front(p_17_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s_axi_arready.bind(*p_17_s_axi_arready);
        p_17_s_axi_arready->set_sv_netview_offsetfromdp(11740344);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_17_s_axi_rid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_17->s_axi_rid.bind(*p_17_s_axi_rid);
        p_17_s_axi_rid->set_sv_netview_offsetfromdp(11740400);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_rdata.bind(*p_17_s_axi_rdata);
        p_17_s_axi_rdata->set_sv_netview_offsetfromdp(11740456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_rresp.bind(*p_17_s_axi_rresp);
        p_17_s_axi_rresp->set_sv_netview_offsetfromdp(11740512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s_axi_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s_axi_rlast.bind(*p_17_s_axi_rlast);
        p_17_s_axi_rlast->set_sv_netview_offsetfromdp(11740568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s_axi_rvalid.bind(*p_17_s_axi_rvalid);
        p_17_s_axi_rvalid->set_sv_netview_offsetfromdp(11740624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s_axi_rready.bind(*p_17_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[23497].first = 3;
        (*_glb_hdl_sc_channel_map)[23497].second.push_front(p_17_s_axi_rready);
        xsim_sc_channel<48, sc_dt::sc_bv<48> > *p_17_m_axi_awid = new xsim_sc_channel<48, sc_dt::sc_bv<48> >();
        sc_inst_17->m_axi_awid.bind(*p_17_m_axi_awid);
        p_17_m_axi_awid->set_sv_netview_offsetfromdp(11740736);
        xsim_sc_channel<120, sc_dt::sc_bv<120> > *p_17_m_axi_awaddr = new xsim_sc_channel<120, sc_dt::sc_bv<120> >();
        sc_inst_17->m_axi_awaddr.bind(*p_17_m_axi_awaddr);
        p_17_m_axi_awaddr->set_sv_netview_offsetfromdp(11740792);
        xsim_sc_channel<24, sc_dt::sc_bv<24> > *p_17_m_axi_awlen = new xsim_sc_channel<24, sc_dt::sc_bv<24> >();
        sc_inst_17->m_axi_awlen.bind(*p_17_m_axi_awlen);
        p_17_m_axi_awlen->set_sv_netview_offsetfromdp(11740848);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_17_m_axi_awsize = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_17->m_axi_awsize.bind(*p_17_m_axi_awsize);
        p_17_m_axi_awsize->set_sv_netview_offsetfromdp(11740904);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_17_m_axi_awburst = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_17->m_axi_awburst.bind(*p_17_m_axi_awburst);
        p_17_m_axi_awburst->set_sv_netview_offsetfromdp(11740960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_awlock = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_awlock.bind(*p_17_m_axi_awlock);
        p_17_m_axi_awlock->set_sv_netview_offsetfromdp(11741016);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_17_m_axi_awcache = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_17->m_axi_awcache.bind(*p_17_m_axi_awcache);
        p_17_m_axi_awcache->set_sv_netview_offsetfromdp(11741072);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_17_m_axi_awprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_17->m_axi_awprot.bind(*p_17_m_axi_awprot);
        p_17_m_axi_awprot->set_sv_netview_offsetfromdp(11741128);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_17_m_axi_awregion = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_17->m_axi_awregion.bind(*p_17_m_axi_awregion);
        p_17_m_axi_awregion->set_sv_netview_offsetfromdp(11741184);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_17_m_axi_awqos = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_17->m_axi_awqos.bind(*p_17_m_axi_awqos);
        p_17_m_axi_awqos->set_sv_netview_offsetfromdp(11741240);
        xsim_sc_channel<48, sc_dt::sc_bv<48> > *p_17_m_axi_awuser = new xsim_sc_channel<48, sc_dt::sc_bv<48> >();
        sc_inst_17->m_axi_awuser.bind(*p_17_m_axi_awuser);
        p_17_m_axi_awuser->set_sv_netview_offsetfromdp(11741296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_awvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_awvalid.bind(*p_17_m_axi_awvalid);
        p_17_m_axi_awvalid->set_sv_netview_offsetfromdp(11741352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_awready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_awready.bind(*p_17_m_axi_awready);
        (*_glb_hdl_sc_channel_map)[23429].first = 3;
        (*_glb_hdl_sc_channel_map)[23429].second.push_front(p_17_m_axi_awready);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_17_m_axi_wdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_17->m_axi_wdata.bind(*p_17_m_axi_wdata);
        p_17_m_axi_wdata->set_sv_netview_offsetfromdp(11741464);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_17_m_axi_wstrb = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_17->m_axi_wstrb.bind(*p_17_m_axi_wstrb);
        p_17_m_axi_wstrb->set_sv_netview_offsetfromdp(11741520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_wlast = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_wlast.bind(*p_17_m_axi_wlast);
        p_17_m_axi_wlast->set_sv_netview_offsetfromdp(11741576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_wvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_wvalid.bind(*p_17_m_axi_wvalid);
        p_17_m_axi_wvalid->set_sv_netview_offsetfromdp(11741632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_wready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_wready.bind(*p_17_m_axi_wready);
        (*_glb_hdl_sc_channel_map)[23461].first = 3;
        (*_glb_hdl_sc_channel_map)[23461].second.push_front(p_17_m_axi_wready);
        xsim_sc_channel<48, sc_dt::sc_bv<48> > *p_17_m_axi_bid = new xsim_sc_channel<48, sc_dt::sc_bv<48> >();
        sc_inst_17->m_axi_bid.bind(*p_17_m_axi_bid);
        (*_glb_hdl_sc_channel_map)[23437].first = 3;
        (*_glb_hdl_sc_channel_map)[23437].second.push_front(p_17_m_axi_bid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_17_m_axi_bresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_17->m_axi_bresp.bind(*p_17_m_axi_bresp);
        (*_glb_hdl_sc_channel_map)[23441].first = 3;
        (*_glb_hdl_sc_channel_map)[23441].second.push_front(p_17_m_axi_bresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_bvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_bvalid.bind(*p_17_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[23443].first = 3;
        (*_glb_hdl_sc_channel_map)[23443].second.push_front(p_17_m_axi_bvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_bready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_bready.bind(*p_17_m_axi_bready);
        p_17_m_axi_bready->set_sv_netview_offsetfromdp(11741912);
        xsim_sc_channel<48, sc_dt::sc_bv<48> > *p_17_m_axi_arid = new xsim_sc_channel<48, sc_dt::sc_bv<48> >();
        sc_inst_17->m_axi_arid.bind(*p_17_m_axi_arid);
        p_17_m_axi_arid->set_sv_netview_offsetfromdp(11741968);
        xsim_sc_channel<120, sc_dt::sc_bv<120> > *p_17_m_axi_araddr = new xsim_sc_channel<120, sc_dt::sc_bv<120> >();
        sc_inst_17->m_axi_araddr.bind(*p_17_m_axi_araddr);
        p_17_m_axi_araddr->set_sv_netview_offsetfromdp(11742024);
        xsim_sc_channel<24, sc_dt::sc_bv<24> > *p_17_m_axi_arlen = new xsim_sc_channel<24, sc_dt::sc_bv<24> >();
        sc_inst_17->m_axi_arlen.bind(*p_17_m_axi_arlen);
        p_17_m_axi_arlen->set_sv_netview_offsetfromdp(11742080);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_17_m_axi_arsize = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_17->m_axi_arsize.bind(*p_17_m_axi_arsize);
        p_17_m_axi_arsize->set_sv_netview_offsetfromdp(11742136);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_17_m_axi_arburst = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_17->m_axi_arburst.bind(*p_17_m_axi_arburst);
        p_17_m_axi_arburst->set_sv_netview_offsetfromdp(11742192);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_arlock = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_arlock.bind(*p_17_m_axi_arlock);
        p_17_m_axi_arlock->set_sv_netview_offsetfromdp(11742248);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_17_m_axi_arcache = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_17->m_axi_arcache.bind(*p_17_m_axi_arcache);
        p_17_m_axi_arcache->set_sv_netview_offsetfromdp(11742304);
        xsim_sc_channel<9, sc_dt::sc_bv<9> > *p_17_m_axi_arprot = new xsim_sc_channel<9, sc_dt::sc_bv<9> >();
        sc_inst_17->m_axi_arprot.bind(*p_17_m_axi_arprot);
        p_17_m_axi_arprot->set_sv_netview_offsetfromdp(11742360);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_17_m_axi_arregion = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_17->m_axi_arregion.bind(*p_17_m_axi_arregion);
        p_17_m_axi_arregion->set_sv_netview_offsetfromdp(11742416);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_17_m_axi_arqos = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_17->m_axi_arqos.bind(*p_17_m_axi_arqos);
        p_17_m_axi_arqos->set_sv_netview_offsetfromdp(11742472);
        xsim_sc_channel<48, sc_dt::sc_bv<48> > *p_17_m_axi_aruser = new xsim_sc_channel<48, sc_dt::sc_bv<48> >();
        sc_inst_17->m_axi_aruser.bind(*p_17_m_axi_aruser);
        p_17_m_axi_aruser->set_sv_netview_offsetfromdp(11742528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_arvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_arvalid.bind(*p_17_m_axi_arvalid);
        p_17_m_axi_arvalid->set_sv_netview_offsetfromdp(11742584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_arready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_arready.bind(*p_17_m_axi_arready);
        (*_glb_hdl_sc_channel_map)[23405].first = 3;
        (*_glb_hdl_sc_channel_map)[23405].second.push_front(p_17_m_axi_arready);
        xsim_sc_channel<48, sc_dt::sc_bv<48> > *p_17_m_axi_rid = new xsim_sc_channel<48, sc_dt::sc_bv<48> >();
        sc_inst_17->m_axi_rid.bind(*p_17_m_axi_rid);
        (*_glb_hdl_sc_channel_map)[23447].first = 3;
        (*_glb_hdl_sc_channel_map)[23447].second.push_front(p_17_m_axi_rid);
        xsim_sc_channel<96, sc_dt::sc_bv<96> > *p_17_m_axi_rdata = new xsim_sc_channel<96, sc_dt::sc_bv<96> >();
        sc_inst_17->m_axi_rdata.bind(*p_17_m_axi_rdata);
        (*_glb_hdl_sc_channel_map)[23445].first = 3;
        (*_glb_hdl_sc_channel_map)[23445].second.push_front(p_17_m_axi_rdata);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_17_m_axi_rresp = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_17->m_axi_rresp.bind(*p_17_m_axi_rresp);
        (*_glb_hdl_sc_channel_map)[23453].first = 3;
        (*_glb_hdl_sc_channel_map)[23453].second.push_front(p_17_m_axi_rresp);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_rlast = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_rlast.bind(*p_17_m_axi_rlast);
        (*_glb_hdl_sc_channel_map)[23449].first = 3;
        (*_glb_hdl_sc_channel_map)[23449].second.push_front(p_17_m_axi_rlast);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_rvalid = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_rvalid.bind(*p_17_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[23455].first = 3;
        (*_glb_hdl_sc_channel_map)[23455].second.push_front(p_17_m_axi_rvalid);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_rready = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_rready.bind(*p_17_m_axi_rready);
        p_17_m_axi_rready->set_sv_netview_offsetfromdp(11742976);
        sc_inst_18 = new zcu104_base_ps_e_0(".zcu104_base_wrapper.zcu104_base_i.ps_e");
        sc_inst_18->xsim_set_dbg_index(466);
        xsim_sc_channel<0, bool > *p_18_maxihpm0_fpd_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxihpm0_fpd_aclk.bind(*p_18_maxihpm0_fpd_aclk);
        (*_glb_hdl_sc_channel_map)[25334].first = 1;
        (*_glb_hdl_sc_channel_map)[25334].second.push_front(p_18_maxihpm0_fpd_aclk);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_18_maxigp0_awid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_18->maxigp0_awid.bind(*p_18_maxigp0_awid);
        p_18_maxigp0_awid->set_sv_netview_offsetfromdp(12066760);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_18_maxigp0_awaddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_18->maxigp0_awaddr.bind(*p_18_maxigp0_awaddr);
        p_18_maxigp0_awaddr->set_sv_netview_offsetfromdp(12066816);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_maxigp0_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->maxigp0_awlen.bind(*p_18_maxigp0_awlen);
        p_18_maxigp0_awlen->set_sv_netview_offsetfromdp(12066872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_maxigp0_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->maxigp0_awsize.bind(*p_18_maxigp0_awsize);
        p_18_maxigp0_awsize->set_sv_netview_offsetfromdp(12066928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_maxigp0_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->maxigp0_awburst.bind(*p_18_maxigp0_awburst);
        p_18_maxigp0_awburst->set_sv_netview_offsetfromdp(12066984);
        xsim_sc_channel<0, bool > *p_18_maxigp0_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp0_awlock.bind(*p_18_maxigp0_awlock);
        p_18_maxigp0_awlock->set_sv_netview_offsetfromdp(12067040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_maxigp0_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->maxigp0_awcache.bind(*p_18_maxigp0_awcache);
        p_18_maxigp0_awcache->set_sv_netview_offsetfromdp(12067096);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_maxigp0_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->maxigp0_awprot.bind(*p_18_maxigp0_awprot);
        p_18_maxigp0_awprot->set_sv_netview_offsetfromdp(12067152);
        xsim_sc_channel<0, bool > *p_18_maxigp0_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp0_awvalid.bind(*p_18_maxigp0_awvalid);
        p_18_maxigp0_awvalid->set_sv_netview_offsetfromdp(12067208);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_18_maxigp0_awuser = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_18->maxigp0_awuser.bind(*p_18_maxigp0_awuser);
        p_18_maxigp0_awuser->set_sv_netview_offsetfromdp(12067264);
        xsim_sc_channel<0, bool > *p_18_maxigp0_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp0_awready.bind(*p_18_maxigp0_awready);
        (*_glb_hdl_sc_channel_map)[25276].first = 1;
        (*_glb_hdl_sc_channel_map)[25276].second.push_front(p_18_maxigp0_awready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_18_maxigp0_wdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_18->maxigp0_wdata.bind(*p_18_maxigp0_wdata);
        p_18_maxigp0_wdata->set_sv_netview_offsetfromdp(12067376);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_18_maxigp0_wstrb = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_18->maxigp0_wstrb.bind(*p_18_maxigp0_wstrb);
        p_18_maxigp0_wstrb->set_sv_netview_offsetfromdp(12067432);
        xsim_sc_channel<0, bool > *p_18_maxigp0_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp0_wlast.bind(*p_18_maxigp0_wlast);
        p_18_maxigp0_wlast->set_sv_netview_offsetfromdp(12067488);
        xsim_sc_channel<0, bool > *p_18_maxigp0_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp0_wvalid.bind(*p_18_maxigp0_wvalid);
        p_18_maxigp0_wvalid->set_sv_netview_offsetfromdp(12067544);
        xsim_sc_channel<0, bool > *p_18_maxigp0_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp0_wready.bind(*p_18_maxigp0_wready);
        (*_glb_hdl_sc_channel_map)[25292].first = 1;
        (*_glb_hdl_sc_channel_map)[25292].second.push_front(p_18_maxigp0_wready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_18_maxigp0_bid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_18->maxigp0_bid.bind(*p_18_maxigp0_bid);
        (*_glb_hdl_sc_channel_map)[25280].first = 3;
        (*_glb_hdl_sc_channel_map)[25280].second.push_front(p_18_maxigp0_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_maxigp0_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->maxigp0_bresp.bind(*p_18_maxigp0_bresp);
        (*_glb_hdl_sc_channel_map)[25282].first = 3;
        (*_glb_hdl_sc_channel_map)[25282].second.push_front(p_18_maxigp0_bresp);
        xsim_sc_channel<0, bool > *p_18_maxigp0_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp0_bvalid.bind(*p_18_maxigp0_bvalid);
        (*_glb_hdl_sc_channel_map)[25283].first = 1;
        (*_glb_hdl_sc_channel_map)[25283].second.push_front(p_18_maxigp0_bvalid);
        xsim_sc_channel<0, bool > *p_18_maxigp0_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp0_bready.bind(*p_18_maxigp0_bready);
        p_18_maxigp0_bready->set_sv_netview_offsetfromdp(12067824);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_18_maxigp0_arid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_18->maxigp0_arid.bind(*p_18_maxigp0_arid);
        p_18_maxigp0_arid->set_sv_netview_offsetfromdp(12067880);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_18_maxigp0_araddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_18->maxigp0_araddr.bind(*p_18_maxigp0_araddr);
        p_18_maxigp0_araddr->set_sv_netview_offsetfromdp(12067936);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_maxigp0_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->maxigp0_arlen.bind(*p_18_maxigp0_arlen);
        p_18_maxigp0_arlen->set_sv_netview_offsetfromdp(12067992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_maxigp0_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->maxigp0_arsize.bind(*p_18_maxigp0_arsize);
        p_18_maxigp0_arsize->set_sv_netview_offsetfromdp(12068048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_maxigp0_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->maxigp0_arburst.bind(*p_18_maxigp0_arburst);
        p_18_maxigp0_arburst->set_sv_netview_offsetfromdp(12068104);
        xsim_sc_channel<0, bool > *p_18_maxigp0_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp0_arlock.bind(*p_18_maxigp0_arlock);
        p_18_maxigp0_arlock->set_sv_netview_offsetfromdp(12068160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_maxigp0_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->maxigp0_arcache.bind(*p_18_maxigp0_arcache);
        p_18_maxigp0_arcache->set_sv_netview_offsetfromdp(12068216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_maxigp0_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->maxigp0_arprot.bind(*p_18_maxigp0_arprot);
        p_18_maxigp0_arprot->set_sv_netview_offsetfromdp(12068272);
        xsim_sc_channel<0, bool > *p_18_maxigp0_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp0_arvalid.bind(*p_18_maxigp0_arvalid);
        p_18_maxigp0_arvalid->set_sv_netview_offsetfromdp(12068328);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_18_maxigp0_aruser = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_18->maxigp0_aruser.bind(*p_18_maxigp0_aruser);
        p_18_maxigp0_aruser->set_sv_netview_offsetfromdp(12068384);
        xsim_sc_channel<0, bool > *p_18_maxigp0_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp0_arready.bind(*p_18_maxigp0_arready);
        (*_glb_hdl_sc_channel_map)[25264].first = 1;
        (*_glb_hdl_sc_channel_map)[25264].second.push_front(p_18_maxigp0_arready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_18_maxigp0_rid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_18->maxigp0_rid.bind(*p_18_maxigp0_rid);
        (*_glb_hdl_sc_channel_map)[25285].first = 3;
        (*_glb_hdl_sc_channel_map)[25285].second.push_front(p_18_maxigp0_rid);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_18_maxigp0_rdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_18->maxigp0_rdata.bind(*p_18_maxigp0_rdata);
        (*_glb_hdl_sc_channel_map)[25284].first = 3;
        (*_glb_hdl_sc_channel_map)[25284].second.push_front(p_18_maxigp0_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_maxigp0_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->maxigp0_rresp.bind(*p_18_maxigp0_rresp);
        (*_glb_hdl_sc_channel_map)[25288].first = 3;
        (*_glb_hdl_sc_channel_map)[25288].second.push_front(p_18_maxigp0_rresp);
        xsim_sc_channel<0, bool > *p_18_maxigp0_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp0_rlast.bind(*p_18_maxigp0_rlast);
        (*_glb_hdl_sc_channel_map)[25286].first = 1;
        (*_glb_hdl_sc_channel_map)[25286].second.push_front(p_18_maxigp0_rlast);
        xsim_sc_channel<0, bool > *p_18_maxigp0_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp0_rvalid.bind(*p_18_maxigp0_rvalid);
        (*_glb_hdl_sc_channel_map)[25289].first = 1;
        (*_glb_hdl_sc_channel_map)[25289].second.push_front(p_18_maxigp0_rvalid);
        xsim_sc_channel<0, bool > *p_18_maxigp0_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp0_rready.bind(*p_18_maxigp0_rready);
        p_18_maxigp0_rready->set_sv_netview_offsetfromdp(12068776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_maxigp0_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->maxigp0_awqos.bind(*p_18_maxigp0_awqos);
        p_18_maxigp0_awqos->set_sv_netview_offsetfromdp(12068832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_maxigp0_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->maxigp0_arqos.bind(*p_18_maxigp0_arqos);
        p_18_maxigp0_arqos->set_sv_netview_offsetfromdp(12068888);
        xsim_sc_channel<0, bool > *p_18_maxihpm0_lpd_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxihpm0_lpd_aclk.bind(*p_18_maxihpm0_lpd_aclk);
        (*_glb_hdl_sc_channel_map)[25335].first = 1;
        (*_glb_hdl_sc_channel_map)[25335].second.push_front(p_18_maxihpm0_lpd_aclk);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_18_maxigp2_awid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_18->maxigp2_awid.bind(*p_18_maxigp2_awid);
        p_18_maxigp2_awid->set_sv_netview_offsetfromdp(12069000);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_18_maxigp2_awaddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_18->maxigp2_awaddr.bind(*p_18_maxigp2_awaddr);
        p_18_maxigp2_awaddr->set_sv_netview_offsetfromdp(12069056);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_maxigp2_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->maxigp2_awlen.bind(*p_18_maxigp2_awlen);
        p_18_maxigp2_awlen->set_sv_netview_offsetfromdp(12069112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_maxigp2_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->maxigp2_awsize.bind(*p_18_maxigp2_awsize);
        p_18_maxigp2_awsize->set_sv_netview_offsetfromdp(12069168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_maxigp2_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->maxigp2_awburst.bind(*p_18_maxigp2_awburst);
        p_18_maxigp2_awburst->set_sv_netview_offsetfromdp(12069224);
        xsim_sc_channel<0, bool > *p_18_maxigp2_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp2_awlock.bind(*p_18_maxigp2_awlock);
        p_18_maxigp2_awlock->set_sv_netview_offsetfromdp(12069280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_maxigp2_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->maxigp2_awcache.bind(*p_18_maxigp2_awcache);
        p_18_maxigp2_awcache->set_sv_netview_offsetfromdp(12069336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_maxigp2_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->maxigp2_awprot.bind(*p_18_maxigp2_awprot);
        p_18_maxigp2_awprot->set_sv_netview_offsetfromdp(12069392);
        xsim_sc_channel<0, bool > *p_18_maxigp2_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp2_awvalid.bind(*p_18_maxigp2_awvalid);
        p_18_maxigp2_awvalid->set_sv_netview_offsetfromdp(12069448);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_18_maxigp2_awuser = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_18->maxigp2_awuser.bind(*p_18_maxigp2_awuser);
        p_18_maxigp2_awuser->set_sv_netview_offsetfromdp(12069504);
        xsim_sc_channel<0, bool > *p_18_maxigp2_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp2_awready.bind(*p_18_maxigp2_awready);
        (*_glb_hdl_sc_channel_map)[25315].first = 1;
        (*_glb_hdl_sc_channel_map)[25315].second.push_front(p_18_maxigp2_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_maxigp2_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->maxigp2_wdata.bind(*p_18_maxigp2_wdata);
        p_18_maxigp2_wdata->set_sv_netview_offsetfromdp(12069616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_maxigp2_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->maxigp2_wstrb.bind(*p_18_maxigp2_wstrb);
        p_18_maxigp2_wstrb->set_sv_netview_offsetfromdp(12069672);
        xsim_sc_channel<0, bool > *p_18_maxigp2_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp2_wlast.bind(*p_18_maxigp2_wlast);
        p_18_maxigp2_wlast->set_sv_netview_offsetfromdp(12069728);
        xsim_sc_channel<0, bool > *p_18_maxigp2_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp2_wvalid.bind(*p_18_maxigp2_wvalid);
        p_18_maxigp2_wvalid->set_sv_netview_offsetfromdp(12069784);
        xsim_sc_channel<0, bool > *p_18_maxigp2_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp2_wready.bind(*p_18_maxigp2_wready);
        (*_glb_hdl_sc_channel_map)[25331].first = 1;
        (*_glb_hdl_sc_channel_map)[25331].second.push_front(p_18_maxigp2_wready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_18_maxigp2_bid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_18->maxigp2_bid.bind(*p_18_maxigp2_bid);
        (*_glb_hdl_sc_channel_map)[25319].first = 3;
        (*_glb_hdl_sc_channel_map)[25319].second.push_front(p_18_maxigp2_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_maxigp2_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->maxigp2_bresp.bind(*p_18_maxigp2_bresp);
        (*_glb_hdl_sc_channel_map)[25321].first = 3;
        (*_glb_hdl_sc_channel_map)[25321].second.push_front(p_18_maxigp2_bresp);
        xsim_sc_channel<0, bool > *p_18_maxigp2_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp2_bvalid.bind(*p_18_maxigp2_bvalid);
        (*_glb_hdl_sc_channel_map)[25322].first = 1;
        (*_glb_hdl_sc_channel_map)[25322].second.push_front(p_18_maxigp2_bvalid);
        xsim_sc_channel<0, bool > *p_18_maxigp2_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp2_bready.bind(*p_18_maxigp2_bready);
        p_18_maxigp2_bready->set_sv_netview_offsetfromdp(12070064);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_18_maxigp2_arid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_18->maxigp2_arid.bind(*p_18_maxigp2_arid);
        p_18_maxigp2_arid->set_sv_netview_offsetfromdp(12070120);
        xsim_sc_channel<40, sc_dt::sc_bv<40> > *p_18_maxigp2_araddr = new xsim_sc_channel<40, sc_dt::sc_bv<40> >();
        sc_inst_18->maxigp2_araddr.bind(*p_18_maxigp2_araddr);
        p_18_maxigp2_araddr->set_sv_netview_offsetfromdp(12070176);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_maxigp2_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->maxigp2_arlen.bind(*p_18_maxigp2_arlen);
        p_18_maxigp2_arlen->set_sv_netview_offsetfromdp(12070232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_maxigp2_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->maxigp2_arsize.bind(*p_18_maxigp2_arsize);
        p_18_maxigp2_arsize->set_sv_netview_offsetfromdp(12070288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_maxigp2_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->maxigp2_arburst.bind(*p_18_maxigp2_arburst);
        p_18_maxigp2_arburst->set_sv_netview_offsetfromdp(12070344);
        xsim_sc_channel<0, bool > *p_18_maxigp2_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp2_arlock.bind(*p_18_maxigp2_arlock);
        p_18_maxigp2_arlock->set_sv_netview_offsetfromdp(12070400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_maxigp2_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->maxigp2_arcache.bind(*p_18_maxigp2_arcache);
        p_18_maxigp2_arcache->set_sv_netview_offsetfromdp(12070456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_maxigp2_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->maxigp2_arprot.bind(*p_18_maxigp2_arprot);
        p_18_maxigp2_arprot->set_sv_netview_offsetfromdp(12070512);
        xsim_sc_channel<0, bool > *p_18_maxigp2_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp2_arvalid.bind(*p_18_maxigp2_arvalid);
        p_18_maxigp2_arvalid->set_sv_netview_offsetfromdp(12070568);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_18_maxigp2_aruser = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_18->maxigp2_aruser.bind(*p_18_maxigp2_aruser);
        p_18_maxigp2_aruser->set_sv_netview_offsetfromdp(12070624);
        xsim_sc_channel<0, bool > *p_18_maxigp2_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp2_arready.bind(*p_18_maxigp2_arready);
        (*_glb_hdl_sc_channel_map)[25303].first = 1;
        (*_glb_hdl_sc_channel_map)[25303].second.push_front(p_18_maxigp2_arready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_18_maxigp2_rid = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_18->maxigp2_rid.bind(*p_18_maxigp2_rid);
        (*_glb_hdl_sc_channel_map)[25324].first = 3;
        (*_glb_hdl_sc_channel_map)[25324].second.push_front(p_18_maxigp2_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_maxigp2_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->maxigp2_rdata.bind(*p_18_maxigp2_rdata);
        (*_glb_hdl_sc_channel_map)[25323].first = 3;
        (*_glb_hdl_sc_channel_map)[25323].second.push_front(p_18_maxigp2_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_maxigp2_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->maxigp2_rresp.bind(*p_18_maxigp2_rresp);
        (*_glb_hdl_sc_channel_map)[25327].first = 3;
        (*_glb_hdl_sc_channel_map)[25327].second.push_front(p_18_maxigp2_rresp);
        xsim_sc_channel<0, bool > *p_18_maxigp2_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp2_rlast.bind(*p_18_maxigp2_rlast);
        (*_glb_hdl_sc_channel_map)[25325].first = 1;
        (*_glb_hdl_sc_channel_map)[25325].second.push_front(p_18_maxigp2_rlast);
        xsim_sc_channel<0, bool > *p_18_maxigp2_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp2_rvalid.bind(*p_18_maxigp2_rvalid);
        (*_glb_hdl_sc_channel_map)[25328].first = 1;
        (*_glb_hdl_sc_channel_map)[25328].second.push_front(p_18_maxigp2_rvalid);
        xsim_sc_channel<0, bool > *p_18_maxigp2_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxigp2_rready.bind(*p_18_maxigp2_rready);
        p_18_maxigp2_rready->set_sv_netview_offsetfromdp(12071016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_maxigp2_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->maxigp2_awqos.bind(*p_18_maxigp2_awqos);
        p_18_maxigp2_awqos->set_sv_netview_offsetfromdp(12071072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_maxigp2_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->maxigp2_arqos.bind(*p_18_maxigp2_arqos);
        p_18_maxigp2_arqos->set_sv_netview_offsetfromdp(12071128);
        xsim_sc_channel<0, bool > *p_18_saxihpc0_fpd_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxihpc0_fpd_aclk.bind(*p_18_saxihpc0_fpd_aclk);
        (*_glb_hdl_sc_channel_map)[25436].first = 1;
        (*_glb_hdl_sc_channel_map)[25436].second.push_front(p_18_saxihpc0_fpd_aclk);
        xsim_sc_channel<0, bool > *p_18_saxigp0_aruser = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp0_aruser.bind(*p_18_saxigp0_aruser);
        (*_glb_hdl_sc_channel_map)[2043].first = 1;
        (*_glb_hdl_sc_channel_map)[2043].second.push_front(p_18_saxigp0_aruser);
        xsim_sc_channel<0, bool > *p_18_saxigp0_awuser = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp0_awuser.bind(*p_18_saxigp0_awuser);
        (*_glb_hdl_sc_channel_map)[2040].first = 1;
        (*_glb_hdl_sc_channel_map)[2040].second.push_front(p_18_saxigp0_awuser);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_saxigp0_awid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->saxigp0_awid.bind(*p_18_saxigp0_awid);
        (*_glb_hdl_sc_channel_map)[2041].first = 3;
        (*_glb_hdl_sc_channel_map)[2041].second.push_front(p_18_saxigp0_awid);
        xsim_sc_channel<49, sc_dt::sc_bv<49> > *p_18_saxigp0_awaddr = new xsim_sc_channel<49, sc_dt::sc_bv<49> >();
        sc_inst_18->saxigp0_awaddr.bind(*p_18_saxigp0_awaddr);
        (*_glb_hdl_sc_channel_map)[2042].first = 3;
        (*_glb_hdl_sc_channel_map)[2042].second.push_front(p_18_saxigp0_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_saxigp0_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->saxigp0_awlen.bind(*p_18_saxigp0_awlen);
        (*_glb_hdl_sc_channel_map)[25350].first = 3;
        (*_glb_hdl_sc_channel_map)[25350].second.push_front(p_18_saxigp0_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_saxigp0_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->saxigp0_awsize.bind(*p_18_saxigp0_awsize);
        (*_glb_hdl_sc_channel_map)[25355].first = 3;
        (*_glb_hdl_sc_channel_map)[25355].second.push_front(p_18_saxigp0_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_saxigp0_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->saxigp0_awburst.bind(*p_18_saxigp0_awburst);
        (*_glb_hdl_sc_channel_map)[25348].first = 3;
        (*_glb_hdl_sc_channel_map)[25348].second.push_front(p_18_saxigp0_awburst);
        xsim_sc_channel<0, bool > *p_18_saxigp0_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp0_awlock.bind(*p_18_saxigp0_awlock);
        (*_glb_hdl_sc_channel_map)[25351].first = 1;
        (*_glb_hdl_sc_channel_map)[25351].second.push_front(p_18_saxigp0_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_saxigp0_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->saxigp0_awcache.bind(*p_18_saxigp0_awcache);
        (*_glb_hdl_sc_channel_map)[25349].first = 3;
        (*_glb_hdl_sc_channel_map)[25349].second.push_front(p_18_saxigp0_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_saxigp0_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->saxigp0_awprot.bind(*p_18_saxigp0_awprot);
        (*_glb_hdl_sc_channel_map)[25352].first = 3;
        (*_glb_hdl_sc_channel_map)[25352].second.push_front(p_18_saxigp0_awprot);
        xsim_sc_channel<0, bool > *p_18_saxigp0_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp0_awvalid.bind(*p_18_saxigp0_awvalid);
        (*_glb_hdl_sc_channel_map)[25356].first = 1;
        (*_glb_hdl_sc_channel_map)[25356].second.push_front(p_18_saxigp0_awvalid);
        xsim_sc_channel<0, bool > *p_18_saxigp0_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp0_awready.bind(*p_18_saxigp0_awready);
        p_18_saxigp0_awready->set_sv_netview_offsetfromdp(12071856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_saxigp0_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->saxigp0_wdata.bind(*p_18_saxigp0_wdata);
        (*_glb_hdl_sc_channel_map)[25365].first = 3;
        (*_glb_hdl_sc_channel_map)[25365].second.push_front(p_18_saxigp0_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_saxigp0_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->saxigp0_wstrb.bind(*p_18_saxigp0_wstrb);
        (*_glb_hdl_sc_channel_map)[25368].first = 3;
        (*_glb_hdl_sc_channel_map)[25368].second.push_front(p_18_saxigp0_wstrb);
        xsim_sc_channel<0, bool > *p_18_saxigp0_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp0_wlast.bind(*p_18_saxigp0_wlast);
        (*_glb_hdl_sc_channel_map)[25366].first = 1;
        (*_glb_hdl_sc_channel_map)[25366].second.push_front(p_18_saxigp0_wlast);
        xsim_sc_channel<0, bool > *p_18_saxigp0_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp0_wvalid.bind(*p_18_saxigp0_wvalid);
        (*_glb_hdl_sc_channel_map)[25369].first = 1;
        (*_glb_hdl_sc_channel_map)[25369].second.push_front(p_18_saxigp0_wvalid);
        xsim_sc_channel<0, bool > *p_18_saxigp0_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp0_wready.bind(*p_18_saxigp0_wready);
        p_18_saxigp0_wready->set_sv_netview_offsetfromdp(12072136);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_saxigp0_bid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->saxigp0_bid.bind(*p_18_saxigp0_bid);
        p_18_saxigp0_bid->set_sv_netview_offsetfromdp(12072192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_saxigp0_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->saxigp0_bresp.bind(*p_18_saxigp0_bresp);
        p_18_saxigp0_bresp->set_sv_netview_offsetfromdp(12072248);
        xsim_sc_channel<0, bool > *p_18_saxigp0_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp0_bvalid.bind(*p_18_saxigp0_bvalid);
        p_18_saxigp0_bvalid->set_sv_netview_offsetfromdp(12072304);
        xsim_sc_channel<0, bool > *p_18_saxigp0_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp0_bready.bind(*p_18_saxigp0_bready);
        (*_glb_hdl_sc_channel_map)[25357].first = 1;
        (*_glb_hdl_sc_channel_map)[25357].second.push_front(p_18_saxigp0_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_saxigp0_arid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->saxigp0_arid.bind(*p_18_saxigp0_arid);
        (*_glb_hdl_sc_channel_map)[2044].first = 3;
        (*_glb_hdl_sc_channel_map)[2044].second.push_front(p_18_saxigp0_arid);
        xsim_sc_channel<49, sc_dt::sc_bv<49> > *p_18_saxigp0_araddr = new xsim_sc_channel<49, sc_dt::sc_bv<49> >();
        sc_inst_18->saxigp0_araddr.bind(*p_18_saxigp0_araddr);
        (*_glb_hdl_sc_channel_map)[2045].first = 3;
        (*_glb_hdl_sc_channel_map)[2045].second.push_front(p_18_saxigp0_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_saxigp0_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->saxigp0_arlen.bind(*p_18_saxigp0_arlen);
        (*_glb_hdl_sc_channel_map)[25341].first = 3;
        (*_glb_hdl_sc_channel_map)[25341].second.push_front(p_18_saxigp0_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_saxigp0_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->saxigp0_arsize.bind(*p_18_saxigp0_arsize);
        (*_glb_hdl_sc_channel_map)[25346].first = 3;
        (*_glb_hdl_sc_channel_map)[25346].second.push_front(p_18_saxigp0_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_saxigp0_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->saxigp0_arburst.bind(*p_18_saxigp0_arburst);
        (*_glb_hdl_sc_channel_map)[25339].first = 3;
        (*_glb_hdl_sc_channel_map)[25339].second.push_front(p_18_saxigp0_arburst);
        xsim_sc_channel<0, bool > *p_18_saxigp0_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp0_arlock.bind(*p_18_saxigp0_arlock);
        (*_glb_hdl_sc_channel_map)[25342].first = 1;
        (*_glb_hdl_sc_channel_map)[25342].second.push_front(p_18_saxigp0_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_saxigp0_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->saxigp0_arcache.bind(*p_18_saxigp0_arcache);
        (*_glb_hdl_sc_channel_map)[25340].first = 3;
        (*_glb_hdl_sc_channel_map)[25340].second.push_front(p_18_saxigp0_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_saxigp0_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->saxigp0_arprot.bind(*p_18_saxigp0_arprot);
        (*_glb_hdl_sc_channel_map)[25343].first = 3;
        (*_glb_hdl_sc_channel_map)[25343].second.push_front(p_18_saxigp0_arprot);
        xsim_sc_channel<0, bool > *p_18_saxigp0_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp0_arvalid.bind(*p_18_saxigp0_arvalid);
        (*_glb_hdl_sc_channel_map)[25347].first = 1;
        (*_glb_hdl_sc_channel_map)[25347].second.push_front(p_18_saxigp0_arvalid);
        xsim_sc_channel<0, bool > *p_18_saxigp0_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp0_arready.bind(*p_18_saxigp0_arready);
        p_18_saxigp0_arready->set_sv_netview_offsetfromdp(12072920);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_saxigp0_rid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->saxigp0_rid.bind(*p_18_saxigp0_rid);
        p_18_saxigp0_rid->set_sv_netview_offsetfromdp(12072976);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_saxigp0_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->saxigp0_rdata.bind(*p_18_saxigp0_rdata);
        p_18_saxigp0_rdata->set_sv_netview_offsetfromdp(12073032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_saxigp0_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->saxigp0_rresp.bind(*p_18_saxigp0_rresp);
        p_18_saxigp0_rresp->set_sv_netview_offsetfromdp(12073088);
        xsim_sc_channel<0, bool > *p_18_saxigp0_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp0_rlast.bind(*p_18_saxigp0_rlast);
        p_18_saxigp0_rlast->set_sv_netview_offsetfromdp(12073144);
        xsim_sc_channel<0, bool > *p_18_saxigp0_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp0_rvalid.bind(*p_18_saxigp0_rvalid);
        p_18_saxigp0_rvalid->set_sv_netview_offsetfromdp(12073200);
        xsim_sc_channel<0, bool > *p_18_saxigp0_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp0_rready.bind(*p_18_saxigp0_rready);
        (*_glb_hdl_sc_channel_map)[25362].first = 1;
        (*_glb_hdl_sc_channel_map)[25362].second.push_front(p_18_saxigp0_rready);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_saxigp0_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->saxigp0_awqos.bind(*p_18_saxigp0_awqos);
        (*_glb_hdl_sc_channel_map)[25353].first = 3;
        (*_glb_hdl_sc_channel_map)[25353].second.push_front(p_18_saxigp0_awqos);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_saxigp0_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->saxigp0_arqos.bind(*p_18_saxigp0_arqos);
        (*_glb_hdl_sc_channel_map)[25344].first = 3;
        (*_glb_hdl_sc_channel_map)[25344].second.push_front(p_18_saxigp0_arqos);
        xsim_sc_channel<0, bool > *p_18_saxihp0_fpd_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxihp0_fpd_aclk.bind(*p_18_saxihp0_fpd_aclk);
        (*_glb_hdl_sc_channel_map)[25434].first = 1;
        (*_glb_hdl_sc_channel_map)[25434].second.push_front(p_18_saxihp0_fpd_aclk);
        xsim_sc_channel<0, bool > *p_18_saxigp2_aruser = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp2_aruser.bind(*p_18_saxigp2_aruser);
        (*_glb_hdl_sc_channel_map)[2038].first = 1;
        (*_glb_hdl_sc_channel_map)[2038].second.push_front(p_18_saxigp2_aruser);
        xsim_sc_channel<0, bool > *p_18_saxigp2_awuser = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp2_awuser.bind(*p_18_saxigp2_awuser);
        (*_glb_hdl_sc_channel_map)[2036].first = 1;
        (*_glb_hdl_sc_channel_map)[2036].second.push_front(p_18_saxigp2_awuser);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_saxigp2_awid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->saxigp2_awid.bind(*p_18_saxigp2_awid);
        (*_glb_hdl_sc_channel_map)[2037].first = 3;
        (*_glb_hdl_sc_channel_map)[2037].second.push_front(p_18_saxigp2_awid);
        xsim_sc_channel<49, sc_dt::sc_bv<49> > *p_18_saxigp2_awaddr = new xsim_sc_channel<49, sc_dt::sc_bv<49> >();
        sc_inst_18->saxigp2_awaddr.bind(*p_18_saxigp2_awaddr);
        (*_glb_hdl_sc_channel_map)[25380].first = 3;
        (*_glb_hdl_sc_channel_map)[25380].second.push_front(p_18_saxigp2_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_saxigp2_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->saxigp2_awlen.bind(*p_18_saxigp2_awlen);
        (*_glb_hdl_sc_channel_map)[25383].first = 3;
        (*_glb_hdl_sc_channel_map)[25383].second.push_front(p_18_saxigp2_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_saxigp2_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->saxigp2_awsize.bind(*p_18_saxigp2_awsize);
        (*_glb_hdl_sc_channel_map)[25388].first = 3;
        (*_glb_hdl_sc_channel_map)[25388].second.push_front(p_18_saxigp2_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_saxigp2_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->saxigp2_awburst.bind(*p_18_saxigp2_awburst);
        (*_glb_hdl_sc_channel_map)[25381].first = 3;
        (*_glb_hdl_sc_channel_map)[25381].second.push_front(p_18_saxigp2_awburst);
        xsim_sc_channel<0, bool > *p_18_saxigp2_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp2_awlock.bind(*p_18_saxigp2_awlock);
        (*_glb_hdl_sc_channel_map)[25384].first = 1;
        (*_glb_hdl_sc_channel_map)[25384].second.push_front(p_18_saxigp2_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_saxigp2_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->saxigp2_awcache.bind(*p_18_saxigp2_awcache);
        (*_glb_hdl_sc_channel_map)[25382].first = 3;
        (*_glb_hdl_sc_channel_map)[25382].second.push_front(p_18_saxigp2_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_saxigp2_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->saxigp2_awprot.bind(*p_18_saxigp2_awprot);
        (*_glb_hdl_sc_channel_map)[25385].first = 3;
        (*_glb_hdl_sc_channel_map)[25385].second.push_front(p_18_saxigp2_awprot);
        xsim_sc_channel<0, bool > *p_18_saxigp2_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp2_awvalid.bind(*p_18_saxigp2_awvalid);
        (*_glb_hdl_sc_channel_map)[25389].first = 1;
        (*_glb_hdl_sc_channel_map)[25389].second.push_front(p_18_saxigp2_awvalid);
        xsim_sc_channel<0, bool > *p_18_saxigp2_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp2_awready.bind(*p_18_saxigp2_awready);
        p_18_saxigp2_awready->set_sv_netview_offsetfromdp(12074096);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_18_saxigp2_wdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_18->saxigp2_wdata.bind(*p_18_saxigp2_wdata);
        (*_glb_hdl_sc_channel_map)[25398].first = 3;
        (*_glb_hdl_sc_channel_map)[25398].second.push_front(p_18_saxigp2_wdata);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_18_saxigp2_wstrb = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_18->saxigp2_wstrb.bind(*p_18_saxigp2_wstrb);
        (*_glb_hdl_sc_channel_map)[25401].first = 3;
        (*_glb_hdl_sc_channel_map)[25401].second.push_front(p_18_saxigp2_wstrb);
        xsim_sc_channel<0, bool > *p_18_saxigp2_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp2_wlast.bind(*p_18_saxigp2_wlast);
        (*_glb_hdl_sc_channel_map)[25399].first = 1;
        (*_glb_hdl_sc_channel_map)[25399].second.push_front(p_18_saxigp2_wlast);
        xsim_sc_channel<0, bool > *p_18_saxigp2_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp2_wvalid.bind(*p_18_saxigp2_wvalid);
        (*_glb_hdl_sc_channel_map)[25402].first = 1;
        (*_glb_hdl_sc_channel_map)[25402].second.push_front(p_18_saxigp2_wvalid);
        xsim_sc_channel<0, bool > *p_18_saxigp2_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp2_wready.bind(*p_18_saxigp2_wready);
        p_18_saxigp2_wready->set_sv_netview_offsetfromdp(12074376);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_saxigp2_bid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->saxigp2_bid.bind(*p_18_saxigp2_bid);
        p_18_saxigp2_bid->set_sv_netview_offsetfromdp(12074432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_saxigp2_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->saxigp2_bresp.bind(*p_18_saxigp2_bresp);
        p_18_saxigp2_bresp->set_sv_netview_offsetfromdp(12074488);
        xsim_sc_channel<0, bool > *p_18_saxigp2_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp2_bvalid.bind(*p_18_saxigp2_bvalid);
        p_18_saxigp2_bvalid->set_sv_netview_offsetfromdp(12074544);
        xsim_sc_channel<0, bool > *p_18_saxigp2_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp2_bready.bind(*p_18_saxigp2_bready);
        (*_glb_hdl_sc_channel_map)[25390].first = 1;
        (*_glb_hdl_sc_channel_map)[25390].second.push_front(p_18_saxigp2_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_saxigp2_arid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->saxigp2_arid.bind(*p_18_saxigp2_arid);
        (*_glb_hdl_sc_channel_map)[2039].first = 3;
        (*_glb_hdl_sc_channel_map)[2039].second.push_front(p_18_saxigp2_arid);
        xsim_sc_channel<49, sc_dt::sc_bv<49> > *p_18_saxigp2_araddr = new xsim_sc_channel<49, sc_dt::sc_bv<49> >();
        sc_inst_18->saxigp2_araddr.bind(*p_18_saxigp2_araddr);
        (*_glb_hdl_sc_channel_map)[25370].first = 3;
        (*_glb_hdl_sc_channel_map)[25370].second.push_front(p_18_saxigp2_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_saxigp2_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->saxigp2_arlen.bind(*p_18_saxigp2_arlen);
        (*_glb_hdl_sc_channel_map)[25373].first = 3;
        (*_glb_hdl_sc_channel_map)[25373].second.push_front(p_18_saxigp2_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_saxigp2_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->saxigp2_arsize.bind(*p_18_saxigp2_arsize);
        (*_glb_hdl_sc_channel_map)[25378].first = 3;
        (*_glb_hdl_sc_channel_map)[25378].second.push_front(p_18_saxigp2_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_saxigp2_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->saxigp2_arburst.bind(*p_18_saxigp2_arburst);
        (*_glb_hdl_sc_channel_map)[25371].first = 3;
        (*_glb_hdl_sc_channel_map)[25371].second.push_front(p_18_saxigp2_arburst);
        xsim_sc_channel<0, bool > *p_18_saxigp2_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp2_arlock.bind(*p_18_saxigp2_arlock);
        (*_glb_hdl_sc_channel_map)[25374].first = 1;
        (*_glb_hdl_sc_channel_map)[25374].second.push_front(p_18_saxigp2_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_saxigp2_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->saxigp2_arcache.bind(*p_18_saxigp2_arcache);
        (*_glb_hdl_sc_channel_map)[25372].first = 3;
        (*_glb_hdl_sc_channel_map)[25372].second.push_front(p_18_saxigp2_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_saxigp2_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->saxigp2_arprot.bind(*p_18_saxigp2_arprot);
        (*_glb_hdl_sc_channel_map)[25375].first = 3;
        (*_glb_hdl_sc_channel_map)[25375].second.push_front(p_18_saxigp2_arprot);
        xsim_sc_channel<0, bool > *p_18_saxigp2_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp2_arvalid.bind(*p_18_saxigp2_arvalid);
        (*_glb_hdl_sc_channel_map)[25379].first = 1;
        (*_glb_hdl_sc_channel_map)[25379].second.push_front(p_18_saxigp2_arvalid);
        xsim_sc_channel<0, bool > *p_18_saxigp2_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp2_arready.bind(*p_18_saxigp2_arready);
        p_18_saxigp2_arready->set_sv_netview_offsetfromdp(12075160);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_saxigp2_rid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->saxigp2_rid.bind(*p_18_saxigp2_rid);
        p_18_saxigp2_rid->set_sv_netview_offsetfromdp(12075216);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_18_saxigp2_rdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_18->saxigp2_rdata.bind(*p_18_saxigp2_rdata);
        p_18_saxigp2_rdata->set_sv_netview_offsetfromdp(12075272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_saxigp2_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->saxigp2_rresp.bind(*p_18_saxigp2_rresp);
        p_18_saxigp2_rresp->set_sv_netview_offsetfromdp(12075328);
        xsim_sc_channel<0, bool > *p_18_saxigp2_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp2_rlast.bind(*p_18_saxigp2_rlast);
        p_18_saxigp2_rlast->set_sv_netview_offsetfromdp(12075384);
        xsim_sc_channel<0, bool > *p_18_saxigp2_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp2_rvalid.bind(*p_18_saxigp2_rvalid);
        p_18_saxigp2_rvalid->set_sv_netview_offsetfromdp(12075440);
        xsim_sc_channel<0, bool > *p_18_saxigp2_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp2_rready.bind(*p_18_saxigp2_rready);
        (*_glb_hdl_sc_channel_map)[25395].first = 1;
        (*_glb_hdl_sc_channel_map)[25395].second.push_front(p_18_saxigp2_rready);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_saxigp2_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->saxigp2_awqos.bind(*p_18_saxigp2_awqos);
        (*_glb_hdl_sc_channel_map)[25386].first = 3;
        (*_glb_hdl_sc_channel_map)[25386].second.push_front(p_18_saxigp2_awqos);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_saxigp2_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->saxigp2_arqos.bind(*p_18_saxigp2_arqos);
        (*_glb_hdl_sc_channel_map)[25376].first = 3;
        (*_glb_hdl_sc_channel_map)[25376].second.push_front(p_18_saxigp2_arqos);
        xsim_sc_channel<0, bool > *p_18_saxihp3_fpd_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxihp3_fpd_aclk.bind(*p_18_saxihp3_fpd_aclk);
        (*_glb_hdl_sc_channel_map)[25435].first = 1;
        (*_glb_hdl_sc_channel_map)[25435].second.push_front(p_18_saxihp3_fpd_aclk);
        xsim_sc_channel<0, bool > *p_18_saxigp5_aruser = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp5_aruser.bind(*p_18_saxigp5_aruser);
        (*_glb_hdl_sc_channel_map)[2033].first = 1;
        (*_glb_hdl_sc_channel_map)[2033].second.push_front(p_18_saxigp5_aruser);
        xsim_sc_channel<0, bool > *p_18_saxigp5_awuser = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp5_awuser.bind(*p_18_saxigp5_awuser);
        (*_glb_hdl_sc_channel_map)[2030].first = 1;
        (*_glb_hdl_sc_channel_map)[2030].second.push_front(p_18_saxigp5_awuser);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_saxigp5_awid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->saxigp5_awid.bind(*p_18_saxigp5_awid);
        (*_glb_hdl_sc_channel_map)[2031].first = 3;
        (*_glb_hdl_sc_channel_map)[2031].second.push_front(p_18_saxigp5_awid);
        xsim_sc_channel<49, sc_dt::sc_bv<49> > *p_18_saxigp5_awaddr = new xsim_sc_channel<49, sc_dt::sc_bv<49> >();
        sc_inst_18->saxigp5_awaddr.bind(*p_18_saxigp5_awaddr);
        (*_glb_hdl_sc_channel_map)[2032].first = 3;
        (*_glb_hdl_sc_channel_map)[2032].second.push_front(p_18_saxigp5_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_saxigp5_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->saxigp5_awlen.bind(*p_18_saxigp5_awlen);
        (*_glb_hdl_sc_channel_map)[25414].first = 3;
        (*_glb_hdl_sc_channel_map)[25414].second.push_front(p_18_saxigp5_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_saxigp5_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->saxigp5_awsize.bind(*p_18_saxigp5_awsize);
        (*_glb_hdl_sc_channel_map)[25419].first = 3;
        (*_glb_hdl_sc_channel_map)[25419].second.push_front(p_18_saxigp5_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_saxigp5_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->saxigp5_awburst.bind(*p_18_saxigp5_awburst);
        (*_glb_hdl_sc_channel_map)[25412].first = 3;
        (*_glb_hdl_sc_channel_map)[25412].second.push_front(p_18_saxigp5_awburst);
        xsim_sc_channel<0, bool > *p_18_saxigp5_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp5_awlock.bind(*p_18_saxigp5_awlock);
        (*_glb_hdl_sc_channel_map)[25415].first = 1;
        (*_glb_hdl_sc_channel_map)[25415].second.push_front(p_18_saxigp5_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_saxigp5_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->saxigp5_awcache.bind(*p_18_saxigp5_awcache);
        (*_glb_hdl_sc_channel_map)[25413].first = 3;
        (*_glb_hdl_sc_channel_map)[25413].second.push_front(p_18_saxigp5_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_saxigp5_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->saxigp5_awprot.bind(*p_18_saxigp5_awprot);
        (*_glb_hdl_sc_channel_map)[25416].first = 3;
        (*_glb_hdl_sc_channel_map)[25416].second.push_front(p_18_saxigp5_awprot);
        xsim_sc_channel<0, bool > *p_18_saxigp5_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp5_awvalid.bind(*p_18_saxigp5_awvalid);
        (*_glb_hdl_sc_channel_map)[25420].first = 1;
        (*_glb_hdl_sc_channel_map)[25420].second.push_front(p_18_saxigp5_awvalid);
        xsim_sc_channel<0, bool > *p_18_saxigp5_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp5_awready.bind(*p_18_saxigp5_awready);
        p_18_saxigp5_awready->set_sv_netview_offsetfromdp(12076336);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_18_saxigp5_wdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_18->saxigp5_wdata.bind(*p_18_saxigp5_wdata);
        (*_glb_hdl_sc_channel_map)[25429].first = 3;
        (*_glb_hdl_sc_channel_map)[25429].second.push_front(p_18_saxigp5_wdata);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_18_saxigp5_wstrb = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_18->saxigp5_wstrb.bind(*p_18_saxigp5_wstrb);
        (*_glb_hdl_sc_channel_map)[25432].first = 3;
        (*_glb_hdl_sc_channel_map)[25432].second.push_front(p_18_saxigp5_wstrb);
        xsim_sc_channel<0, bool > *p_18_saxigp5_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp5_wlast.bind(*p_18_saxigp5_wlast);
        (*_glb_hdl_sc_channel_map)[25430].first = 1;
        (*_glb_hdl_sc_channel_map)[25430].second.push_front(p_18_saxigp5_wlast);
        xsim_sc_channel<0, bool > *p_18_saxigp5_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp5_wvalid.bind(*p_18_saxigp5_wvalid);
        (*_glb_hdl_sc_channel_map)[25433].first = 1;
        (*_glb_hdl_sc_channel_map)[25433].second.push_front(p_18_saxigp5_wvalid);
        xsim_sc_channel<0, bool > *p_18_saxigp5_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp5_wready.bind(*p_18_saxigp5_wready);
        p_18_saxigp5_wready->set_sv_netview_offsetfromdp(12076616);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_saxigp5_bid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->saxigp5_bid.bind(*p_18_saxigp5_bid);
        p_18_saxigp5_bid->set_sv_netview_offsetfromdp(12076672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_saxigp5_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->saxigp5_bresp.bind(*p_18_saxigp5_bresp);
        p_18_saxigp5_bresp->set_sv_netview_offsetfromdp(12076728);
        xsim_sc_channel<0, bool > *p_18_saxigp5_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp5_bvalid.bind(*p_18_saxigp5_bvalid);
        p_18_saxigp5_bvalid->set_sv_netview_offsetfromdp(12076784);
        xsim_sc_channel<0, bool > *p_18_saxigp5_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp5_bready.bind(*p_18_saxigp5_bready);
        (*_glb_hdl_sc_channel_map)[25421].first = 1;
        (*_glb_hdl_sc_channel_map)[25421].second.push_front(p_18_saxigp5_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_saxigp5_arid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->saxigp5_arid.bind(*p_18_saxigp5_arid);
        (*_glb_hdl_sc_channel_map)[2034].first = 3;
        (*_glb_hdl_sc_channel_map)[2034].second.push_front(p_18_saxigp5_arid);
        xsim_sc_channel<49, sc_dt::sc_bv<49> > *p_18_saxigp5_araddr = new xsim_sc_channel<49, sc_dt::sc_bv<49> >();
        sc_inst_18->saxigp5_araddr.bind(*p_18_saxigp5_araddr);
        (*_glb_hdl_sc_channel_map)[2035].first = 3;
        (*_glb_hdl_sc_channel_map)[2035].second.push_front(p_18_saxigp5_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_saxigp5_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->saxigp5_arlen.bind(*p_18_saxigp5_arlen);
        (*_glb_hdl_sc_channel_map)[25405].first = 3;
        (*_glb_hdl_sc_channel_map)[25405].second.push_front(p_18_saxigp5_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_saxigp5_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->saxigp5_arsize.bind(*p_18_saxigp5_arsize);
        (*_glb_hdl_sc_channel_map)[25410].first = 3;
        (*_glb_hdl_sc_channel_map)[25410].second.push_front(p_18_saxigp5_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_saxigp5_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->saxigp5_arburst.bind(*p_18_saxigp5_arburst);
        (*_glb_hdl_sc_channel_map)[25403].first = 3;
        (*_glb_hdl_sc_channel_map)[25403].second.push_front(p_18_saxigp5_arburst);
        xsim_sc_channel<0, bool > *p_18_saxigp5_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp5_arlock.bind(*p_18_saxigp5_arlock);
        (*_glb_hdl_sc_channel_map)[25406].first = 1;
        (*_glb_hdl_sc_channel_map)[25406].second.push_front(p_18_saxigp5_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_saxigp5_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->saxigp5_arcache.bind(*p_18_saxigp5_arcache);
        (*_glb_hdl_sc_channel_map)[25404].first = 3;
        (*_glb_hdl_sc_channel_map)[25404].second.push_front(p_18_saxigp5_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_saxigp5_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->saxigp5_arprot.bind(*p_18_saxigp5_arprot);
        (*_glb_hdl_sc_channel_map)[25407].first = 3;
        (*_glb_hdl_sc_channel_map)[25407].second.push_front(p_18_saxigp5_arprot);
        xsim_sc_channel<0, bool > *p_18_saxigp5_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp5_arvalid.bind(*p_18_saxigp5_arvalid);
        (*_glb_hdl_sc_channel_map)[25411].first = 1;
        (*_glb_hdl_sc_channel_map)[25411].second.push_front(p_18_saxigp5_arvalid);
        xsim_sc_channel<0, bool > *p_18_saxigp5_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp5_arready.bind(*p_18_saxigp5_arready);
        p_18_saxigp5_arready->set_sv_netview_offsetfromdp(12077400);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_saxigp5_rid = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->saxigp5_rid.bind(*p_18_saxigp5_rid);
        p_18_saxigp5_rid->set_sv_netview_offsetfromdp(12077456);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_18_saxigp5_rdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_18->saxigp5_rdata.bind(*p_18_saxigp5_rdata);
        p_18_saxigp5_rdata->set_sv_netview_offsetfromdp(12077512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_saxigp5_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->saxigp5_rresp.bind(*p_18_saxigp5_rresp);
        p_18_saxigp5_rresp->set_sv_netview_offsetfromdp(12077568);
        xsim_sc_channel<0, bool > *p_18_saxigp5_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp5_rlast.bind(*p_18_saxigp5_rlast);
        p_18_saxigp5_rlast->set_sv_netview_offsetfromdp(12077624);
        xsim_sc_channel<0, bool > *p_18_saxigp5_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp5_rvalid.bind(*p_18_saxigp5_rvalid);
        p_18_saxigp5_rvalid->set_sv_netview_offsetfromdp(12077680);
        xsim_sc_channel<0, bool > *p_18_saxigp5_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxigp5_rready.bind(*p_18_saxigp5_rready);
        (*_glb_hdl_sc_channel_map)[25426].first = 1;
        (*_glb_hdl_sc_channel_map)[25426].second.push_front(p_18_saxigp5_rready);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_saxigp5_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->saxigp5_awqos.bind(*p_18_saxigp5_awqos);
        (*_glb_hdl_sc_channel_map)[25417].first = 3;
        (*_glb_hdl_sc_channel_map)[25417].second.push_front(p_18_saxigp5_awqos);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_saxigp5_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->saxigp5_arqos.bind(*p_18_saxigp5_arqos);
        (*_glb_hdl_sc_channel_map)[25408].first = 3;
        (*_glb_hdl_sc_channel_map)[25408].second.push_front(p_18_saxigp5_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_pl_ps_irq0 = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->pl_ps_irq0.bind(*p_18_pl_ps_irq0);
        (*_glb_hdl_sc_channel_map)[25337].first = 3;
        (*_glb_hdl_sc_channel_map)[25337].second.push_front(p_18_pl_ps_irq0);
        xsim_sc_channel<0, bool > *p_18_pl_resetn0 = new xsim_sc_channel<0, bool >();
        sc_inst_18->pl_resetn0.bind(*p_18_pl_resetn0);
        p_18_pl_resetn0->set_sv_netview_offsetfromdp(12077960);
        xsim_sc_channel<0, bool > *p_18_pl_clk0 = new xsim_sc_channel<0, bool >();
        sc_inst_18->pl_clk0.bind(*p_18_pl_clk0);
        p_18_pl_clk0->set_sv_netview_offsetfromdp(12078016);
        sc_inst_19 = new zcu104_base_sci(".zcu104_base_wrapper.zcu104_base_i.zcu104_base_sci_inst");
        sc_inst_19->xsim_set_dbg_index(467);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
    }
