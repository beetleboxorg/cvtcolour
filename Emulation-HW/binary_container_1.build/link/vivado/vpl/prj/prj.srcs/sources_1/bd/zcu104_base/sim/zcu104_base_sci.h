//File Automatically generated by SystemC Netlister Time
#ifndef ZCU104_BASE_SCI_H
#define ZCU104_BASE_SCI_H
#include "systemc.h"
#include "xtlm.h"
#include "utils/xtlm_aximm_transview.h"
#include "utils/xtlm_aximm_transaction_logger.h"
#include "utils/xtlm_axis_transaction_logger.h"
#include "zcu104_base_auto_cc_0_sc.h"
#include "zcu104_base_auto_ds_0_sc.h"
#include "zcu104_base_m01_regslice_3_sc.h"
#include "zcu104_base_xbar_2_sc.h"
#include "zcu104_base_auto_cc_1_sc.h"
#include "zcu104_base_auto_pc_1_sc.h"
#include "zcu104_base_m01_regslice_4_sc.h"
#include "zcu104_base_auto_cc_2_sc.h"
#include "zcu104_base_m02_regslice_0_sc.h"
#include "zcu104_base_xbar_0_sc.h"
#include "zcu104_base_auto_pc_0_sc.h"
#include "zcu104_base_dpa_mon0_0_0_sc.h"
#include "zcu104_base_dpa_hub_0_sc.h"
#include "zcu104_base_dpa_mon0_1_0_sc.h"
#include "zcu104_base_dpa_mon1_0_0_sc.h"
#include "zcu104_base_dpa_mon1_1_0_sc.h"
#include "zcu104_base_auto_us_0_sc.h"
#include "zcu104_base_ps_e_0_sc.h"

class zcu104_base_sci : public xsc::utils::xsc_sim_conn_base {

public:
	//Exported sockets declaration
	
	//Constructor for the module
	zcu104_base_sci(const sc_module_name& module_name);
	SC_HAS_PROCESS(zcu104_base_sci);
	//Destructor for the module
	~zcu104_base_sci();
	
	void initConnModule();

protected:
void before_end_of_elaboration();

private:
	zcu104_base_sci(const zcu104_base_sci&);
	const zcu104_base_sci& operator=(const zcu104_base_sci&);
};
#endif
