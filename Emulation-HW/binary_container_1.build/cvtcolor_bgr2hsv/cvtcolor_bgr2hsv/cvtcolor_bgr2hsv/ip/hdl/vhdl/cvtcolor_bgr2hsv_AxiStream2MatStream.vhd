-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cvtcolor_bgr2hsv_AxiStream2MatStream is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ldata1_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    ldata1_empty_n : IN STD_LOGIC;
    ldata1_read : OUT STD_LOGIC;
    imgInput0_413_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    imgInput0_413_full_n : IN STD_LOGIC;
    imgInput0_413_write : OUT STD_LOGIC;
    rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    rows_empty_n : IN STD_LOGIC;
    rows_read : OUT STD_LOGIC;
    cols_bound_per_npc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    cols_bound_per_npc_empty_n : IN STD_LOGIC;
    cols_bound_per_npc_read : OUT STD_LOGIC;
    last_blk_width_dout : IN STD_LOGIC_VECTOR (3 downto 0);
    last_blk_width_empty_n : IN STD_LOGIC;
    last_blk_width_read : OUT STD_LOGIC;
    ap_ext_blocking_n : OUT STD_LOGIC;
    ap_str_blocking_n : OUT STD_LOGIC;
    ap_int_blocking_n : OUT STD_LOGIC );
end;


architecture behav of cvtcolor_bgr2hsv_AxiStream2MatStream is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_200 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv10_1FF : STD_LOGIC_VECTOR (9 downto 0) := "0111111111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv10_1E8 : STD_LOGIC_VECTOR (9 downto 0) := "0111101000";
    constant ap_const_lv10_217 : STD_LOGIC_VECTOR (9 downto 0) := "1000010111";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv10_201 : STD_LOGIC_VECTOR (9 downto 0) := "1000000001";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv512_lc_2 : STD_LOGIC_VECTOR (511 downto 0) := "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv24_FFFFFF : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111111111111";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ldata1_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln1038_reg_797 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1049_reg_827 : STD_LOGIC_VECTOR (0 downto 0);
    signal imgInput0_413_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal icmp_ln1038_reg_797_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal rows_blk_n : STD_LOGIC;
    signal cols_bound_per_npc_blk_n : STD_LOGIC;
    signal last_blk_width_blk_n : STD_LOGIC;
    signal j_reg_141 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_152 : STD_LOGIC_VECTOR (30 downto 0);
    signal rows_2_reg_760 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal cols_bound_per_npc_2_reg_765 : STD_LOGIC_VECTOR (31 downto 0);
    signal last_blk_width_1_reg_771 : STD_LOGIC_VECTOR (3 downto 0);
    signal bound_fu_195_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_reg_777 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal sub_i_fu_199_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_i_reg_782 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub2_i_fu_204_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub2_i_reg_787 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1057_fu_210_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1057_reg_792 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln1038_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op87_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln1038_fu_225_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal rem_load_reg_806 : STD_LOGIC_VECTOR (31 downto 0);
    signal bLast_fu_234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bLast_reg_817 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1044_fu_246_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1044_reg_822 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln1049_fu_265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1049_reg_827_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_2_fu_299_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln674_7_fu_394_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln674_7_reg_836 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln674_3_fu_404_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln674_3_reg_841 : STD_LOGIC_VECTOR (511 downto 0);
    signal icmp_ln1050_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1050_reg_846 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1051_fu_415_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln1051_reg_851 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln674_2_fu_490_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln674_2_reg_856 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln674_fu_500_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln674_reg_861 : STD_LOGIC_VECTOR (511 downto 0);
    signal icmp_ln414_fu_555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln414_reg_866 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln414_fu_560_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln414_reg_872 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln414_1_fu_563_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln414_1_reg_877 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln414_2_fu_589_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln414_2_reg_882 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln414_fu_599_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln414_reg_887 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_phi_mux_empty_phi_fu_166_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_3_fu_738_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter2_empty_reg_163 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln358_fu_624_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal rem_fu_102 : STD_LOGIC_VECTOR (31 downto 0);
    signal rem_2_fu_271_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal rem_1_fu_282_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_fu_106 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal last_blk_width_cast1_cast_i_cast_cast_cast_fu_188_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal last_blk_width_cast1_cast_i_cast_cast_cast_cast_fu_191_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1027_fu_216_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xf_bits_per_clock_fu_239_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ptr_width_minus_fu_254_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1044_fu_250_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1045_fu_261_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1061_fu_293_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1057_fu_313_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1057_fu_319_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_173_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1057_fu_323_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_1_fu_334_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln674_2_fu_338_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln674_1_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln674_4_fu_352_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln674_6_fu_364_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_3_fu_342_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal sub_ln674_5_fu_358_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln674_3_fu_370_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln674_5_fu_386_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln674_4_fu_378_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln674_3_fu_400_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_fu_418_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln674_fu_434_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln674_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln674_fu_448_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln674_1_fu_460_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1_fu_438_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal sub_ln674_fu_454_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln674_fu_466_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln674_2_fu_482_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln674_1_fu_474_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln674_fu_496_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln1044_1_fu_307_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1054_fu_506_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln1054_fu_520_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1054_1_fu_516_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln674_3_fu_523_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln674_1_fu_529_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln674_2_fu_535_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln674_2_fu_539_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_2_fu_545_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal sext_ln1054_fu_512_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln414_1_fu_567_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln414_fu_573_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln414_2_fu_581_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Repl2_1_fu_551_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln414_1_fu_595_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln674_4_fu_610_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln674_4_fu_613_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_4_fu_619_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln674_1_fu_629_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln674_1_fu_632_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_s_fu_638_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal sub_ln414_fu_647_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln414_fu_652_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Repl2_s_fu_643_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal lshr_ln414_fu_656_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_1_fu_662_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln414_1_fu_675_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_2_fu_687_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln414_2_fu_680_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln414_3_fu_684_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln414_1_fu_702_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal lshr_ln414_1_fu_708_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal and_ln414_fu_714_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_2_fu_668_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal xor_ln414_fu_720_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln414_3_fu_696_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal and_ln414_1_fu_726_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal and_ln414_2_fu_732_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_int_blocking_cur_n : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component cvtcolor_bgr2hsv_mul_32s_32s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mul_32s_32s_32_1_1_U36 : component cvtcolor_bgr2hsv_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => cols_bound_per_npc_2_reg_765,
        din1 => rows_2_reg_760,
        dout => bound_fu_195_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln1038_fu_220_p2 = ap_const_lv1_1))) then 
                i_reg_152 <= add_ln1038_fu_225_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                i_reg_152 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    j_reg_141_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln1038_fu_220_p2 = ap_const_lv1_1))) then 
                j_reg_141 <= j_2_fu_299_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                j_reg_141 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    p_Val2_s_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1049_reg_827 = ap_const_lv1_1) and (icmp_ln1038_reg_797 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                p_Val2_s_fu_106 <= ldata1_dout;
            elsif ((not(((ap_start = ap_const_logic_0) or (last_blk_width_empty_n = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_Val2_s_fu_106 <= ap_const_lv512_lc_1;
            end if; 
        end if;
    end process;

    rem_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1049_fu_265_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln1038_fu_220_p2 = ap_const_lv1_1))) then 
                rem_fu_102 <= rem_1_fu_282_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1049_fu_265_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln1038_fu_220_p2 = ap_const_lv1_1))) then 
                rem_fu_102 <= rem_2_fu_271_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (last_blk_width_empty_n = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                rem_fu_102 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln1057_reg_792 <= add_ln1057_fu_210_p2;
                bound_reg_777 <= bound_fu_195_p2;
                sub2_i_reg_787 <= sub2_i_fu_204_p2;
                sub_i_reg_782 <= sub_i_fu_199_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1038_fu_220_p2 = ap_const_lv1_1))) then
                bLast_reg_817 <= bLast_fu_234_p2;
                icmp_ln1049_reg_827 <= icmp_ln1049_fu_265_p2;
                rem_load_reg_806 <= rem_fu_102;
                sext_ln1044_reg_822 <= sext_ln1044_fu_246_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (last_blk_width_empty_n = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                cols_bound_per_npc_2_reg_765 <= cols_bound_per_npc_dout;
                last_blk_width_1_reg_771 <= last_blk_width_dout;
                rows_2_reg_760 <= rows_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1038_reg_797 <= icmp_ln1038_fu_220_p2;
                icmp_ln1038_reg_797_pp0_iter1_reg <= icmp_ln1038_reg_797;
                icmp_ln1049_reg_827_pp0_iter1_reg <= icmp_ln1049_reg_827;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1049_reg_827 = ap_const_lv1_1) and (icmp_ln1038_reg_797 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1050_reg_846 <= icmp_ln1050_fu_410_p2;
                icmp_ln414_reg_866 <= icmp_ln414_fu_555_p2;
                lshr_ln674_reg_861 <= lshr_ln674_fu_500_p2;
                shl_ln414_reg_887 <= shl_ln414_fu_599_p2;
                sub_ln414_2_reg_882 <= sub_ln414_2_fu_589_p2;
                sub_ln674_2_reg_856 <= sub_ln674_2_fu_490_p2;
                trunc_ln1051_reg_851 <= trunc_ln1051_fu_415_p1;
                trunc_ln414_1_reg_877 <= trunc_ln414_1_fu_563_p1;
                trunc_ln414_reg_872 <= trunc_ln414_fu_560_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1049_reg_827 = ap_const_lv1_0) and (icmp_ln1038_reg_797 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                lshr_ln674_3_reg_841 <= lshr_ln674_3_fu_404_p2;
                sub_ln674_7_reg_836 <= sub_ln674_7_fu_394_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, rows_empty_n, cols_bound_per_npc_empty_n, last_blk_width_empty_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, icmp_ln1038_fu_220_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (last_blk_width_empty_n = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln1038_fu_220_p2 = ap_const_lv1_0))) and not(((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln1038_fu_220_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln1038_fu_225_p2 <= std_logic_vector(unsigned(i_reg_152) + unsigned(ap_const_lv31_1));
    add_ln1054_fu_506_p2 <= std_logic_vector(signed(ap_const_lv6_3F) + signed(zext_ln1044_1_fu_307_p1));
    add_ln1057_fu_210_p2 <= std_logic_vector(unsigned(last_blk_width_cast1_cast_i_cast_cast_cast_cast_fu_191_p1) + unsigned(ap_const_lv10_1FF));
    add_ln1061_fu_293_p2 <= std_logic_vector(unsigned(j_reg_141) + unsigned(ap_const_lv32_1));
    add_ln674_1_fu_529_p2 <= std_logic_vector(unsigned(ap_const_lv10_1FF) + unsigned(sub_ln674_3_fu_523_p2));
    add_ln674_fu_448_p2 <= std_logic_vector(signed(ap_const_lv10_201) + signed(trunc_ln674_fu_434_p1));
    and_ln414_1_fu_726_p2 <= (xor_ln414_fu_720_p2 and p_Val2_2_fu_668_p3);
    and_ln414_2_fu_732_p2 <= (select_ln414_3_fu_696_p3 and and_ln414_fu_714_p2);
    and_ln414_fu_714_p2 <= (shl_ln414_1_fu_702_p2 and lshr_ln414_1_fu_708_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state6 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ldata1_empty_n, imgInput0_413_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, icmp_ln1038_reg_797_pp0_iter1_reg, ap_predicate_op87_read_state4)
    begin
                ap_block_pp0_stage0_01001 <= (((icmp_ln1038_reg_797_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (imgInput0_413_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ldata1_empty_n = ap_const_logic_0) and (ap_predicate_op87_read_state4 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ldata1_empty_n, imgInput0_413_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, icmp_ln1038_reg_797_pp0_iter1_reg, ap_predicate_op87_read_state4)
    begin
                ap_block_pp0_stage0_11001 <= (((icmp_ln1038_reg_797_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (imgInput0_413_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ldata1_empty_n = ap_const_logic_0) and (ap_predicate_op87_read_state4 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ldata1_empty_n, imgInput0_413_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, icmp_ln1038_reg_797_pp0_iter1_reg, ap_predicate_op87_read_state4)
    begin
                ap_block_pp0_stage0_subdone <= (((icmp_ln1038_reg_797_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (imgInput0_413_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ldata1_empty_n = ap_const_logic_0) and (ap_predicate_op87_read_state4 = ap_const_boolean_1)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, rows_empty_n, cols_bound_per_npc_empty_n, last_blk_width_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (last_blk_width_empty_n = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(ldata1_empty_n, ap_predicate_op87_read_state4)
    begin
                ap_block_state4_pp0_stage0_iter1 <= ((ldata1_empty_n = ap_const_logic_0) and (ap_predicate_op87_read_state4 = ap_const_boolean_1));
    end process;


    ap_block_state5_pp0_stage0_iter2_assign_proc : process(imgInput0_413_full_n, icmp_ln1038_reg_797_pp0_iter1_reg)
    begin
                ap_block_state5_pp0_stage0_iter2 <= ((icmp_ln1038_reg_797_pp0_iter1_reg = ap_const_lv1_1) and (imgInput0_413_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln1038_fu_220_p2)
    begin
        if ((icmp_ln1038_fu_220_p2 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_ext_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_int_blocking_cur_n <= (rows_blk_n and ldata1_blk_n and last_blk_width_blk_n and imgInput0_413_blk_n and cols_bound_per_npc_blk_n);
    ap_int_blocking_n <= (ap_int_blocking_cur_n and ap_const_logic_1);

    ap_phi_mux_empty_phi_fu_166_p4_assign_proc : process(icmp_ln1038_reg_797_pp0_iter1_reg, icmp_ln1049_reg_827_pp0_iter1_reg, p_Result_3_fu_738_p2, ap_phi_reg_pp0_iter2_empty_reg_163, trunc_ln358_fu_624_p1)
    begin
        if ((icmp_ln1038_reg_797_pp0_iter1_reg = ap_const_lv1_1)) then
            if ((icmp_ln1049_reg_827_pp0_iter1_reg = ap_const_lv1_0)) then 
                ap_phi_mux_empty_phi_fu_166_p4 <= trunc_ln358_fu_624_p1;
            elsif ((icmp_ln1049_reg_827_pp0_iter1_reg = ap_const_lv1_1)) then 
                ap_phi_mux_empty_phi_fu_166_p4 <= p_Result_3_fu_738_p2;
            else 
                ap_phi_mux_empty_phi_fu_166_p4 <= ap_phi_reg_pp0_iter2_empty_reg_163;
            end if;
        else 
            ap_phi_mux_empty_phi_fu_166_p4 <= ap_phi_reg_pp0_iter2_empty_reg_163;
        end if; 
    end process;

    ap_phi_reg_pp0_iter2_empty_reg_163 <= "XXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op87_read_state4_assign_proc : process(icmp_ln1038_reg_797, icmp_ln1049_reg_827)
    begin
                ap_predicate_op87_read_state4 <= ((icmp_ln1049_reg_827 = ap_const_lv1_1) and (icmp_ln1038_reg_797 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_str_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);
    bLast_fu_234_p2 <= "1" when (j_reg_141 = sub_i_reg_782) else "0";

    cols_bound_per_npc_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, cols_bound_per_npc_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_bound_per_npc_blk_n <= cols_bound_per_npc_empty_n;
        else 
            cols_bound_per_npc_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    cols_bound_per_npc_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rows_empty_n, cols_bound_per_npc_empty_n, last_blk_width_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (last_blk_width_empty_n = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_bound_per_npc_read <= ap_const_logic_1;
        else 
            cols_bound_per_npc_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_173_p2 <= std_logic_vector(unsigned(ap_const_lv32_200) - unsigned(rem_load_reg_806));
    icmp_ln1038_fu_220_p2 <= "1" when (signed(zext_ln1027_fu_216_p1) < signed(bound_reg_777)) else "0";
    icmp_ln1049_fu_265_p2 <= "1" when (signed(rem_fu_102) < signed(zext_ln1044_fu_250_p1)) else "0";
    icmp_ln1050_fu_410_p2 <= "1" when (rem_load_reg_806 = ap_const_lv32_0) else "0";
    icmp_ln414_fu_555_p2 <= "1" when (unsigned(rem_load_reg_806) > unsigned(sext_ln1054_fu_512_p1)) else "0";
    icmp_ln674_1_fu_328_p2 <= "1" when (unsigned(grp_fu_173_p2) > unsigned(sub_ln1057_fu_323_p2)) else "0";
    icmp_ln674_fu_428_p2 <= "0" when (tmp_fu_418_p4 = ap_const_lv23_0) else "1";

    imgInput0_413_blk_n_assign_proc : process(imgInput0_413_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln1038_reg_797_pp0_iter1_reg)
    begin
        if (((icmp_ln1038_reg_797_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            imgInput0_413_blk_n <= imgInput0_413_full_n;
        else 
            imgInput0_413_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    imgInput0_413_din <= ap_phi_mux_empty_phi_fu_166_p4;

    imgInput0_413_write_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1038_reg_797_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln1038_reg_797_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            imgInput0_413_write <= ap_const_logic_1;
        else 
            imgInput0_413_write <= ap_const_logic_0;
        end if; 
    end process;

    j_2_fu_299_p3 <= 
        ap_const_lv32_0 when (bLast_fu_234_p2(0) = '1') else 
        add_ln1061_fu_293_p2;

    last_blk_width_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, last_blk_width_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            last_blk_width_blk_n <= last_blk_width_empty_n;
        else 
            last_blk_width_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    last_blk_width_cast1_cast_i_cast_cast_cast_cast_fu_191_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(last_blk_width_cast1_cast_i_cast_cast_cast_fu_188_p1),10));
        last_blk_width_cast1_cast_i_cast_cast_cast_fu_188_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(last_blk_width_1_reg_771),5));


    last_blk_width_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rows_empty_n, cols_bound_per_npc_empty_n, last_blk_width_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (last_blk_width_empty_n = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            last_blk_width_read <= ap_const_logic_1;
        else 
            last_blk_width_read <= ap_const_logic_0;
        end if; 
    end process;


    ldata1_blk_n_assign_proc : process(ldata1_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln1038_reg_797, icmp_ln1049_reg_827)
    begin
        if (((icmp_ln1049_reg_827 = ap_const_lv1_1) and (icmp_ln1038_reg_797 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ldata1_blk_n <= ldata1_empty_n;
        else 
            ldata1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ldata1_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op87_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op87_read_state4 = ap_const_boolean_1))) then 
            ldata1_read <= ap_const_logic_1;
        else 
            ldata1_read <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln414_1_fu_708_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv24_FFFFFF),to_integer(unsigned('0' & zext_ln414_3_fu_684_p1(24-1 downto 0)))));
    lshr_ln414_fu_656_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv24_FFFFFF),to_integer(unsigned('0' & zext_ln414_fu_652_p1(24-1 downto 0)))));
    lshr_ln674_1_fu_632_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv512_lc_2),to_integer(unsigned('0' & zext_ln674_1_fu_629_p1(31-1 downto 0)))));
    lshr_ln674_2_fu_539_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv512_lc_2),to_integer(unsigned('0' & zext_ln674_2_fu_535_p1(31-1 downto 0)))));
    lshr_ln674_3_fu_404_p2 <= std_logic_vector(shift_right(unsigned(select_ln674_4_fu_378_p3),to_integer(unsigned('0' & zext_ln674_3_fu_400_p1(31-1 downto 0)))));
    lshr_ln674_4_fu_613_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv512_lc_2),to_integer(unsigned('0' & zext_ln674_4_fu_610_p1(31-1 downto 0)))));
    lshr_ln674_fu_500_p2 <= std_logic_vector(shift_right(unsigned(select_ln674_1_fu_474_p3),to_integer(unsigned('0' & zext_ln674_fu_496_p1(31-1 downto 0)))));
    p_Repl2_1_fu_551_p1 <= p_Result_2_fu_545_p2(24 - 1 downto 0);
    p_Repl2_s_fu_643_p1 <= p_Result_s_fu_638_p2(24 - 1 downto 0);
    p_Result_1_fu_662_p2 <= (p_Repl2_s_fu_643_p1 and lshr_ln414_fu_656_p2);
    p_Result_2_fu_545_p2 <= (lshr_ln674_2_fu_539_p2 and ldata1_dout);
    p_Result_3_fu_738_p2 <= (and_ln414_2_fu_732_p2 or and_ln414_1_fu_726_p2);
    p_Result_4_fu_619_p2 <= (lshr_ln674_4_fu_613_p2 and lshr_ln674_3_reg_841);
    p_Result_s_fu_638_p2 <= (lshr_ln674_reg_861 and lshr_ln674_1_fu_632_p2);
    p_Val2_2_fu_668_p3 <= 
        ap_const_lv24_0 when (icmp_ln1050_reg_846(0) = '1') else 
        p_Result_1_fu_662_p2;
    ptr_width_minus_fu_254_p3 <= 
        sub2_i_reg_787 when (bLast_fu_234_p2(0) = '1') else 
        ap_const_lv10_1E8;
    rem_1_fu_282_p2 <= std_logic_vector(unsigned(rem_fu_102) + unsigned(zext_ln1045_fu_261_p1));
    rem_2_fu_271_p2 <= std_logic_vector(unsigned(rem_fu_102) - unsigned(zext_ln1044_fu_250_p1));

    rows_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rows_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_blk_n <= rows_empty_n;
        else 
            rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rows_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rows_empty_n, cols_bound_per_npc_empty_n, last_blk_width_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (last_blk_width_empty_n = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_read <= ap_const_logic_1;
        else 
            rows_read <= ap_const_logic_0;
        end if; 
    end process;

    select_ln1057_fu_313_p3 <= 
        add_ln1057_reg_792 when (bLast_reg_817(0) = '1') else 
        ap_const_lv10_217;
    select_ln414_1_fu_675_p3 <= 
        trunc_ln414_1_reg_877 when (icmp_ln414_reg_866(0) = '1') else 
        trunc_ln414_reg_872;
    select_ln414_2_fu_581_p3 <= 
        sub_ln414_1_fu_567_p2 when (icmp_ln414_fu_555_p2(0) = '1') else 
        trunc_ln414_fu_560_p1;
    select_ln414_3_fu_696_p3 <= 
        tmp_2_fu_687_p4 when (icmp_ln414_reg_866(0) = '1') else 
        shl_ln414_reg_887;
    select_ln414_fu_573_p3 <= 
        trunc_ln414_fu_560_p1 when (icmp_ln414_fu_555_p2(0) = '1') else 
        trunc_ln414_1_fu_563_p1;
    select_ln674_1_fu_474_p3 <= 
        tmp_1_fu_438_p4 when (icmp_ln674_fu_428_p2(0) = '1') else 
        p_Val2_s_fu_106;
    select_ln674_2_fu_482_p3 <= 
        sub_ln674_fu_454_p2 when (icmp_ln674_fu_428_p2(0) = '1') else 
        trunc_ln674_fu_434_p1;
    select_ln674_3_fu_370_p3 <= 
        sub_ln674_4_fu_352_p2 when (icmp_ln674_1_fu_328_p2(0) = '1') else 
        sub_ln674_6_fu_364_p2;
    select_ln674_4_fu_378_p3 <= 
        tmp_3_fu_342_p4 when (icmp_ln674_1_fu_328_p2(0) = '1') else 
        p_Val2_s_fu_106;
    select_ln674_5_fu_386_p3 <= 
        sub_ln674_5_fu_358_p2 when (icmp_ln674_1_fu_328_p2(0) = '1') else 
        trunc_ln674_1_fu_334_p1;
    select_ln674_fu_466_p3 <= 
        add_ln674_fu_448_p2 when (icmp_ln674_fu_428_p2(0) = '1') else 
        sub_ln674_1_fu_460_p2;
        sext_ln1044_fu_246_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xf_bits_per_clock_fu_239_p3),5));

        sext_ln1054_1_fu_516_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1054_fu_506_p2),10));

        sext_ln1054_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1054_fu_506_p2),32));

    shl_ln414_1_fu_702_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv24_FFFFFF),to_integer(unsigned('0' & zext_ln414_2_fu_680_p1(24-1 downto 0)))));
    shl_ln414_fu_599_p2 <= std_logic_vector(shift_left(unsigned(p_Repl2_1_fu_551_p1),to_integer(unsigned('0' & zext_ln414_1_fu_595_p1(24-1 downto 0)))));
    sub2_i_fu_204_p2 <= std_logic_vector(signed(ap_const_lv10_200) - signed(last_blk_width_cast1_cast_i_cast_cast_cast_cast_fu_191_p1));
    sub_i_fu_199_p2 <= std_logic_vector(signed(cols_bound_per_npc_2_reg_765) + signed(ap_const_lv32_FFFFFFFF));
    sub_ln1057_fu_323_p2 <= std_logic_vector(unsigned(zext_ln1057_fu_319_p1) - unsigned(rem_load_reg_806));
    sub_ln414_1_fu_567_p2 <= std_logic_vector(signed(ap_const_lv5_17) - signed(trunc_ln414_fu_560_p1));
    sub_ln414_2_fu_589_p2 <= std_logic_vector(signed(ap_const_lv5_17) - signed(select_ln414_fu_573_p3));
    sub_ln414_fu_647_p2 <= std_logic_vector(signed(ap_const_lv5_18) - signed(trunc_ln1051_reg_851));
    sub_ln674_1_fu_460_p2 <= std_logic_vector(unsigned(ap_const_lv10_1FF) - unsigned(trunc_ln674_fu_434_p1));
    sub_ln674_2_fu_490_p2 <= std_logic_vector(unsigned(ap_const_lv10_1FF) - unsigned(select_ln674_fu_466_p3));
    sub_ln674_3_fu_523_p2 <= std_logic_vector(unsigned(trunc_ln1054_fu_520_p1) - unsigned(sext_ln1054_1_fu_516_p1));
    sub_ln674_4_fu_352_p2 <= std_logic_vector(unsigned(trunc_ln674_1_fu_334_p1) - unsigned(trunc_ln674_2_fu_338_p1));
    sub_ln674_5_fu_358_p2 <= std_logic_vector(unsigned(ap_const_lv10_1FF) - unsigned(trunc_ln674_1_fu_334_p1));
    sub_ln674_6_fu_364_p2 <= std_logic_vector(unsigned(trunc_ln674_2_fu_338_p1) - unsigned(trunc_ln674_1_fu_334_p1));
    sub_ln674_7_fu_394_p2 <= std_logic_vector(unsigned(ap_const_lv10_1FF) - unsigned(select_ln674_3_fu_370_p3));
    sub_ln674_fu_454_p2 <= std_logic_vector(unsigned(ap_const_lv10_1FF) - unsigned(trunc_ln674_fu_434_p1));
    
    tmp_1_fu_438_p4_proc : process(p_Val2_s_fu_106)
    variable vlo_cpy : STD_LOGIC_VECTOR(512+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(512+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(512 - 1 downto 0);
    variable tmp_1_fu_438_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(512 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(512 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(512 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(9 - 1 downto 0) := ap_const_lv32_1FF(9 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(9 - 1 downto 0) := ap_const_lv32_0(9 - 1 downto 0);
        v0_cpy := p_Val2_s_fu_106;
        if (vlo_cpy(9 - 1 downto 0) > vhi_cpy(9 - 1 downto 0)) then
            vhi_cpy(9-1 downto 0) := std_logic_vector(512-1-unsigned(ap_const_lv32_0(9-1 downto 0)));
            vlo_cpy(9-1 downto 0) := std_logic_vector(512-1-unsigned(ap_const_lv32_1FF(9-1 downto 0)));
            for tmp_1_fu_438_p4_i in 0 to 512-1 loop
                v0_cpy(tmp_1_fu_438_p4_i) := p_Val2_s_fu_106(512-1-tmp_1_fu_438_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(9-1 downto 0)))));

        section := (others=>'0');
        section(9-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(9-1 downto 0)) - unsigned(vlo_cpy(9-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(512-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_1_fu_438_p4 <= resvalue(512-1 downto 0);
    end process;

    
    tmp_2_fu_687_p4_proc : process(shl_ln414_reg_887)
    variable vlo_cpy : STD_LOGIC_VECTOR(24+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(24+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(24 - 1 downto 0);
    variable tmp_2_fu_687_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(24 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(24 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(24 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_17(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := shl_ln414_reg_887;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(24-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(24-1-unsigned(ap_const_lv32_17(5-1 downto 0)));
            for tmp_2_fu_687_p4_i in 0 to 24-1 loop
                v0_cpy(tmp_2_fu_687_p4_i) := shl_ln414_reg_887(24-1-tmp_2_fu_687_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(24-1 downto 0)))));
        res_mask := res_mask(24-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_2_fu_687_p4 <= resvalue(24-1 downto 0);
    end process;

    
    tmp_3_fu_342_p4_proc : process(p_Val2_s_fu_106)
    variable vlo_cpy : STD_LOGIC_VECTOR(512+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(512+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(512 - 1 downto 0);
    variable tmp_3_fu_342_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(512 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(512 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(512 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(9 - 1 downto 0) := ap_const_lv32_1FF(9 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(9 - 1 downto 0) := ap_const_lv32_0(9 - 1 downto 0);
        v0_cpy := p_Val2_s_fu_106;
        if (vlo_cpy(9 - 1 downto 0) > vhi_cpy(9 - 1 downto 0)) then
            vhi_cpy(9-1 downto 0) := std_logic_vector(512-1-unsigned(ap_const_lv32_0(9-1 downto 0)));
            vlo_cpy(9-1 downto 0) := std_logic_vector(512-1-unsigned(ap_const_lv32_1FF(9-1 downto 0)));
            for tmp_3_fu_342_p4_i in 0 to 512-1 loop
                v0_cpy(tmp_3_fu_342_p4_i) := p_Val2_s_fu_106(512-1-tmp_3_fu_342_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(9-1 downto 0)))));

        section := (others=>'0');
        section(9-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(9-1 downto 0)) - unsigned(vlo_cpy(9-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(512-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_3_fu_342_p4 <= resvalue(512-1 downto 0);
    end process;

    tmp_fu_418_p4 <= grp_fu_173_p2(31 downto 9);
    trunc_ln1051_fu_415_p1 <= rem_load_reg_806(5 - 1 downto 0);
    trunc_ln1054_fu_520_p1 <= rem_load_reg_806(10 - 1 downto 0);
    trunc_ln358_fu_624_p1 <= p_Result_4_fu_619_p2(24 - 1 downto 0);
    trunc_ln414_1_fu_563_p1 <= add_ln1054_fu_506_p2(5 - 1 downto 0);
    trunc_ln414_fu_560_p1 <= rem_load_reg_806(5 - 1 downto 0);
    trunc_ln674_1_fu_334_p1 <= grp_fu_173_p2(10 - 1 downto 0);
    trunc_ln674_2_fu_338_p1 <= sub_ln1057_fu_323_p2(10 - 1 downto 0);
    trunc_ln674_fu_434_p1 <= grp_fu_173_p2(10 - 1 downto 0);
    xf_bits_per_clock_fu_239_p3 <= 
        last_blk_width_1_reg_771 when (bLast_fu_234_p2(0) = '1') else 
        ap_const_lv4_8;
    xor_ln414_fu_720_p2 <= (ap_const_lv24_FFFFFF xor and_ln414_fu_714_p2);
    zext_ln1027_fu_216_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_152),32));
    zext_ln1044_1_fu_307_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1044_reg_822),6));
    zext_ln1044_fu_250_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1044_fu_246_p1),32));
    zext_ln1045_fu_261_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ptr_width_minus_fu_254_p3),32));
    zext_ln1057_fu_319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1057_fu_313_p3),32));
    zext_ln414_1_fu_595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln414_2_fu_581_p3),24));
    zext_ln414_2_fu_680_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln414_1_fu_675_p3),24));
    zext_ln414_3_fu_684_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln414_2_reg_882),24));
    zext_ln414_fu_652_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln414_fu_647_p2),24));
    zext_ln674_1_fu_629_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln674_2_reg_856),512));
    zext_ln674_2_fu_535_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln674_1_fu_529_p2),512));
    zext_ln674_3_fu_400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln674_5_fu_386_p3),512));
    zext_ln674_4_fu_610_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln674_7_reg_836),512));
    zext_ln674_fu_496_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln674_2_fu_482_p3),512));
end behav;
