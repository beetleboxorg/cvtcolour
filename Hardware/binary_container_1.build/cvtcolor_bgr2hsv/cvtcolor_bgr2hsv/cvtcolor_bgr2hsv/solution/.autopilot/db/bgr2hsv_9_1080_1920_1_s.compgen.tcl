# This script segment is generated automatically by AutoPilot

set id 70
set name cvtcolor_bgr2hsv_mul_32ns_32ns_64_1_1
set corename simcore_mul
set op mul
set stage_num 1
set max_latency -1
set registered_input 1
set in0_width 32
set in0_signed 0
set in1_width 32
set in1_signed 0
set out_width 64
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mul] == "ap_gen_simcore_mul"} {
eval "ap_gen_simcore_mul { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_mul, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op mul
set corename Multiplier
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_multicycle_mul] == "::AESL_LIB_VIRTEX::xil_gen_multicycle_mul"} {
eval "::AESL_LIB_VIRTEX::xil_gen_multicycle_mul { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_multicycle_mul, check your platform lib"
}
}


set id 71
set name cvtcolor_bgr2hsv_mac_muladd_8ns_20s_13ns_20_4_1
set corename simcore_mac
set op mac
set stage_num 4
set max_latency -1
set registered_input 1
set clk_width 1
set clk_signed 0
set reset_width 1
set reset_signed 0
set in0_width 8
set in0_signed 0
set in1_width 20
set in1_signed 1
set in2_width 13
set in2_signed 0
set ce_width 1
set ce_signed 0
set out_width 20
set exp i0*i1+i2
set arg_lists {i0 {8 0 +} i1 {20 1 +} m {20 1 +} i2 {13 0 +} p {20 1 +} c_reg {1} rnd {0} acc {0} }
set TrueReset 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mac] == "ap_gen_simcore_mac"} {
eval "ap_gen_simcore_mac { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    true_reset ${TrueReset} \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    in2_width ${in2_width} \
    in2_signed ${in2_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
    exp ${exp} \
    arg_lists {${arg_lists}} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_mac, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op mac
set corename DSP48
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_dsp48] == "::AESL_LIB_VIRTEX::xil_gen_dsp48"} {
eval "::AESL_LIB_VIRTEX::xil_gen_dsp48 { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    true_reset ${TrueReset} \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    in2_width ${in2_width} \
    in2_signed ${in2_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
    exp ${exp} \
    arg_lists {${arg_lists}} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_dsp48, check your platform lib"
}
}


set id 72
set name cvtcolor_bgr2hsv_ama_addmuladd_9s_13s_17ns_13ns_30_4_1
set corename simcore_ama
set op ama
set stage_num 4
set max_latency -1
set registered_input 1
set clk_width 1
set clk_signed 0
set reset_width 1
set reset_signed 0
set in0_width 9
set in0_signed 1
set in1_width 13
set in1_signed 1
set in2_width 17
set in2_signed 0
set in3_width 13
set in3_signed 0
set ce_width 1
set ce_signed 0
set out_width 30
set exp (i0+i1)*i2+i3
set arg_lists {i0 {9 1 +} i1 {13 1 +} s {14 1 +} i2 {17 0 +} m {30 1 +} i3 {13 0 +} p {30 1 +} c_expval {c} c_reg {1} rnd {0} acc {0} }
set TrueReset 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_ama] == "ap_gen_simcore_ama"} {
eval "ap_gen_simcore_ama { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    true_reset ${TrueReset} \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    in2_width ${in2_width} \
    in2_signed ${in2_signed} \
    in3_width ${in3_width} \
    in3_signed ${in3_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
    exp ${exp} \
    arg_lists {${arg_lists}} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_ama, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op ama
set corename DSP48
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_dsp48] == "::AESL_LIB_VIRTEX::xil_gen_dsp48"} {
eval "::AESL_LIB_VIRTEX::xil_gen_dsp48 { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    true_reset ${TrueReset} \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    in2_width ${in2_width} \
    in2_signed ${in2_signed} \
    in3_width ${in3_width} \
    in3_signed ${in3_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
    exp ${exp} \
    arg_lists {${arg_lists}} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_dsp48, check your platform lib"
}
}


# Memory (RAM/ROM)  definition:
set ID 76
set hasByteEnable 0
set MemName cvtcolor_bgr2hsv_bgr2hsv_9_1080_1920_1_s_xf_cv_icvSaturate8u_cv
set CoreName ap_simcore_mem
set PortList { 1 1 1 1 }
set DataWd 8
set AddrRange 769
set AddrWd 10
set impl_style auto
set TrueReset 0
set IsROM 1
set ROMData {}
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 1.237
set ClkPeriod 6.667
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 4 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 4 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 77
set hasByteEnable 0
set MemName cvtcolor_bgr2hsv_bgr2hsv_9_1080_1920_1_s_void_bgr2hsv_9_1080_1920_1_Mat_9_1080_1920_1_2_Mat_9_bkb
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 32
set AddrRange 256
set AddrWd 8
set impl_style auto
set TrueReset 0
set IsROM 1
set ROMData { "00000000000000000000000000000000" "00000000000011111111000000000000" "00000000000001111111100000000000" "00000000000001010101000000000000" "00000000000000111111110000000000" "00000000000000110011000000000000" "00000000000000101010100000000000" "00000000000000100100011011011011" "00000000000000011111111000000000" "00000000000000011100010101010101" "00000000000000011001100000000000" "00000000000000010111001011101001" "00000000000000010101010000000000" "00000000000000010011100111011001" "00000000000000010010001101101110" "00000000000000010001000000000000" "00000000000000001111111100000000" "00000000000000001111000000000000" "00000000000000001110001010101011" "00000000000000001101011010111101" "00000000000000001100110000000000" "00000000000000001100001001001001" "00000000000000001011100101110100" "00000000000000001011000101100100" "00000000000000001010101000000000" "00000000000000001010001100110011" "00000000000000001001110011101100" "00000000000000001001011100011100" "00000000000000001001000110110111" "00000000000000001000110010110001" "00000000000000001000100000000000" "00000000000000001000001110011101" "00000000000000000111111110000000" "00000000000000000111101110100011" "00000000000000000111100000000000" "00000000000000000111010010010010" "00000000000000000111000101010101" "00000000000000000110111001000101" "00000000000000000110101101011110" "00000000000000000110100010011110" "00000000000000000110011000000000" "00000000000000000110001110000011" "00000000000000000110000100100101" "00000000000000000101111011100010" "00000000000000000101110010111010" "00000000000000000101101010101011" "00000000000000000101100010110010" "00000000000000000101011011001111" "00000000000000000101010100000000" "00000000000000000101001101000100" "00000000000000000101000110011010" "00000000000000000101000000000000" "00000000000000000100111001110110" "00000000000000000100110011111011" "00000000000000000100101110001110" "00000000000000000100101000101111" "00000000000000000100100011011011" "00000000000000000100011110010100" "00000000000000000100011001011000" "00000000000000000100010100100111" "00000000000000000100010000000000" "00000000000000000100001011100011" "00000000000000000100000111001110" "00000000000000000100000011000011" "00000000000000000011111111000000" "00000000000000000011111011000101" "00000000000000000011110111010001" "00000000000000000011110011100101" "00000000000000000011110000000000" "00000000000000000011101100100001" "00000000000000000011101001001001" "00000000000000000011100101110111" "00000000000000000011100010101011" "00000000000000000011011111100100" "00000000000000000011011100100011" "00000000000000000011011001100110" "00000000000000000011010110101111" "00000000000000000011010011111101" "00000000000000000011010001001111" "00000000000000000011001110100101" "00000000000000000011001100000000" "00000000000000000011001001011111" "00000000000000000011000111000010" "00000000000000000011000100101000" "00000000000000000011000010010010" "00000000000000000011000000000000" "00000000000000000010111101110001" "00000000000000000010111011100110" "00000000000000000010111001011101" "00000000000000000010110111011000" "00000000000000000010110101010101" "00000000000000000010110011010110" "00000000000000000010110001011001" "00000000000000000010101111011111" "00000000000000000010101101100111" "00000000000000000010101011110011" "00000000000000000010101010000000" "00000000000000000010101000010000" "00000000000000000010100110100010" "00000000000000000010100100110110" "00000000000000000010100011001101" "00000000000000000010100001100101" "00000000000000000010100000000000" "00000000000000000010011110011101" "00000000000000000010011100111011" "00000000000000000010011011011011" "00000000000000000010011001111110" "00000000000000000010011000100001" "00000000000000000010010111000111" "00000000000000000010010101101110" "00000000000000000010010100010111" "00000000000000000010010011000010" "00000000000000000010010001101110" "00000000000000000010010000011011" "00000000000000000010001111001010" "00000000000000000010001101111010" "00000000000000000010001100101100" "00000000000000000010001011011111" "00000000000000000010001010010100" "00000000000000000010001001001001" "00000000000000000010001000000000" "00000000000000000010000110111000" "00000000000000000010000101110001" "00000000000000000010000100101100" "00000000000000000010000011100111" "00000000000000000010000010100100" "00000000000000000010000001100010" "00000000000000000010000000100000" "00000000000000000001111111100000" "00000000000000000001111110100001" "00000000000000000001111101100010" "00000000000000000001111100100101" "00000000000000000001111011101001" "00000000000000000001111010101101" "00000000000000000001111001110011" "00000000000000000001111000111001" "00000000000000000001111000000000" "00000000000000000001110111001000" "00000000000000000001110110010001" "00000000000000000001110101011010" "00000000000000000001110100100101" "00000000000000000001110011110000" "00000000000000000001110010111011" "00000000000000000001110010001000" "00000000000000000001110001010101" "00000000000000000001110000100011" "00000000000000000001101111110010" "00000000000000000001101111000001" "00000000000000000001101110010001" "00000000000000000001101101100010" "00000000000000000001101100110011" "00000000000000000001101100000101" "00000000000000000001101011011000" "00000000000000000001101010101011" "00000000000000000001101001111110" "00000000000000000001101001010011" "00000000000000000001101000100111" "00000000000000000001100111111101" "00000000000000000001100111010011" "00000000000000000001100110101001" "00000000000000000001100110000000" "00000000000000000001100101010111" "00000000000000000001100100101111" "00000000000000000001100100001000" "00000000000000000001100011100001" "00000000000000000001100010111010" "00000000000000000001100010010100" "00000000000000000001100001101110" "00000000000000000001100001001001" "00000000000000000001100000100100" "00000000000000000001100000000000" "00000000000000000001011111011100" "00000000000000000001011110111001" "00000000000000000001011110010101" "00000000000000000001011101110011" "00000000000000000001011101010000" "00000000000000000001011100101111" "00000000000000000001011100001101" "00000000000000000001011011101100" "00000000000000000001011011001011" "00000000000000000001011010101011" "00000000000000000001011010001011" "00000000000000000001011001101011" "00000000000000000001011001001100" "00000000000000000001011000101101" "00000000000000000001011000001110" "00000000000000000001010111101111" "00000000000000000001010111010001" "00000000000000000001010110110100" "00000000000000000001010110010110" "00000000000000000001010101111001" "00000000000000000001010101011100" "00000000000000000001010101000000" "00000000000000000001010100100100" "00000000000000000001010100001000" "00000000000000000001010011101100" "00000000000000000001010011010001" "00000000000000000001010010110110" "00000000000000000001010010011011" "00000000000000000001010010000001" "00000000000000000001010001100110" "00000000000000000001010001001100" "00000000000000000001010000110011" "00000000000000000001010000011001" "00000000000000000001010000000000" "00000000000000000001001111100111" "00000000000000000001001111001110" "00000000000000000001001110110110" "00000000000000000001001110011110" "00000000000000000001001110000110" "00000000000000000001001101101110" "00000000000000000001001101010110" "00000000000000000001001100111111" "00000000000000000001001100101000" "00000000000000000001001100010001" "00000000000000000001001011111010" "00000000000000000001001011100100" "00000000000000000001001011001101" "00000000000000000001001010110111" "00000000000000000001001010100001" "00000000000000000001001010001100" "00000000000000000001001001110110" "00000000000000000001001001100001" "00000000000000000001001001001100" "00000000000000000001001000110111" "00000000000000000001001000100010" "00000000000000000001001000001110" "00000000000000000001000111111001" "00000000000000000001000111100101" "00000000000000000001000111010001" "00000000000000000001000110111101" "00000000000000000001000110101010" "00000000000000000001000110010110" "00000000000000000001000110000011" "00000000000000000001000101110000" "00000000000000000001000101011101" "00000000000000000001000101001010" "00000000000000000001000100110111" "00000000000000000001000100100101" "00000000000000000001000100010010" "00000000000000000001000100000000" "00000000000000000001000011101110" "00000000000000000001000011011100" "00000000000000000001000011001010" "00000000000000000001000010111001" "00000000000000000001000010100111" "00000000000000000001000010010110" "00000000000000000001000010000101" "00000000000000000001000001110100" "00000000000000000001000001100011" "00000000000000000001000001010010" "00000000000000000001000001000001" "00000000000000000001000000110001" "00000000000000000001000000100000" "00000000000000000001000000010000" "00000000000000000001000000000000" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 1.237
set ClkPeriod 6.667
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 78
set hasByteEnable 0
set MemName cvtcolor_bgr2hsv_bgr2hsv_9_1080_1920_1_s_void_bgr2hsv_9_1080_1920_1_Mat_9_1080_1920_1_2_Mat_9_cud
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 32
set AddrRange 256
set AddrWd 8
set impl_style auto
set TrueReset 0
set IsROM 1
set ROMData { "00000000000000000000000000000000" "00000000000000011110000000000000" "00000000000000001111000000000000" "00000000000000001010000000000000" "00000000000000000111100000000000" "00000000000000000110000000000000" "00000000000000000101000000000000" "00000000000000000100010010010010" "00000000000000000011110000000000" "00000000000000000011010101010101" "00000000000000000011000000000000" "00000000000000000010101110100011" "00000000000000000010100000000000" "00000000000000000010010011101100" "00000000000000000010001001001001" "00000000000000000010000000000000" "00000000000000000001111000000000" "00000000000000000001110000111100" "00000000000000000001101010101011" "00000000000000000001100101000011" "00000000000000000001100000000000" "00000000000000000001011011011011" "00000000000000000001010111010001" "00000000000000000001010011011111" "00000000000000000001010000000000" "00000000000000000001001100110011" "00000000000000000001001001110110" "00000000000000000001000111000111" "00000000000000000001000100100101" "00000000000000000001000010001101" "00000000000000000001000000000000" "00000000000000000000111101111100" "00000000000000000000111100000000" "00000000000000000000111010001100" "00000000000000000000111000011110" "00000000000000000000110110110111" "00000000000000000000110101010101" "00000000000000000000110011111001" "00000000000000000000110010100010" "00000000000000000000110001001111" "00000000000000000000110000000000" "00000000000000000000101110110101" "00000000000000000000101101101110" "00000000000000000000101100101010" "00000000000000000000101011101001" "00000000000000000000101010101011" "00000000000000000000101001101111" "00000000000000000000101000110110" "00000000000000000000101000000000" "00000000000000000000100111001100" "00000000000000000000100110011010" "00000000000000000000100101101001" "00000000000000000000100100111011" "00000000000000000000100100001110" "00000000000000000000100011100100" "00000000000000000000100010111010" "00000000000000000000100010010010" "00000000000000000000100001101100" "00000000000000000000100001000111" "00000000000000000000100000100011" "00000000000000000000100000000000" "00000000000000000000011111011110" "00000000000000000000011110111110" "00000000000000000000011110011110" "00000000000000000000011110000000" "00000000000000000000011101100010" "00000000000000000000011101000110" "00000000000000000000011100101010" "00000000000000000000011100001111" "00000000000000000000011011110101" "00000000000000000000011011011011" "00000000000000000000011011000011" "00000000000000000000011010101011" "00000000000000000000011010010011" "00000000000000000000011001111101" "00000000000000000000011001100110" "00000000000000000000011001010001" "00000000000000000000011000111100" "00000000000000000000011000100111" "00000000000000000000011000010011" "00000000000000000000011000000000" "00000000000000000000010111101101" "00000000000000000000010111011011" "00000000000000000000010111001000" "00000000000000000000010110110111" "00000000000000000000010110100110" "00000000000000000000010110010101" "00000000000000000000010110000100" "00000000000000000000010101110100" "00000000000000000000010101100101" "00000000000000000000010101010101" "00000000000000000000010101000110" "00000000000000000000010100111000" "00000000000000000000010100101001" "00000000000000000000010100011011" "00000000000000000000010100001101" "00000000000000000000010100000000" "00000000000000000000010011110011" "00000000000000000000010011100110" "00000000000000000000010011011001" "00000000000000000000010011001101" "00000000000000000000010011000001" "00000000000000000000010010110101" "00000000000000000000010010101001" "00000000000000000000010010011110" "00000000000000000000010010010010" "00000000000000000000010010000111" "00000000000000000000010001111100" "00000000000000000000010001110010" "00000000000000000000010001100111" "00000000000000000000010001011101" "00000000000000000000010001010011" "00000000000000000000010001001001" "00000000000000000000010000111111" "00000000000000000000010000110110" "00000000000000000000010000101101" "00000000000000000000010000100011" "00000000000000000000010000011010" "00000000000000000000010000010001" "00000000000000000000010000001001" "00000000000000000000010000000000" "00000000000000000000001111111000" "00000000000000000000001111101111" "00000000000000000000001111100111" "00000000000000000000001111011111" "00000000000000000000001111010111" "00000000000000000000001111001111" "00000000000000000000001111001000" "00000000000000000000001111000000" "00000000000000000000001110111001" "00000000000000000000001110110001" "00000000000000000000001110101010" "00000000000000000000001110100011" "00000000000000000000001110011100" "00000000000000000000001110010101" "00000000000000000000001110001110" "00000000000000000000001110001000" "00000000000000000000001110000001" "00000000000000000000001101111010" "00000000000000000000001101110100" "00000000000000000000001101101110" "00000000000000000000001101100111" "00000000000000000000001101100001" "00000000000000000000001101011011" "00000000000000000000001101010101" "00000000000000000000001101001111" "00000000000000000000001101001010" "00000000000000000000001101000100" "00000000000000000000001100111110" "00000000000000000000001100111001" "00000000000000000000001100110011" "00000000000000000000001100101110" "00000000000000000000001100101000" "00000000000000000000001100100011" "00000000000000000000001100011110" "00000000000000000000001100011001" "00000000000000000000001100010100" "00000000000000000000001100001111" "00000000000000000000001100001010" "00000000000000000000001100000101" "00000000000000000000001100000000" "00000000000000000000001011111011" "00000000000000000000001011110111" "00000000000000000000001011110010" "00000000000000000000001011101101" "00000000000000000000001011101001" "00000000000000000000001011100100" "00000000000000000000001011100000" "00000000000000000000001011011011" "00000000000000000000001011010111" "00000000000000000000001011010011" "00000000000000000000001011001111" "00000000000000000000001011001010" "00000000000000000000001011000110" "00000000000000000000001011000010" "00000000000000000000001010111110" "00000000000000000000001010111010" "00000000000000000000001010110110" "00000000000000000000001010110010" "00000000000000000000001010101110" "00000000000000000000001010101011" "00000000000000000000001010100111" "00000000000000000000001010100011" "00000000000000000000001010011111" "00000000000000000000001010011100" "00000000000000000000001010011000" "00000000000000000000001010010101" "00000000000000000000001010010001" "00000000000000000000001010001110" "00000000000000000000001010001010" "00000000000000000000001010000111" "00000000000000000000001010000011" "00000000000000000000001010000000" "00000000000000000000001001111101" "00000000000000000000001001111001" "00000000000000000000001001110110" "00000000000000000000001001110011" "00000000000000000000001001110000" "00000000000000000000001001101101" "00000000000000000000001001101001" "00000000000000000000001001100110" "00000000000000000000001001100011" "00000000000000000000001001100000" "00000000000000000000001001011101" "00000000000000000000001001011010" "00000000000000000000001001010111" "00000000000000000000001001010101" "00000000000000000000001001010010" "00000000000000000000001001001111" "00000000000000000000001001001100" "00000000000000000000001001001001" "00000000000000000000001001000110" "00000000000000000000001001000100" "00000000000000000000001001000001" "00000000000000000000001000111110" "00000000000000000000001000111100" "00000000000000000000001000111001" "00000000000000000000001000110110" "00000000000000000000001000110100" "00000000000000000000001000110001" "00000000000000000000001000101111" "00000000000000000000001000101100" "00000000000000000000001000101010" "00000000000000000000001000100111" "00000000000000000000001000100101" "00000000000000000000001000100010" "00000000000000000000001000100000" "00000000000000000000001000011101" "00000000000000000000001000011011" "00000000000000000000001000011001" "00000000000000000000001000010110" "00000000000000000000001000010100" "00000000000000000000001000010010" "00000000000000000000001000001111" "00000000000000000000001000001101" "00000000000000000000001000001011" "00000000000000000000001000001001" "00000000000000000000001000000110" "00000000000000000000001000000100" "00000000000000000000001000000010" "00000000000000000000001000000000" "00000000000000000000000111111110" "00000000000000000000000111111100" "00000000000000000000000111111010" "00000000000000000000000111111000" "00000000000000000000000111110110" "00000000000000000000000111110100" "00000000000000000000000111110001" "00000000000000000000000111101111" "00000000000000000000000111101101" "00000000000000000000000111101100" "00000000000000000000000111101010" "00000000000000000000000111101000" "00000000000000000000000111100110" "00000000000000000000000111100100" "00000000000000000000000111100010" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 1.237
set ClkPeriod 6.667
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# clear list
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_begin
    cg_default_interface_gen_bundle_begin
    AESL_LIB_XILADAPTER::native_axis_begin
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id 79 \
    name imgInput0_413 \
    type fifo \
    dir I \
    reset_level 1 \
    sync_rst true \
    corename dc_imgInput0_413 \
    op interface \
    ports { imgInput0_413_dout { I 24 vector } imgInput0_413_empty_n { I 1 bit } imgInput0_413_read { O 1 bit } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id 80 \
    name imgOutput0_414 \
    type fifo \
    dir O \
    reset_level 1 \
    sync_rst true \
    corename dc_imgOutput0_414 \
    op interface \
    ports { imgOutput0_414_din { O 24 vector } imgOutput0_414_full_n { I 1 bit } imgOutput0_414_write { O 1 bit } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id 81 \
    name p_src_mat_1 \
    type fifo \
    dir I \
    reset_level 1 \
    sync_rst true \
    corename dc_p_src_mat_1 \
    op interface \
    ports { p_src_mat_1_dout { I 32 vector } p_src_mat_1_empty_n { I 1 bit } p_src_mat_1_read { O 1 bit } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id 82 \
    name p_src_mat_2 \
    type fifo \
    dir I \
    reset_level 1 \
    sync_rst true \
    corename dc_p_src_mat_2 \
    op interface \
    ports { p_src_mat_2_dout { I 32 vector } p_src_mat_2_empty_n { I 1 bit } p_src_mat_2_read { O 1 bit } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id -1 \
    name ap_ctrl \
    type ap_ctrl \
    reset_level 1 \
    sync_rst true \
    corename ap_ctrl \
    op interface \
    ports { ap_start { I 1 bit } ap_ready { O 1 bit } ap_done { O 1 bit } ap_idle { O 1 bit } ap_continue { I 1 bit } } \
} "
}


# Adapter definition:
set PortName ap_clk
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_clock] == "cg_default_interface_gen_clock"} {
eval "cg_default_interface_gen_clock { \
    id -2 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_clk \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-113\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}


# Adapter definition:
set PortName ap_rst
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_reset] == "cg_default_interface_gen_reset"} {
eval "cg_default_interface_gen_reset { \
    id -3 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_rst \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-114\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}



# merge
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_end
    cg_default_interface_gen_bundle_end
    AESL_LIB_XILADAPTER::native_axis_end
}


